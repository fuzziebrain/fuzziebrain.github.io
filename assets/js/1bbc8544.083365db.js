"use strict";(self.webpackChunknewsite=self.webpackChunknewsite||[]).push([[17767],{47816:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var s=t(85893),o=t(11151);const i={title:"Invoking Oracle Cloud Functions Made Easy",description:"Invoke Oracle Cloud Infrastructure Functions using SQL functions.",image:"./assets/person-making-a-call.png",tags:["functions","serverless","oci","oracle apex"],categories:["Technology - Infrastructure - Oracle Cloud"],last_update:{authors:["fuzziebrain"],date:new Date("2023-10-08T22:00:00.000Z")}},a=void 0,r={id:"oracle-cloud/cloud-native/invoking-oracle-cloud-functions-made-easy/index",title:"Invoking Oracle Cloud Functions Made Easy",description:"Invoke Oracle Cloud Infrastructure Functions using SQL functions.",source:"@site/notes/oracle-cloud/cloud-native/invoking-oracle-cloud-functions-made-easy/index.md",sourceDirName:"oracle-cloud/cloud-native/invoking-oracle-cloud-functions-made-easy",slug:"/oracle-cloud/cloud-native/invoking-oracle-cloud-functions-made-easy/",permalink:"/tech-tnt/oracle-cloud/cloud-native/invoking-oracle-cloud-functions-made-easy/",draft:!1,unlisted:!1,tags:[{label:"functions",permalink:"/tech-tnt/tags/functions"},{label:"serverless",permalink:"/tech-tnt/tags/serverless"},{label:"oci",permalink:"/tech-tnt/tags/oci"},{label:"oracle apex",permalink:"/tech-tnt/tags/oracle-apex"}],version:"current",lastUpdatedBy:"Adrian Png",lastUpdatedAt:1696802400,formattedLastUpdatedAt:"Oct 8, 2023",frontMatter:{title:"Invoking Oracle Cloud Functions Made Easy",description:"Invoke Oracle Cloud Infrastructure Functions using SQL functions.",image:"./assets/person-making-a-call.png",tags:["functions","serverless","oci","oracle apex"],categories:["Technology - Infrastructure - Oracle Cloud"],last_update:{authors:["fuzziebrain"],date:"2023-10-08T22:00:00.000Z"}},sidebar:"tutorialSidebar",previous:{title:"Cloud Native",permalink:"/tech-tnt/category/cloud-native"},next:{title:"DevOps",permalink:"/tech-tnt/category/devops"}},c={image:t(98606).Z},l=[{value:"Task 1 - Set Up Prerequisites OCI Resources",id:"task-1---set-up-prerequisites-oci-resources",level:2},{value:"Task 2 - Set Up Development Environment",id:"task-2---set-up-development-environment",level:2},{value:"Task 3 - Prepare Autonomous Database Schema",id:"task-3---prepare-autonomous-database-schema",level:2},{value:"Task 4 - Create the OCI Function",id:"task-4---create-the-oci-function",level:2},{value:"Task 5 - Create the SQL Function",id:"task-5---create-the-sql-function",level:2},{value:"Task 6 - Invoke the OCI Function Using Its SQL Function",id:"task-6---invoke-the-oci-function-using-its-sql-function",level:2},{value:"Important Notes",id:"important-notes",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components},{Youtube:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Youtube",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"A person making a call.",src:t(22455).Z+"",width:"1280",height:"720"})}),"\n",(0,s.jsxs)(n.p,{children:["I have a huge passion for the ",(0,s.jsx)(n.a,{href:"https://www.oracle.com/autonomous-database",children:"Oracle Autonomous Database"})," (ADB) for many reasons. Besides its comprehensive set of built-in features, and mostly hands-off management, what I really appreciate is the constant introduction of new add-ons that allows us to implement compelling cloud-based solutions for our clients. In this month's release, Oracle announced a new method for invoking serverless functions either hosted on the ",(0,s.jsx)(n.a,{href:"https://oracle.com/cloud",children:"Oracle Cloud Infrastructure"}),", or ",(0,s.jsx)(n.a,{href:"https://aws.amazon.com",children:"Amazon Web Services"}),", as SQL functions."]}),"\n",(0,s.jsxs)(n.p,{children:["OCI ",(0,s.jsx)(n.a,{href:"https://www.oracle.com/cloud/cloud-native/functions/",children:"Functions"})," is Oracle's answer to serverless computing. This cloud native service allows developers to decompose applications to single functions, and implement them using the most suitable or preferred programming language. In Functions, these units of code are deployed as ",(0,s.jsx)(n.a,{href:"https://www.docker.com",children:"Docker"})," containers on the OCI's managed infrastructure. It is based on the open source ",(0,s.jsx)(n.a,{href:"https://fnproject.io/",children:"Fn Project"}),", and using this toolkit, developers can write solutions in Go, Java, Node.JS, Python, Ruby, or C#."]}),"\n",(0,s.jsxs)(n.p,{children:['I did a presentation entitled "Offload Data Processing with Serverless Computing" at ',(0,s.jsx)(n.em,{children:"Kscope21"})," that covers this topic in depth, and again at the ",(0,s.jsx)(n.a,{href:"https://apacgbt.mykommu.com/",children:(0,s.jsx)(n.em,{children:"Oracle Groundbreaker APAC Virtual Tour 2021"})}),". The latter presentation was recorded, and is included below for your convenience."]}),"\n",(0,s.jsx)(i,{videoId:"KQFsBBuW3Zg"}),"\n",(0,s.jsxs)(n.p,{children:["Functions are invoked by either using the Fn command line interface (CLI) tool, OCI CLI, OCI SDKs, or a signed HTTP request to the function's invoke endpoint. For ",(0,s.jsx)(n.a,{href:"https://apex.oracle.com",children:"Oracle APEX"})," applications, we can use the ",(0,s.jsx)(n.code,{children:"APEX_WEB_SERVICE"})," PL/SQL API and the OCI ",(0,s.jsx)(n.em,{children:"Web Credentials"})," to invoke the function. And if you are on the ADB, you may also use the OCI PL/SQL SDK to do the same. With this month's announcement, if you are on the ADB, there is a third, and in my opinion, more intuitive interface to serverless functions (including AWS Lambda)."]}),"\n",(0,s.jsx)(n.p,{children:"A new PL/SQL API and supporting database views are now available to developers to hide some of the intricacies of invoking serverless functions, condensing the process to a simple SQL function call. For example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select\n  json_value(\n    json_value(\n      sayhello(params => json_object(key 'name' value 'Adrian'))\n      , '$.RESPONSE_BODY'\n    )\n    , '$.message'\n  ) as message\nfrom dual;\n\n-- Returns the value: Hello Adrian\n"})}),"\n",(0,s.jsx)(n.p,{children:'Let\'s look at how we can quickly set up a simple "Helloworld" to get started.'}),"\n",(0,s.jsx)(n.h2,{id:"task-1---set-up-prerequisites-oci-resources",children:"Task 1 - Set Up Prerequisites OCI Resources"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"NOTE"})}),"\n",(0,s.jsxs)(n.p,{children:["For the presentation, I had included a ",(0,s.jsx)(n.a,{href:"https://jupyter.org",children:"Jupyter"})," ",(0,s.jsx)(n.a,{href:"https://github.com/fuzziebrain/get-started-serverless-computing/blob/main/01-setup-development-environment.ipynb",children:"notebook"})," that contains detailed, step-by-step instructions to set up your OCI and Functions development environment."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"To prepare your OCI tenancy for Functions, you will need to create a variety of resources. They are:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["A compartment named ",(0,s.jsx)(n.em,{children:"DEMO"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.em,{children:"Virtual Cloud Network"})," (VCN) named ",(0,s.jsx)(n.em,{children:"VCN-Demo"})," using the wizard with one public and one private subnet."]}),"\n",(0,s.jsxs)(n.li,{children:["Two ",(0,s.jsx)(n.em,{children:"Identity and Access Management"})," (IAM) Groups named ",(0,s.jsx)(n.em,{children:"FunctionsDevelopers"})," and ",(0,s.jsx)(n.em,{children:"DemoAgents"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.em,{children:"Policy"})," in IAM named ",(0,s.jsx)(n.em,{children:"Fn-Development-Policy"})," with the following statements:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Allow group FunctionsDevelopers to manage repos in tenancy\nAllow group FunctionsDevelopers to read objectstorage-namespaces in tenancy\nAllow group FunctionsDevelopers to use virtual-network-family in compartment DEMO\nAllow group FunctionsDevelopers to manage functions-family in compartment DEMO\nAllow group FunctionsDevelopers to read metrics in compartment DEMO\nAllow group FunctionsDevelopers to use apm-domains in compartment DEMO\nAllow service faas to use apm-domains in compartment DEMO\n"})}),"\n","These statements allows users in the ",(0,s.jsx)(n.em,{children:"FunctionsDevelopers"})," group to successfully create Functions applications and functions."]}),"\n",(0,s.jsxs)(n.li,{children:["A second ",(0,s.jsx)(n.em,{children:"Policy"})," in IAM named ",(0,s.jsx)(n.em,{children:"Fn-Demo-Policy"})," with the following statements:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"allow group DemoAgents to use fn-invocation in compartment DEMO\nallow group DemoAgents to inspect functions-family in compartment DEMO\n"})}),"\n","These statements allow users in the ",(0,s.jsx)(n.em,{children:"DemoAgents"})," group to list and invoke functions in the compartment ",(0,s.jsx)(n.em,{children:"DEMO"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Two IAM Users named ",(0,s.jsx)(n.em,{children:"fndev"})," and ",(0,s.jsx)(n.em,{children:"demoagent"}),". The first user will be used for create, deploying, and managing functions, and the second, will be used by the database schema to invoke the functions."]}),"\n",(0,s.jsxs)(n.li,{children:["Add the user ",(0,s.jsx)(n.em,{children:"fndev"})," to group ",(0,s.jsx)(n.em,{children:"FunctionsDevelopers"}),", and ",(0,s.jsx)(n.em,{children:"demoagent"})," to ",(0,s.jsx)(n.em,{children:"DemoAgents"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Generate API Keys for both users using the OCI console. Download both the API private and public keys. Copy the generated configuration templates and store them. You will need them later to configure the Functions development environment and the ADB credentials. Specifically, you will need:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Tenancy OCID"}),"\n",(0,s.jsx)(n.li,{children:"User OCID"}),"\n",(0,s.jsx)(n.li,{children:"Fingerprint; and"}),"\n",(0,s.jsx)(n.li,{children:"Private key"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Generate an ",(0,s.jsx)(n.em,{children:"Auth Token"})," for user ",(0,s.jsx)(n.em,{children:"fndev"}),". This is needed to login to the ",(0,s.jsx)(n.em,{children:"Oracle Cloud Infrastructure Registry"})," (OCIR) is a Docker/container registry hosted and managed in your OCI tenancy."]}),"\n",(0,s.jsxs)(n.li,{children:["If you haven't already done so, provision an ADB, and then create a schema named ",(0,s.jsx)(n.em,{children:"DEMO"})," for this tutorial."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"task-2---set-up-development-environment",children:"Task 2 - Set Up Development Environment"}),"\n",(0,s.jsx)(n.p,{children:"There are three options for developing with OCI Functions, you may create functions using:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Cloud Shell"}),"\n",(0,s.jsx)(n.li,{children:"A local machine"}),"\n",(0,s.jsx)(n.li,{children:"An OCI compute instance (using instance principal)"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The easiest, fastest, and cheapest option to get started is to use ",(0,s.jsx)(n.a,{href:"https://docs.oracle.com/iaas/Content/API/Concepts/cloudshellintro.htm",children:(0,s.jsx)(n.em,{children:"Cloud Shell"})}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Upon initializing your Cloud Shell environment, a context would have already been created for you, and it will be named based on the current selected region, e.g., ",(0,s.jsx)(n.code,{children:"us-phoenix-1"}),". Running the ",(0,s.jsx)(n.code,{children:"fn ls context"})," should return the following output:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"myusername@cloudshell:~ (us-phoenix-1)$ fn ls context\nCURRENT NAME            PROVIDER        API URL                                                 REGISTRY\n        default         oracle-cs\n*       us-phoenix-1    oracle-cs       https://functions.us-phoenix-1.oci.oraclecloud.com\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"*"})," indicates the currently selected context for working with Functions. If that hasn't already been selected, then run the command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"fn use context $OCI_REGION\n"})}),"\n",(0,s.jsx)(n.p,{children:"This context configuration will be missing required attributes, and they are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"compartment"})," where the functions will be deployed in."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"OCIR repository address"})," where the Docker or container images for your functions will be deployed to."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"To configure these attributes in the Cloud Shell environment, first, set the required environment variables:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"REPO_NAME=myrepo\nCOMPARTMENT_OCID=ocid1.compartment.oc1.....\nIMAGES_COMPARTMENT_OCID=${OCI_TENANCY}  # Alternatively, you may specify the compartment OCID.\nNAMESPACE=$(echo $(oci os ns get) | jq -r '.data') # Example value returned: mynamespace\nREGION_KEY=$(echo $(oci iam region list) | jq -r --arg region_name \"${OCI_REGION}\" '.data[] | select(.name == $region_name) .key | ascii_downcase')\nOCIR_REPO_ADDRESS=${REGION_KEY}.ocir.io/${NAMESPACE}/${REPO_NAME}\n"})}),"\n",(0,s.jsx)(n.p,{children:"And then update the context with these values using the command below:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"fn update context registry ${OCIR_REPO_ADDRESS} && \\\nfn update context oracle.image-compartment-id ${IMAGES_COMPARTMENT_OCID} && \\\nfn update context oracle.compartment-id ${COMPARTMENT_OCID}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Check that all context attributes are set correctly using the ",(0,s.jsx)(n.code,{children:"fn inspect context"})," command. Below is an example of the output:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ fn inspect context\nCurrent context: us-phoenix-1\n\napi-url: https://functions.us-phoenix-1.oci.oraclecloud.com\noracle.compartment-id: ocid1.compartment.oc1.....\noracle.image-compartment-id: ocid1.tenancy.oc1.....\nprovider: oracle-cs\nregistry: phx.ocir.io/mynamespace/myrepo\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Next, you will need to login to the OCIR using the IAM user, e.g., ",(0,s.jsx)(n.em,{children:"fndev"}),", using the auth token, and ",(0,s.jsx)(n.strong,{children:"not"})," its password. Begin by setting the ",(0,s.jsx)(n.code,{children:"IAM_USERNAME"})," environment variable:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"IAM_USERNAME=my_iam_username\n"})}),"\n",(0,s.jsx)(n.p,{children:"Then, read the auth token from the command line:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"read -s AUTH_TOKEN\n"})}),"\n",(0,s.jsx)(n.p,{children:"Finally, login to the OCIR using the command below:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker login -u '${NAMESPACE}/${IAM_USERNAME}' ${REGION_KEY}.ocir.io\n"})}),"\n",(0,s.jsx)(n.h2,{id:"task-3---prepare-autonomous-database-schema",children:"Task 3 - Prepare Autonomous Database Schema"}),"\n",(0,s.jsxs)(n.p,{children:["To allow a database schema to create a catalog and user-defined functions for Functions, the target schema must be granted the minimum privileges. Execute the following grant statements as the ADB's ",(0,s.jsx)(n.em,{children:"ADMIN"})," user:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"define schema = demo\ngrant execute on dbms_cloud_function to &schema;\ngrant execute on dbms_cloud_oci_fnc_functions_invoke to &schema;\ngrant execute on dbms_cloud_oci_fnc_functions_invoke_invoke_function_response_t to &schema;\ngrant execute on dbms_cloud to &schema;\ngrant read on user_cloud_function to &schema;\ngrant read on user_cloud_function_catalog to &schema;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"task-4---create-the-oci-function",children:"Task 4 - Create the OCI Function"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"NOTE"})}),"\n",(0,s.jsxs)(n.p,{children:["A second ",(0,s.jsx)(n.a,{href:"https://github.com/fuzziebrain/get-started-serverless-computing/blob/main/02-create-and-deploy-project.ipynb",children:"Jupyter notebook"})," from my presentation guides you through Functions development and deployment, and might be a useful resource if you get stuck here."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"In this task, we will work within Cloud Shell to:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Create the Functions application."}),"\n",(0,s.jsx)(n.li,{children:'Generate the boilerplate code for a Python runtime, which is out-of-the-box, a working "Helloworld" function.'}),"\n",(0,s.jsx)(n.li,{children:"Deploy the function; and then"}),"\n",(0,s.jsx)(n.li,{children:"Invoke the function using the Fn CLI."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The Functions application must be assigned a subnet to deploy to. Typically, I put applications in a private subnet. Set the environment variables for the subnet's OCID, Functions application, and function names:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"SUBNET_OCID=ocid1.subnet.oc1.phx....\nAPP_NAME=cloudfunc\nFN_NAME=sayhello\n"})}),"\n",(0,s.jsx)(n.p,{children:"Next, create the Functions application using the command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'\nfn create app $APP_NAME \\\\n--annotation "oracle.com/oci/subnetIds=[\\"$SUBNET_OCID\\"]"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Then, create the boilerplate code for functions that uses the Python runtime:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"fn init --runtime python $FN_NAME\n"})}),"\n",(0,s.jsx)(n.p,{children:"This should create a new directory named after the function, with the following files:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"func.py"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"func.yaml"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"requirements.txt"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"func.py"}),' contains functional Python to print the desired "Helloworld" output.']}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import io\nimport json\nimport logging\n\nfrom fdk import response\n\n\ndef handler(ctx, data: io.BytesIO = None):\n    name = "World"\n    try:\n        body = json.loads(data.getvalue())\n        name = body.get("name")\n    except (Exception, ValueError) as ex:\n        logging.getLogger().info(\'error parsing json payload: \' + str(ex))\n\n    logging.getLogger().info("Inside Python Hello World function")\n    return response.Response(\n        ctx, response_data=json.dumps(\n            {"message": "Hello {0}".format(name)}),\n        headers={"Content-Type": "application/json"}\n    )\n\n'})}),"\n",(0,s.jsx)(n.p,{children:"You may modify the code later, but for the purpose of this tutorial, simply deploy the function:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"fn deploy --app $APP_NAME --no-bump # The no-bump argument prevents the Fn CLI from incrementing the version number.\n"})}),"\n",(0,s.jsx)(n.p,{children:"The deployment process will build a container image in the Cloud Shell environment, deploy the container image, and create the function. To test that the deployment was successful, invoke the function using the FN CLI:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'echo "{\\"name\\":\\"Adrian\\"}" | fn invoke $APP_NAME $FN_NAME\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The command sends the JSON ",(0,s.jsx)(n.code,{children:'{"name":"Adrian}'})," in the request body, and should yield the following JSON output:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'{"message": "Hello Adrian"}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"task-5---create-the-sql-function",children:"Task 5 - Create the SQL Function"}),"\n",(0,s.jsxs)(n.p,{children:["After successfully deploying the function, login to the database schema for your application, i.e., ",(0,s.jsx)(n.em,{children:"DEMO"}),", using your favourite database tool. Define the following variables:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"define credential_name = 'DEMO_CRED'\ndefine catalog_name = 'DEMO_CATALOG'\ndefine region_id = 'us-phoenix-1'\ndefine compartment_ocid = 'ocid1.compartment.oc1.....'\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Tweak the values as required. Then, create the cloud credentials for the IAM user, ",(0,s.jsx)(n.em,{children:"demoagent"}),". In the PL/SQL procedure below, replace the ",(0,s.jsx)(n.code,{children:"l_private_key"})," variable with the private key you had generated earlier in Task 1, and then execute the code:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"declare\n  l_private_key varchar2(32767) := q'[\n-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCzgZ/NK88mbeSD\n...\nBtQ5XBc67Rlf46C/Vw8fxMPb\n-----END PRIVATE KEY-----\n  ]';\nbegin\n  dbms_cloud.create_credential(\n    credential_name => '&credential_name'\n    , user_ocid => 'ocid1.user.oc1.....'\n    , tenancy_ocid => 'ocid1.tenancy.oc1.....'\n    , private_key => trim(l_private_key)\n    , fingerprint => '10:...:38'\n  );\nend;\n/\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"NOTE"})}),"\n",(0,s.jsx)(n.p,{children:"[Update, 2023-10-12] It appears that the documentation has been updated."}),"\n",(0,s.jsx)("strike",{children:"In the documentation, it says to use the signature:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"dbms_cloud.create_credential (\n  credential_name => '&credential_name',\n  username => 'adb_user@example.com',\n  password => 'password'\n);\n"})}),"\n",(0,s.jsxs)("strike",{children:["However, it wasn't clear if the ",(0,s.jsx)(n.em,{children:"password"})," parameter value should be the IAM user's password, or an authentication token. I tried the latter and that didn't work for me. I prefer to use API keys anyways."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Next, create a catalog for the Functions by executing the following PL/SQL procedure:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"begin\n  dbms_cloud_function.create_catalog(\n    credential_name => '&credential_name'\n    , catalog_name => '&catalog_name'\n    , service_provider => 'OCI'\n  , cloud_params =>\n      json_object(\n        key 'region_id' value '&region_id'\n        , key 'compartment_id' value '&compartment_ocid'\n      )\n  );\nend;\n/\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"NOTE"})}),"\n",(0,s.jsxs)(n.p,{children:["When creating catalogs as the ",(0,s.jsx)(n.em,{children:"ADMIN"})," user, you may use resource principals. The credential name would be ",(0,s.jsx)(n.code,{children:"OCI$RESOURCE_PRINCIPAL"}),". If you used resource principals, be sure to include the required IAM policy statements to allow the dynamic group access to list and invoke Functions. I was not able to get resource principals to work with the application schema."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The quickest way to create the PL/SQL wrappers for the deployed functions is to use the ",(0,s.jsx)(n.code,{children:"DBMS_CLOUD_FUNCTION.SYNC_FUNCTIONS"})," procedure. Execute the following block of code:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"begin\n  dbms_cloud_function.sync_functions(\n    catalog_name => '&catalog_name'\n    , refresh_rate => 'DAILY'\n  );\nend;\n/\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The default value for the ",(0,s.jsx)(n.code,{children:"refresh_rate"})," is ",(0,s.jsx)(n.code,{children:"DAILY"}),". This parameter specifies how often the database synchronizes with the Functions service for any changes to the deployed functions."]}),"\n",(0,s.jsxs)(n.p,{children:["You may now query the ",(0,s.jsx)(n.code,{children:"USER_CLOUD_FUNCTION"})," view to list all functions that the database has discovered and created wrappers for:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select * from user_cloud_function;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Verify that you now have access to the SQL function by querying the ",(0,s.jsx)(n.code,{children:"USER_OBJECTS"})," view. For example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select *\nfrom user_objects\nwhere 1 = 1\n  and object_type = 'FUNCTION'\n  and object_name = 'SAYHELLO';\n"})}),"\n",(0,s.jsx)(n.h2,{id:"task-6---invoke-the-oci-function-using-its-sql-function",children:"Task 6 - Invoke the OCI Function Using Its SQL Function"}),"\n",(0,s.jsxs)(n.p,{children:["In this final task, create a ",(0,s.jsx)(n.code,{children:"SUBSCRIBER"})," table containing two columns, ",(0,s.jsx)(n.code,{children:"FIRST_NAME"})," and ",(0,s.jsx)(n.code,{children:"LAST_NAME"}),", by executing the following SQL statement:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"create table subscriber (\n\tsubscriber_id number generated always as identity\n\t, first_name varchar2(200) not null\n\t, last_name varchar2(200) not null\n\t, constraint subscriber_pk primary key (subscriber_id)\n)\n/\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Next, insert a few random names to the ",(0,s.jsx)(n.code,{children:"SUBSCRIBER"})," table:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"insert into subscriber (first_name, last_name) values ('Alice', 'Smith');\ninsert into subscriber (first_name, last_name) values ('Bob', 'Jones');\ninsert into subscriber (first_name, last_name) values ('Charlie', 'Brown');\ninsert into subscriber (first_name, last_name) values ('David', 'White');\ninsert into subscriber (first_name, last_name) values ('Emma', 'Green');\ninsert into subscriber (first_name, last_name) values ('Frank', 'Black');\ninsert into subscriber (first_name, last_name) values ('George', 'Pink');\ninsert into subscriber (first_name, last_name) values ('Helen', 'Yellow');\ninsert into subscriber (first_name, last_name) values ('Ivy', 'Blue');\ninsert into subscriber (first_name, last_name) values ('Jim', 'Red');\ncommit;\n"})}),"\n",(0,s.jsx)(n.p,{children:"Then execute a query that generates a greeting message for each subscriber, using their first names:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select\n  json_value(\n    json_value(\n      sayhello(params => json_object(key 'name' value first_name))\n      , '$.RESPONSE_BODY'\n    )\n    , '$.message'\n  ) as message\nfrom subscriber;\n"})}),"\n",(0,s.jsx)(n.p,{children:"That's it!"}),"\n",(0,s.jsx)(n.h2,{id:"important-notes",children:"Important Notes"}),"\n",(0,s.jsx)(n.p,{children:"In Functions, tenants are billed based on the following factors:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"The number of times a function is invoked."}),"\n",(0,s.jsx)(n.li,{children:"The memory over time consumed by function, measured in gigabyte-seconds."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The OCI Blog ",(0,s.jsx)(n.a,{href:"https://blogs.oracle.com/cloud-infrastructure/post/oci-functions-v-aws-lambda-comparing-cost-value",children:"post"})," covers in detail how these costs are calculated, including a comparison with the costs of executing AWS Lambda functions."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select\n  json_value(\n    json_value(\n      sayhello(params => json_object(key 'name' value first_name))\n      , '$.RESPONSE_BODY'\n    )\n    , '$.message'\n  ) as message\nfrom table_with_a_million_subscribers;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Assuming that the function uses the minimal memory allocation amount of ",(0,s.jsx)(n.strong,{children:"128 MB"}),", and executes within ",(0,s.jsx)(n.strong,{children:"1 millisecond"}),", if this simple SQL query statement is executed daily, it would result in the following consumption:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"31,000,000 invocations"}),"\n",(0,s.jsx)(n.li,{children:"31,000,000 x 0.001 s x 0.125 GB"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Using the OCI cost estimator, we are looking at a bill of approximately ",(0,s.jsx)(n.strong,{children:"USD 5.80"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Cost estimates for invoking function over all 1 million records every day.",src:t(99892).Z+"",width:"2576",height:"784"})}),"\n",(0,s.jsx)(n.p,{children:"It might not seem like a lot, but I hope this gives you an idea of how quickly costs can pile up if you are not careful."}),"\n",(0,s.jsx)(n.p,{children:"Also, there are rate limits imposed on invoking functions. If you exceed this limit, the service will return an error with HTTP status code 429. Consider batching large numbers of function calls, and a timeout to avoid flooding the service with requests."}),"\n",(0,s.jsx)(n.p,{children:"In summary, put thought into how to use this powerful new functionality. I also strongly recommend setting up a budget to monitor costs to keep a lid on runaway API calls, including those belonging to the Oracle AI suite of services, and avoid any surprises at the end of the month."})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},98606:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/person-making-a-call-70541c6d603a942c9792d65168af4384.png"},99892:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/cost-estimator-592b3152fbfa3d73ce8b679f0b07dbfd.png"},22455:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/person-making-a-call-70541c6d603a942c9792d65168af4384.png"},11151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>a});var s=t(67294);const o={},i=s.createContext(o);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);