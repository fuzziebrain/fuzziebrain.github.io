"use strict";(self.webpackChunknewsite=self.webpackChunknewsite||[]).push([[40467],{85164:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=t(85893),s=t(11151);const i={title:"I Am Obsolete",tags:["chatgpt","oracle cloud","artificial intelligence","ai","machine learning","ml","transformers","natural language processing","nlp","generative models","orclapex","oracle apex","plsql"],slug:"id/2301",authors:["fuzziebrain"],date:new Date("2023-01-14T00:00:00.000Z")},r=void 0,o={permalink:"/content/id/2301",source:"@site/posts/i-am-obsolete/index.md",title:"I Am Obsolete",description:"A cassette tape.",date:"2023-01-14T00:00:00.000Z",formattedDate:"January 14, 2023",tags:[{label:"chatgpt",permalink:"/content/tags/chatgpt"},{label:"oracle cloud",permalink:"/content/tags/oracle-cloud"},{label:"artificial intelligence",permalink:"/content/tags/artificial-intelligence"},{label:"ai",permalink:"/content/tags/ai"},{label:"machine learning",permalink:"/content/tags/machine-learning"},{label:"ml",permalink:"/content/tags/ml"},{label:"transformers",permalink:"/content/tags/transformers"},{label:"natural language processing",permalink:"/content/tags/natural-language-processing"},{label:"nlp",permalink:"/content/tags/nlp"},{label:"generative models",permalink:"/content/tags/generative-models"},{label:"orclapex",permalink:"/content/tags/orclapex"},{label:"oracle apex",permalink:"/content/tags/oracle-apex"},{label:"plsql",permalink:"/content/tags/plsql"}],readingTime:15.725,hasTruncateMarker:!0,authors:[{name:"Adrian Png",title:"Senior Cloud Solutions Architect @ Insum",url:"https://github.com/fuzziebrain",imageURL:"https://github.com/fuzziebrain.png",key:"fuzziebrain"}],frontMatter:{title:"I Am Obsolete",tags:["chatgpt","oracle cloud","artificial intelligence","ai","machine learning","ml","transformers","natural language processing","nlp","generative models","orclapex","oracle apex","plsql"],slug:"id/2301",authors:["fuzziebrain"],date:"2023-01-14T00:00:00.000Z"},unlisted:!1,prevItem:{title:"Say Hello From An Autonomous Database",permalink:"/content/say-hello-from-an-autonomous-database"},nextItem:{title:"Wrapping Up 2022",permalink:"/content/id/2202"}},l={authorsImageUrls:[void 0]},c=[{value:"Writing Content and Code",id:"writing-content-and-code",level:2},{value:"Who Owns the Content",id:"who-owns-the-content",level:2},{value:"The &quot;CANIUSE&quot; in Oracle APEX",id:"the-caniuse-in-oracle-apex",level:2},{value:"Pitting Against OCI AI Services",id:"pitting-against-oci-ai-services",level:2},{value:"Summary",id:"summary",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components},{Youtube:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Youtube",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"A cassette tape.",src:t(48445).Z+"",width:"1280",height:"720"})}),"\n",(0,a.jsxs)(n.p,{children:["When I was first introduced to generative adversarial networks (GANs), I was impressed, but yet not impressed. The concept, performance, and outcomes of these advanced machine learning (ML) algorithms were truly jaw-dropping, but easily abused. And so, when everyone was excitedly chatting about ",(0,a.jsx)(n.a,{href:"https://chat.openai.com/",children:"ChatGPT"}),", I was cynical and tried to tune out until I came across a ",(0,a.jsx)(n.a,{href:"https://www.linkedin.com/posts/sausheong_teachers-v-chatgpt-schools-face-new-challenge-activity-7015524158113533952-OClM",children:"comment"})," by an old acquaintance, following a news article on concerns about ChatGPT and potential plagiarism in school."]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"It's like someone using a calculator in an arithmetic exam, ChatGPT is just another tool."})}),"\n",(0,a.jsxs)(n.p,{children:["-- ",(0,a.jsx)(n.a,{href:"https://sausheong.com/",children:"Sau Sheong Chang"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"That statement got me rethinking my stance on the technology, and curious about its utility in my day-to-day job."}),"\n",(0,a.jsxs)(n.p,{children:["And I'm glad I did. My own exploration of this subject started by reading Sau Sheong's ",(0,a.jsx)(n.a,{href:"https://medium.com/sausheong/chatting-about-chatgpt-645783b72e6b",children:"post"})," to get a general idea about ChatGPT and the underlying technology that drives its ability to generate text and images. After ",(0,a.jsx)(n.em,{children:"intelligent agents"})," and ",(0,a.jsx)(n.em,{children:"artificial neural Networks"}),", ",(0,a.jsx)(n.em,{children:"natural language processing"})," (NLP) was the next machine learning (ML) topic that I was passionate about. There wasn't a full module on that subject back when I was doing my graduate school training in ",(0,a.jsx)(n.em,{children:"knowledge engineering"})," techniques, so it was pretty much a touch and go. Though during the pandemic, in 2020, I did take up a ",(0,a.jsx)(n.em,{children:"Coursera"}),"/",(0,a.jsx)(n.em,{children:"DeepLearning.AI"})," course on ",(0,a.jsx)(n.em,{children:"Tensorflow"})," that covered NLP in one of its modules. There I got my legs deeper in the water and learned more in-depth about ",(0,a.jsx)(n.em,{children:"recurrent neural networks"})," (RNN), ",(0,a.jsx)(n.em,{children:"long short-term memory"})," (LSTM), and ",(0,a.jsx)(n.em,{children:"Bidirectional Encoder Representations from Transformers"})," (BERT). And the keyword ",(0,a.jsx)(n.em,{children:"transformers"})," is what's driving algorithms such as the ",(0,a.jsx)(n.em,{children:"Generative Pre-trained Transformer"})," (GPT) used by ChatGPT."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Transformers are a type of neural network architecture that are particularly well-suited for natural language processing tasks. They allow a model to effectively process input sequences of variable length and attend to certain parts of the input while generating output. In other words, they enable the model to understand the context and meaning of words and sentences. This is achieved by using self-attention mechanisms, which allow the model to weigh the importance of different parts of the input when making predictions. This has led to significant improvements in the performance of models on a wide range of NLP tasks such as machine translation, text summarization, and question answering. Overall, the transformer architecture has been a major step forward in the field of NLP, and has been widely adopted in state-of-the-art models."})}),"\n",(0,a.jsx)(n.p,{children:"I don't know enough yet to go any deeper than flashing our buzzwords, and a lot of this is still over my head. I found this video to be very clear and easy to understand these concepts quickly, so have a watch!"}),"\n",(0,a.jsx)(i,{videoId:"SZorAJ4I-sA"}),"\n",(0,a.jsx)(n.h2,{id:"writing-content-and-code",children:"Writing Content and Code"}),"\n",(0,a.jsxs)(n.p,{children:["When I first started on this blog post, I thought about using OpenAI's ",(0,a.jsx)(n.a,{href:"https://openai.com/blog/dall-e/",children:(0,a.jsx)(n.em,{children:"DALL-E"})})," model to generate an image that I could use in the banner. Unlike models such as ",(0,a.jsx)(n.a,{href:"https://github.com/NVlabs/stylegan",children:(0,a.jsx)(n.em,{children:"StyleGAN"})}),", DALL-E is a a transformer language model that uses text and images as inputs to infer and generate a new image based on text inputs."]}),"\n",(0,a.jsx)(n.p,{children:"Here's what I did:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Sign up for a free account to access OpenAI's ",(0,a.jsx)(n.a,{href:"https://openai.com/api/",children:"API"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"Create an API key."}),"\n",(0,a.jsxs)(n.li,{children:["Setup ",(0,a.jsx)(n.a,{href:"https://conda.io",children:"Conda"})," and create a ",(0,a.jsx)(n.a,{href:"https://jupyter.org/",children:"Jupyter"})," notebook."]}),"\n",(0,a.jsxs)(n.li,{children:["In the first cell, call the ",(0,a.jsx)(n.em,{children:"Create image"})," API adapting from the example code in the documentation:","\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import openai\n\nopenai.organization = "org-abc.....def"\nopenai.api_key = "averylongstringthatshouldbekeptasecret"\n\nresponse = openai.Image.create(\n    prompt = "A robot with a large speech bubble."\n    , n = 10\n    , size = "1024x1024"\n)\n\nprint("Done")\n'})}),"\n","The parameter ",(0,a.jsx)(n.code,{children:"prompt"})," is the descriptive text about the image that I'd like the model to generate. I am also requested for ",(0,a.jsx)(n.code,{children:"10"})," images using the parameter ",(0,a.jsx)(n.code,{children:"n"}),", and finally, chose the desired image size using the three available values: ",(0,a.jsx)(n.code,{children:"256x256"}),", ",(0,a.jsx)(n.code,{children:"512x512"}),", or ",(0,a.jsx)(n.code,{children:"1024x1024"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["It's been a while since I played with image manipulation in Python and then displaying it in a notebook, so I enlisted ChatGPT's help and asked:","\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"create code in python to display images loaded from a URL in a grid in a jupyter notebook\n"})}),"\n","And after thinking for a while it returned this:","\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from IPython.display import display\nfrom PIL import Image\nimport requests\n\nurls = ['https://www.example.com/image1.jpg', 'https://www.example.com/image2.jpg',\n        'https://www.example.com/image3.jpg', 'https://www.example.com/image4.jpg']\n\nimages = []\n\nfor url in urls:\n    response = requests.get(url)\n    images.append(Image.open(response.content))\n\nwidths, heights = zip(*(i.size for i in images))\n\ntotal_width = sum(widths)\nmax_height = max(heights)\n\nnew_im = Image.new('RGB', (total_width, max_height))\n\nx_offset = 0\nfor im in images:\n    new_im.paste(im, (x_offset,0))\n    x_offset += im.size[0]\n\ndisplay(new_im)\n"})}),"\n","Great, but that's not going to work out-of-the-box, so I adapted it to suite my needs:","\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from IPython.display import display\nfrom PIL import Image\nimport requests\n\nimages = []\n\nfor suggestion in response["data"]:\n    _response = requests.get(suggestion["url"], stream = True)\n    images.append(Image.open(_response.raw))\n\nwidths, heights = zip(*(i.size for i in images))\n\ntotal_width = sum(widths)\nmax_height = max(heights)\n\nnew_im = Image.new(\'RGB\', (total_width, max_height))\n\nx_offset = 0\nfor im in images:\n    new_im.paste(im, (x_offset,0))\n    x_offset += im.size[0]\n\ndisplay(new_im)\n'})}),"\n",'Running this cell generated a "thumbnail" gallery of size ',(0,a.jsx)(n.code,{children:"10240x1024"}),".\n",(0,a.jsx)(n.img,{alt:"Gallery of 10 images generated by DALL-E.",src:t(60602).Z+"",width:"1024",height:"102"})]}),"\n",(0,a.jsxs)(n.li,{children:["After identifying my choice, the first one, I ran the following code (that I got lazy and asked ChatGPT again for help) to save it on my workstation:","\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'urllib.request.urlretrieve(response["data"][0]["url"], "banner-image.jpg")\n'})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Here's the result after cropping it to a ratio of 16:9 that I typically use for banner images:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"An image of a robot generated with a speech bubble using DALL-E",src:t(22897).Z+"",width:"1024",height:"576"})}),"\n",(0,a.jsx)(n.p,{children:"Neat huh?"}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["I'll publish a full walk-through on what I did to setup Conda and Jupyter in my new section ",(0,a.jsx)(n.a,{href:"/tech-tnt",children:"Tech TnT"})," soon."]})}),"\n",(0,a.jsxs)(n.p,{children:["And what about textual content? In case you did not notice earlier, the blurb describing what transformers are were deliberately italicized. That's because I got ChatGPT to write a few words. I borrowed the idea from yet another great ",(0,a.jsx)(n.a,{href:"https://kozyrkov.medium.com/introducing-chatgpt-aa824ad89623",children:"read"})," written by ",(0,a.jsx)(n.a,{href:"https://kozyrkov.medium.com/",children:"Cassie Kozyrkov"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Here's the prompt I used:"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Explain what are transformers in natural language processing using the style of Adrian Png."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Did it express what I wanted to say? Perhaps, and here are some key aspects:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Transformers are a type of neural network, and used for natural language processing tasks."}),"\n",(0,a.jsx)(n.li,{children:'A new concept and meaning to the word "Attention", and how it\'s used in NLP.'}),"\n",(0,a.jsx)(n.li,{children:"List the types of use cases."}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Whenever I have a writers' block, I would pen my thoughts sparsely and randomly, and then reorder and pad them with the required sentence constructs. Let's try doing that, this time including the term ",(0,a.jsx)(n.em,{children:"positional encoding"}),". Here's the updated prompt:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'Write a passage explaining what transformers are in natural language processing. Capture the following key points:\n- Transformers are a type of neural network, and used for natural language processing tasks.\n- Mention positional encoding.\n- A new concept and meaning to the word "Attention", and how it\'s used in NLP.\n- List the types of use cases.\n'})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:'Transformers are a type of neural network architecture that have revolutionized the field of natural language processing. These models are designed to effectively process input sequences of variable length and generate output by using self-attention mechanisms. This allows the model to weigh the importance of different parts of the input when making predictions, which is crucial for understanding the context and meaning of words and sentences. A key component of transformers is the use of positional encoding, which allows the model to understand the order of the words in a sentence, even when the input is processed in parallel. This was a new concept and meaning to the word "Attention" when it was first introduced in NLP.'}),"\n",(0,a.jsx)(n.p,{children:"There are many use cases for transformers in NLP, including but not limited to machine translation, text summarization, question answering, and text-to-speech synthesis. The transformer architecture has been widely adopted in state-of-the-art models and has led to significant improvements in performance on a wide range of NLP tasks."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"I don't know if I could express it as well as it did, but hey, I like it. But do I like using it? Not really. I'm still not fully comfortable with using the text as-is. I like my content to be authentically \"me\" with my language flaws included. However, how is this different from engaging a professional copywriter to write an article based on the ideas you provide?"}),"\n",(0,a.jsx)(n.h2,{id:"who-owns-the-content",children:"Who Owns the Content"}),"\n",(0,a.jsxs)(n.p,{children:["I think this is a question that is often ask and debated upon. Who owns the generated code, images, or text? For DALL-E, their ",(0,a.jsx)(n.a,{href:"https://labs.openai.com/policies/content-policy",children:"content policy"})," and ",(0,a.jsx)(n.a,{href:"https://help.openai.com/en/articles/6468065-dall-e-content-policy-faq",children:"FAQ"})," seems to say that you are free to use the generated images, however, my immediate concern was about the work that it was derived upon. That appears to be explained ",(0,a.jsx)(n.a,{href:"https://github.com/openai/DALL-E/blob/master/model_card.md",children:"here"}),". I'm not good with legalese, and so, my level of comfort using the images generated is 4 on a scale of 1 to 10. And I'd presume that the concerns about generated code and text are very similar."]}),"\n",(0,a.jsx)(n.h2,{id:"the-caniuse-in-oracle-apex",children:'The "CANIUSE" in Oracle APEX'}),"\n",(0,a.jsxs)(n.p,{children:["Yes! For those new to ",(0,a.jsx)(n.a,{href:"https://apex.oracle.com",children:"Oracle APEX"}),", this is a rapid application development platform that lets you create usable web applications very quickly. It won't take you long to create an intelligent web application that takes advantage of the OpenAI models. The models are exposed as REST endpoints, and Oracle APEX has the all-powerful ",(0,a.jsx)(n.code,{children:"APEX_WEB_SERVICE"})," API that lets developers consume REST services."]}),"\n",(0,a.jsx)(n.p,{children:"A quick example of how I'd submit source code submitted through an Oracle APEX page and returned an explanation of what the code is attempting to do:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"declare\n  l_prompt varchar2(32767) := q'[---\n {{CODE}}\n ---\n Here's what the code does:']';\n  l_request_body json_object_t;\n  l_response clob;\nbegin\n  l_request_body := json_object_t();\n\n  l_request_body.put('model', 'code-davinci-002');\n  l_request_body.put('temperature', 0.40);\n  l_request_body.put('prompt', apex_escape.json(replace(l_prompt, '{{CODE}}', :P2_SOURCE_CODE)));\n  l_request_body.put('stop', '---');\n  l_request_body.put('max_tokens', 250);\n  apex_debug.info(apex_escape.json(replace(l_prompt, '{{CODE}}', :P2_SOURCE_CODE)));\n\n  apex_web_service.set_request_headers(\n    p_name_01 => 'Authorization'\n    , p_value_01 => 'Bearer averylongstringthatshouldnotbehardcoded'\n    , p_name_02 => 'OpenAI-Organization'\n    , p_value_02 => 'org-donothardcodethisaswell'\n    , p_name_03 => 'Content-Type'\n    , p_value_03 => 'application/json'\n  );\n\n  l_response := apex_web_service.make_rest_request(\n    p_url => 'https://api.openai.com/v1/completions'\n    , p_http_method => 'POST'\n    , p_body => l_request_body.to_string()\n  );\n\n  -- Code to parse the JSON response.\nend;\n"})}),"\n",(0,a.jsx)(n.p,{children:"We can do a lot of cool stuff in terms of functionality. However, these OpenAI models are also capable of providing a quick review of the code. However, it seems like the Codex model is fairly limited when it comes to PL/SQL. I had better results running this through GPT-3 to get a security and performance review of this pipelined table function:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"create or replace type typ_animal_names is table of varchar2(50)\n/\n\ncreate or replace function find_animals_by_species(p_species_name varchar2)\nreturn typ_animal_names\n  pipelined\nis\nbegin\n  for animal in (\n    select animal_name from animal where species = p_species_name\n  ) loop\n    pipe row (animal.animal_name);\n  end loop;\nend;\n/\n"})}),"\n",(0,a.jsx)(n.p,{children:"And at the end, I provided this prompt:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- Suggest security and performance improvements to this code.\n---\n"})}),"\n",(0,a.jsxs)(n.p,{children:["What do you think it would say? Perhaps I should have masked the outputs and asked ",(0,a.jsx)(n.a,{href:"https://www.stevenfeuerstein.com/",children:"Steven Feuerstein"})," for his opinion. He did ",(0,a.jsx)(n.a,{href:"https://blogs.oracle.com/connect/post/pipelined-table-functions",children:"write"})," about this topic quite some time ago. Anyways, here's what I got from GPT-3 after a few tries."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"/**\nSecurity:\n1. Add a check to ensure that the input parameter is valid and does not contain any malicious code.\n2. Add a check to ensure that the user has the necessary permissions to execute the function.\n\nPerformance:\n1. Create an index on the species column of the animal table.\n2. Use bind variables for the input parameter to ensure that the query is not re-parsed each time it is executed.\n3. Use a cursor to fetch the results from the query instead of looping through the results.\n4. Use bulk collect to fetch the results from the query instead of looping through the results.\n5. Use a PL/SQL table instead of a pipelined function*/\n"})}),"\n",(0,a.jsx)(n.p,{children:"If you're interested, here are the parameters I had set:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Model"})," - ",(0,a.jsx)(n.code,{children:"text-davinci-003"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Temperature"})," - ",(0,a.jsx)(n.code,{children:"0.3"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Maximum Length"})," - ",(0,a.jsx)(n.code,{children:"150"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"It would be nice to automate this as ChatGPT suggested, but I find the responses are not consistent, and sometimes, a little odd. That said, it would still be a good first attempt at scrutinizing the code. Consider it a helper when paired with a more experienced developer."}),"\n",(0,a.jsx)(n.h2,{id:"pitting-against-oci-ai-services",children:"Pitting Against OCI AI Services"}),"\n",(0,a.jsx)(n.p,{children:"I asked ChatGPT to:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"List all possible uses of OpenAI transformers.\n"})}),"\n",(0,a.jsx)(n.p,{children:"And here's the response I received:"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Natural Language Processing (NLP) tasks such as language translation, text summarization, and sentiment analysis."}),"\n",(0,a.jsx)(n.li,{children:"Chatbots and virtual assistants for customer service and support."}),"\n",(0,a.jsx)(n.li,{children:"Text-to-speech and speech-to-text applications."}),"\n",(0,a.jsx)(n.li,{children:"Image and video captioning."}),"\n",(0,a.jsx)(n.li,{children:"Language generation for creative writing and content creation."}),"\n",(0,a.jsx)(n.li,{children:"Automated question answering systems."}),"\n",(0,a.jsx)(n.li,{children:"Automatic text classification and tagging."}),"\n",(0,a.jsx)(n.li,{children:"Text completion and prediction."}),"\n",(0,a.jsx)(n.li,{children:"Named Entity Recognition (NER) and part-of-speech tagging."}),"\n",(0,a.jsx)(n.li,{children:"Text-based search and retrieval systems."}),"\n",(0,a.jsx)(n.li,{children:"Semantic similarity and relatedness measurements."}),"\n",(0,a.jsx)(n.li,{children:"Personalization and recommendation systems."}),"\n",(0,a.jsx)(n.li,{children:"Language understanding for intelligent agents and robots."}),"\n",(0,a.jsx)(n.li,{children:"Text-based summarization of news articles and other long-form content."}),"\n",(0,a.jsx)(n.li,{children:"Text-based sentiment analysis for social media monitoring and marketing."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The final topic I'd like to explore is how OpenAI's product offerings compare to the services provided by ",(0,a.jsx)(n.a,{href:"https://www.oracle.com/artificial-intelligence/",children:"Oracle AI"}),". And to do that, let's first attempt to prune the list of 15 use cases into these buckets:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Question and answer"}),"\n",(0,a.jsx)(n.li,{children:"Content (text, images, and code) generation"}),"\n",(0,a.jsx)(n.li,{children:"Text-to-speech"}),"\n",(0,a.jsx)(n.li,{children:"Speech-to-text"}),"\n",(0,a.jsx)(n.li,{children:"Named entity recognition"}),"\n",(0,a.jsx)(n.li,{children:"Sentiment analysis"}),"\n",(0,a.jsx)(n.li,{children:"Image and video captioning"}),"\n",(0,a.jsx)(n.li,{children:"Language translation"}),"\n",(0,a.jsx)(n.li,{children:"Text/document classification"}),"\n",(0,a.jsx)(n.li,{children:"Keyword extraction and tagging"}),"\n",(0,a.jsx)(n.li,{children:"Text summarization"}),"\n"]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Functionality"}),(0,a.jsx)(n.th,{children:"Language"}),(0,a.jsx)(n.th,{children:"Speech"}),(0,a.jsx)(n.th,{children:"Vision"}),(0,a.jsx)(n.th,{children:"Document Understanding"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Question and answer"}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-question"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Content generation"}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Text-to-speech"}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Speech-to-text"}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-check"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Named entity recognition"}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-check"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Sentiment analysis"}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-check"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Image and video captioning"}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-question"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-question"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-question"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-question"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Language translation"}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-check"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Text/document classification"}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-check"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-check"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Keyword extraction and tagging"}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-check"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Text summarization"}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)("i",{class:"rating fa-solid fa-circle-xmark"})})]})]})]}),"\n",(0,a.jsx)(n.p,{children:'The areas where Oracle AI is clearly lacking are in content generation and text summarization. As to "text-to-speech", it does not appear to be in the list of APIs that OpenAI has, so I wonder where that suggestion came from. Perhaps ChatGPT is pulling a fast one?'}),"\n",(0,a.jsx)(n.p,{children:"So, I thought I'd ask ChatGPT the same question that I'm trying to answer:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"How does Oracle AI compare with ChatGPT?\n"})}),"\n",(0,a.jsx)(n.p,{children:"And this is what it said:"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Oracle AI and ChatGPT are both natural language processing (NLP) technologies, but they have different capabilities and are used for different purposes."}),"\n",(0,a.jsx)(n.p,{children:"ChatGPT is a transformer-based language model developed by OpenAI. It is primarily used for generating human-like text, such as in chatbots, virtual assistants, and language generation tasks. ChatGPT is trained on a large dataset of text, allowing it to generate text that is often indistinguishable from human-written text."}),"\n",(0,a.jsx)(n.p,{children:"Oracle AI, on the other hand, is a collection of AI-based products and services offered by Oracle Corporation. It includes several NLP-based technologies, such as natural language understanding, text analytics, and chatbot building. Oracle AI is designed to be used in enterprise environments and can be integrated with other Oracle products and services."}),"\n",(0,a.jsx)(n.p,{children:"In summary, ChatGPT is more focused on language generation, while Oracle AI is a broader set of AI-based products and services that can include NLP capabilities. Oracle AI is more focused on enterprise and business use cases, while ChatGPT is focused more on generating human-like text."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Apart from the first paragraph, I'd say that's mostly factual and accurate. Hence, I can only conclude that it's a rather difficult comparison to make. Duh! My main goal here was really to highlight how we could also use Oracle AI to provide solutions for some of these use cases."}),"\n",(0,a.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,a.jsxs)(n.p,{children:["Cool as this technology might be, there's a nagging fear that pretty soon, IT practitioners, like myself, would be replaced by AI. I think that fear is valid. However, as Sau Sheong aptly describes ChatGPT, these are tools and we should embrace and empower ourselves to do our jobs faster and better. It was only a few years ago when Oracle launched the Autonomous Database product. Back ",(0,a.jsx)(n.a,{href:"https://www.forbes.com/sites/oracle/2018/12/19/2018-the-year-the-database-went-autonomous/",children:"then"}),", it was touted to be intelligent and sent shivers down the DBAs' spine. After almost four years, DBAs are still needed even when a company's running only ADBs in their environment. What it has done was take away some of the mundane tasks like database patching and upgrading (an introduced new ones) as advertised. Freeing us up to perform other functions, be innovative, and allowed us to discover other efficiencies and approaches to improve business operations."]}),"\n",(0,a.jsx)(n.p,{children:"I have used ChatGPT in the past few days to help me in certain tasks such as writing a French version of an email, and constructing some of parts of this blog post. I still had to validate and adapt the outputs, but more importantly, like in the case of writing this blog post, compose the flow and piece them altogether for the final content. I don't think ChatGPT is quite ready to replicate my thought processes, feelings/opinions, and validate the story I wished to tell."}),"\n",(0,a.jsx)(n.p,{children:"And my last words are to thank the brilliant brains at OpenAI, Google, and all over the world for their contributions to computer science so that I can write this blog post with a bit more flavour. But please try not to make Judgement Day a reality. Thank you!"}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["Photo by ",(0,a.jsx)("a",{href:"https://unsplash.com/es/@lunarts?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText",children:"Volodymyr Hryshchenko"})," on ",(0,a.jsx)("a",{href:"https://unsplash.com/photos/D5_cfqMAY0Y?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText",children:"Unsplash"})]})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},22897:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/banner-image-33f8722d5546f2ad2124ae851fa4dd12.png"},48445:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/cassette-tape_1280x720-5a94f95a05b6a01de9095f05ecd33401.png"},60602:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/cell-two-output_1024x102-c5a642caacf475af5eac680a912e9dfc.jpg"},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>r});var a=t(67294);const s={},i=a.createContext(s);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);