"use strict";(self.webpackChunknewsite=self.webpackChunknewsite||[]).push([[36876],{3905:(e,t,a)=>{a.r(t),a.d(t,{MDXContext:()=>p,MDXProvider:()=>d,mdx:()=>g,useMDXComponents:()=>c,withMDXComponents:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},o.apply(this,arguments)}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),m=function(e){return function(t){var a=c(t.components);return n.createElement(e,o({},t,{components:a}))}},c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(a),d=r,u=m["".concat(s,".").concat(d)]||m[d]||h[d]||o;return a?n.createElement(u,i(i({ref:t},p),{},{components:a})):n.createElement(u,i({ref:t},p))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}f.displayName="MDXCreateElement"},71327:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const o={title:"ARM Your APEX Instance",tags:["oracle cloud","oci","arm","aarch64","ampere","orclapex","orclords","autonomous database","podman","docker","open container initiative"],slug:"id/2011",authors:["fuzziebrain"],categories:["Technology","Infrastructure","Oracle Cloud"],date:new Date("2021-05-25T08:50:00.000Z")},s=void 0,i={permalink:"/content/id/2011",source:"@site/posts/arm-your-apex-instance/index.md",title:"ARM Your APEX Instance",description:"Embedded ARM chip",date:"2021-05-25T08:50:00.000Z",formattedDate:"May 25, 2021",tags:[{label:"oracle cloud",permalink:"/content/tags/oracle-cloud"},{label:"oci",permalink:"/content/tags/oci"},{label:"arm",permalink:"/content/tags/arm"},{label:"aarch64",permalink:"/content/tags/aarch-64"},{label:"ampere",permalink:"/content/tags/ampere"},{label:"orclapex",permalink:"/content/tags/orclapex"},{label:"orclords",permalink:"/content/tags/orclords"},{label:"autonomous database",permalink:"/content/tags/autonomous-database"},{label:"podman",permalink:"/content/tags/podman"},{label:"docker",permalink:"/content/tags/docker"},{label:"open container initiative",permalink:"/content/tags/open-container-initiative"}],readingTime:7.525,hasTruncateMarker:!0,authors:[{name:"Adrian Png",title:"Senior Cloud Solutions Architect @ Insum",url:"https://github.com/fuzziebrain",imageURL:"https://github.com/fuzziebrain.png",key:"fuzziebrain"}],frontMatter:{title:"ARM Your APEX Instance",tags:["oracle cloud","oci","arm","aarch64","ampere","orclapex","orclords","autonomous database","podman","docker","open container initiative"],slug:"id/2011",authors:["fuzziebrain"],categories:["Technology","Infrastructure","Oracle Cloud"],date:"2021-05-25T08:50:00.000Z"},prevItem:{title:"Intelligent APEX Applications - Fact or Fiction?",permalink:"/content/id/2012"},nextItem:{title:"Making AI Accessible to APEX",permalink:"/content/id/2010"}},l={authorsImageUrls:[void 0]},p=[{value:"Let&#39;s Get Started",id:"lets-get-started",level:2},{value:"Bonus Task",id:"bonus-task",level:2},{value:"Summary",id:"summary",level:2}],m={toc:p};function c(e){let{components:t,...o}=e;return(0,r.mdx)("wrapper",(0,n.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"Embedded ARM chip",src:a(62864).Z,width:"1200",height:"720"})),(0,r.mdx)("p",null,"In September 2020, Oracle first ",(0,r.mdx)("a",{parentName:"p",href:"https://youtu.be/aVwLlkhERuQ?t=331"},"announced")," that it was working with ",(0,r.mdx)("a",{parentName:"p",href:"https://amperecomputing.com/"},"Ampere Computing")," to provide ARM-based chips for its Compute instance offering on the ",(0,r.mdx)("a",{parentName:"p",href:"https://oracle.com/cloud"},"Oracle Cloud Infrastructure"),". They have delivered!"),(0,r.mdx)("p",null,"ARM chips are found in many low-powered devices like smartphones, single-board computers, and IoT devices. So, if you are an ",(0,r.mdx)("a",{parentName:"p",href:"https://apex.oracle.com"},"Oracle Application Express"),' (APEX) developer, you might be wondering, "What\'s in it for me?" Well, remember we ',(0,r.mdx)("a",{parentName:"p",href:"/content/id/2004"},"talked")," about running a customer-managed ",(0,r.mdx)("a",{parentName:"p",href:"https://www.oracle.com/database/technologies/appdev/rest.html"},"Oracle REST Data Services")," (ORDS) instance for an ",(0,r.mdx)("a",{parentName:"p",href:"https://www.oracle.com/autonomous-database/"},"Oracle Autonomous Database"),"?"),(0,r.mdx)("p",null,"The OCI isn't the first platform to offer ARM-based compute resources. You will find a similar offering from AWS with their ",(0,r.mdx)("a",{parentName:"p",href:"https://aws.amazon.com/ec2/graviton/"},"Graviton")," processors. Instead of custom-designing a processor, Oracle opted to use the ",(0,r.mdx)("a",{parentName:"p",href:"https://amperecomputing.com/altra/"},"Ampere Altra Processor")," that has 80 cores running at a maximum frequency of 3.3 Ghz. Check out AnandTech's ",(0,r.mdx)("a",{parentName:"p",href:"https://www.anandtech.com/show/16315/the-ampere-altra-review"},"review")," of the chip."),(0,r.mdx)("p",null,"If you are interested to read about the performance comparisons between the ARM and x86 architectures, please check out this ",(0,r.mdx)("a",{parentName:"p",href:"https://www.infoq.com/articles/arm-vs-x86-cloud-performance/"},"report"),". What I understand is that for hosting web applications that are typically single threaded, ARM chips offer a better cost-to-performance ratio, not to mention, lower power consumption. Each processing core is also generally cheaper than its competitors, thus allowing cloud vendors to provision them at cheaper rates. We saw this happening when Oracle first launched the AMD EPYC-based compute shapes that were cheaper than Intel's at that time."),(0,r.mdx)("h2",{id:"lets-get-started"},"Let's Get Started"),(0,r.mdx)("p",null,"As with other processor types, OCI customers can opt to provision virtual machines or bare metal machines:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},"VM.Standard.A1.Flex.")," Like the AMD EPYC Flex shapes, users can create instances with a flexible number of OCPUs and memory. Servers can be provisioned with 1 to 80 OCPUs, and 1 to 512 GB memory."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},"BM.Standard.A1.160.")," Only one shape for bare metal machines is available at this time. It comes with 160 OCPUs and 1 TB of memory.")),(0,r.mdx)("p",null,"Oracle has also provided a generous Oracle Cloud Free Tier allotment of Ampere compute instance. Users can provision an ",(0,r.mdx)("em",{parentName:"p"},"Always Free")," compute instance with up to 4 OCPUs and 24 GB of memory (see the ",(0,r.mdx)("a",{parentName:"p",href:"https://www.oracle.com/news/announcement/oracle-unlocks-power-of-arm-processors-at-one-cent-per-core-hour-2021-05-25/"},"press release"),"). The Always Free block volume allotment has also increased from 100 to 200 GB. Yes, there are no charges and no end dates for these resources. I will use this to host the customer-managed ORDS instance. Beyond that, according to the ",(0,r.mdx)("a",{parentName:"p",href:"https://www.oracle.com/cloud/cost-estimator.html"},"cost estimator"),", each additional OCPU will cost you only $10 per month, and $1 for every gigabyte of memory!"),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},(0,r.mdx)("strong",{parentName:"p"},"Note.")," These A1 cores are single-threaded. In x86-based shapes, 1 OCPU has 2 virtual CPUs.")),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"Create an Ampere-shaped Compute instance.",src:a(32770).Z,width:"1280",height:"800"})),(0,r.mdx)("p",null,"The downside of moving to an ARM chip is the availability of software support. For example, though you can install the ",(0,r.mdx)("a",{parentName:"p",href:"https://www.oracle.com/database/technologies/instant-client.html"},"Oracle Instant Client")," on an ARM system, Oracle has not released AArch64 database binaries. Fortunately for us, there already exists a Java port for this architecture, so there should be no issues deploying ORDS or running it standalone. However, at the time of writing, the ORDS package is not available to install through the Oracle Yum repositories. I will instead deploy ORDS on a ",(0,r.mdx)("a",{parentName:"p",href:"https://tomcat.apache.org/"},"Tomcat")," server using ",(0,r.mdx)("a",{parentName:"p",href:"https://podman.io/"},"Podman"),". The official ",(0,r.mdx)("a",{parentName:"p",href:"https://docker.com"},"Docker")," image that I will use can be found ",(0,r.mdx)("a",{parentName:"p",href:"https://hub.docker.com/_/tomcat"},"here"),". Take note that you will have to ensure that you deploy a version of ORDS that's compatible to what the ADB is using."),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"Use Database Actions to check version of ORDS that the ADB is running.",src:a(47247).Z,width:"1280",height:"800"})),(0,r.mdx)("p",null,"After provisioning the Oracle Enterprise Linux 8 server, login as the user ",(0,r.mdx)("em",{parentName:"p"},"opc")," and install the following software:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"OCI Command Line Interface (CLI)"),(0,r.mdx)("li",{parentName:"ul"},"Podman"),(0,r.mdx)("li",{parentName:"ul"},"[Optional]"," Support for emulating Docker CLI using podman")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"sudo dnf install python36-oci-cli podman podman-docker\n")),(0,r.mdx)("p",null,"Create the base directory where we will deploy our files to."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"BASE_PATH=/opt/podman/ords && \\\nmkdir -p $BASE_PATH\n")),(0,r.mdx)("p",null,"Stage the following installer files in the directory ",(0,r.mdx)("inlineCode",{parentName:"p"},"$BASE_PATH/files"),":"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"apex_20.2.zip")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"p32006852_2020_Generic.zip")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"ords-21.1.1.116.2032.zip"))),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},(0,r.mdx)("strong",{parentName:"p"},"Note:")," At the time of writing, the ADB is still running APEX 20.2 with the latest Patch Set Bundle. To download the patch, you will require a qualified support contract.")),(0,r.mdx)("p",null,"Create the following ",(0,r.mdx)("em",{parentName:"p"},"Dockerfile")," in the directory specified by the environment variable ",(0,r.mdx)("inlineCode",{parentName:"p"},"BASE_PATH"),":"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-dockerfile"},'FROM tomcat:9.0-jdk8-openjdk-slim\n\nARG INSTALL_FILES_DIR=/tmp\nARG ORDS_HOME=/opt/oracle/ords\nARG ORDS_CONFIG_DIR=$ORDS_HOME/conf\nARG ORDS_INSTALL_FILE=ords-21.1.1.116.2032.zip\n\nCOPY files/$ORDS_INSTALL_FILE $INSTALL_FILES_DIR/\n\nRUN apt update -y && \\\n  apt install -y unzip && \\\n  mkdir -p $ORDS_HOME $ORDS_CONFIG_DIR && \\\n  unzip $INSTALL_FILES_DIR/$ORDS_INSTALL_FILE -d $ORDS_HOME && \\\n  java -jar $ORDS_HOME/ords.war configdir $ORDS_CONFIG_DIR && \\\n  cp $ORDS_HOME/ords.war /usr/local/tomcat/webapps/ && \\\n  sed -i -r \'s/Connector port=\\"8080\\" protocol=\\"HTTP\\/1\\.1\\"/& scheme=\\"https\\"/\' \\\n    /usr/local/tomcat/conf/server.xml && \\\n  rm -f $INSTALL_FILES_DIR/$ORDS_INSTALL_FILE && \\\n  apt clean -y\n')),(0,r.mdx)("p",null,"Alternatively, run the following Bash script to create the Dockerfile:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},'cd $BASE_PATH && \\\ncat << EOF > Dockerfile\nFROM tomcat:9.0-jdk8-openjdk-slim\n\nARG INSTALL_FILES_DIR=/tmp\nARG ORDS_HOME=/opt/oracle/ords\nARG ORDS_CONFIG_DIR=\\$ORDS_HOME/conf\nARG ORDS_INSTALL_FILE=ords-21.1.1.116.2032.zip\n\nCOPY files/\\$ORDS_INSTALL_FILE \\$INSTALL_FILES_DIR/\n\nRUN apt update -y && \\\\\n  apt install -y unzip && \\\\\n  mkdir -p \\$ORDS_HOME \\$ORDS_CONFIG_DIR && \\\\\n  unzip \\$INSTALL_FILES_DIR/\\$ORDS_INSTALL_FILE -d \\$ORDS_HOME && \\\\\n  java -jar \\$ORDS_HOME/ords.war configdir \\$ORDS_CONFIG_DIR && \\\\\n  cp \\$ORDS_HOME/ords.war /usr/local/tomcat/webapps/ && \\\\\n  sed -i -r \'s/Connector port=\\\\"8080\\\\" protocol=\\\\"HTTP\\/1\\\\.1\\\\"/& scheme=\\\\"https\\\\"/\' \\\\\n    /usr/local/tomcat/conf/server.xml && \\\\\n  rm -f \\$INSTALL_FILES_DIR/\\$ORDS_INSTALL_FILE && \\\\\n  apt clean -y\nEOF\n')),(0,r.mdx)("p",null,"Build the container image."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"cd $BASE_PATH && \\\npodman build -t ords .\n")),(0,r.mdx)("p",null,"Set the following environment variables based on your tenancy, data region, and ADB:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},'ADB_OCID=ocid1.autonomousdatabase.oc1.phx.abyh...4pggq\nADB_NAME=myadb\nORDS_USER=ORDS_PUBLIC_USER2\nORDS_PASSWORD="avoidsimplepasswords"\nWALLET_PASSWORD="atalltimes"\nSERVICE_NAME=${ADB_NAME}_low\nWALLET_FILE_PATH=/tmp/wallet_${ADB_NAME}.zip\nORDS_CONFIG_DIR=$BASE_PATH/conf\n')),(0,r.mdx)("p",null,"Use the OCI CLI to generate the required ADB wallet, and then create the base64-encoded string needed for configuring ORDS to access the database."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"export OCI_CLI_AUTH=instance_principal && \\\noci db autonomous-database generate-wallet \\\n  --autonomous-database-id $ADB_OCID \\\n  --file $WALLET_FILE_PATH \\\n  --password WALLET_PASSWORD && \\\nWALLET_BASE64=`base64 -w 0 $WALLET_FILE_PATH` && \\\nrm -f ${WALLET_FILE_PATH}\n")),(0,r.mdx)("p",null,"Create the database user named in the environment variable ",(0,r.mdx)("inlineCode",{parentName:"p"},"ORDS_USER")," and asssign the necessary privileges. Refer to the section ",(0,r.mdx)("em",{parentName:"p"},"User Accounts")," in the previous ",(0,r.mdx)("a",{parentName:"p",href:"/content/id/2004#User-Accounts"},"post")," if you require help. Then create the ORDS configuration files:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},'mkdir -p $ORDS_CONFIG_DIR/ords/conf && \\\ncat << EOF > $ORDS_CONFIG_DIR/ords/conf/apex_pu.xml\n<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">\n<properties>\n  <entry key="db.username">$ORDS_USER</entry>\n  <entry key="db.password">!$ORDS_PASSWORD</entry>\n  <entry key="db.wallet.zip.service">$SERVICE_NAME</entry>\n  <entry key="db.wallet.zip"><![CDATA[$WALLET_BASE64]]></entry>\n</properties>\nEOF\n\ncat << EOF > $ORDS_CONFIG_DIR/ords/defaults.xml\n<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">\n<properties>\n  <entry key="plsql.gateway.enabled">true</entry>\n  <entry key="jdbc.InitialLimit">5</entry>\n  <entry key="jdbc.MaxLimit">10</entry>\n</properties>\nEOF\n')),(0,r.mdx)("p",null,"Prepare to stage the APEX images files by first setting the following environment variables:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"INSTALL_FILES_DIR=$BASE_DIR/files\nAPEX_INSTALL_FILE=apex_20.2.zip\nAPEX_VERSION=20.2.0.00.20\nAPEX_IMAGES_DIR=$BASE_PATH/apex_images\n")),(0,r.mdx)("p",null,"Execute the snippet below to extract the necessary files from the APEX installation file and deploy them to the Tomcat container."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},'mkdir -p $APEX_IMAGES_DIR && \\\ntouch $APEX_IMAGES_DIR/index.html && \\\nunzip $INSTALL_FILES_DIR/$APEX_INSTALL_FILE "apex/images/*" -d /tmp/ && \\\nmv /tmp/apex/images $APEX_IMAGES_DIR/$APEX_VERSION && \\\nrm -rf /tmp/apex\n')),(0,r.mdx)("p",null,"If your instance is running a version of APEX that has a patch available, then be sure to apply it. Again, you will need access to ",(0,r.mdx)("a",{parentName:"p",href:"https://support.oracle.com"},"Oracle Support")," with the rights to download patches. Set the environment variables:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"PATCH_FILE=p32006852_2020_Generic.zip\nPATCH_NUMBER=32006852\n")),(0,r.mdx)("p",null,"Then run the snippet below to deploy the changes:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},'mkdir -p /tmp/$APEX_VERSION && \\\nunzip /tmp/$PATCH_FILE "$PATCH_NUMBER/images/*" -d /tmp/$APEX_VERSION && \\\nyes | cp -R /tmp/$APEX_VERSION/$PATCH_NUMBER/images/* $APEX_IMAGES_DIR/$APEX_VERSION && \\\nrm -rf /tmp/$APEX_VERSION\n')),(0,r.mdx)("p",null,"Create a utility ",(0,r.mdx)("inlineCode",{parentName:"p"},"run.sh")," script to run the container. The script allows one argument to set the port number to map to, and also used to set the container's name."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"cd $BASE_PATH && \\\ncat << EOF > run.sh\n#!/usr/bin/env bash\n\nPORT_NUMBER=\\${1:-8080}\n\npodman run -d --name=ords_port_\\${PORT_NUMBER} \\\\\n  -p \\$PORT_NUMBER:8080 \\\\\n  -v \\$PWD/conf:/opt/oracle/ords/conf:z \\\\\n  -v $APEX_IMAGES_DIR:/usr/local/tomcat/webapps/i \\\\\n  --restart unless-stopped \\\\\n  ords\nEOF\n")),(0,r.mdx)("p",null,"Finally, since we are running this as a rootless container, the firewall rules must be updated to allow communication on port ",(0,r.mdx)("inlineCode",{parentName:"p"},"8080"),". Execute the following commands:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"sudo firewall-cmd --zone=public --add-port 8080/tcp --permanent && \\\nsudo firewall-cmd --reload\n")),(0,r.mdx)("p",null,"Run the container that's listening on port ",(0,r.mdx)("inlineCode",{parentName:"p"},"8080"),"."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"cd $BASE_PATH && bash run.sh 8080\n")),(0,r.mdx)("p",null,"Finally, setup a load balancer for the customer-managed ORDS instance. This was discussed in an earlier ",(0,r.mdx)("a",{parentName:"p",href:"/content/id/2005"},"post"),"."),(0,r.mdx)("h2",{id:"bonus-task"},"Bonus Task"),(0,r.mdx)("p",null,'If you are also interested in testing out some "redundancy", you might like to run a second container:'),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"PORT_NUMBER=8081 && \\\nsudo firewall-cmd --zone=public --add-port $PORT_NUMBER/tcp --permanent && \\\nsudo firewall-cmd --reload && \\\ncd $BASE_PATH && bash run.sh $PORT_NUMBER\n")),(0,r.mdx)("p",null,"And then add this as a backend server that's listening on port ",(0,r.mdx)("inlineCode",{parentName:"p"},"8081")," to the set. Just be really careful about exceeding the maximum number of concurrent database sessions if this is an Always Free ADB."),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"Add a backend server to simulate redundancy.",src:a(96840).Z,width:"1280",height:"800"})),(0,r.mdx)("p",null,"To be clear, this is really for experimentation and simulation use only. As a best practice, the second container should be deployed on a separate host, preferably in a different availability domain."),(0,r.mdx)("h2",{id:"summary"},"Summary"),(0,r.mdx)("p",null,"This is a great addition to the family of OCI resources that Oracle provides.  Besides deploying customer-managed ORDS to complement the Autonomous Database, APEX developers can also use them to host other workloads to supercharge web applications. For example, running a ",(0,r.mdx)("a",{parentName:"p",href:"https://developer.mozilla.org/docs/Web/API/WebSockets_API"},"WebSocket")," server using ",(0,r.mdx)("a",{parentName:"p",href:"https://socket.io/"},"Socket.IO")," to display realtime updates, or hosting a ",(0,r.mdx)("a",{parentName:"p",href:"https://spring.io/guides/tutorials/rest/"},"REST service using Spring Boot"),". A choice of provisioning low-cost and highly-efficient servers, and the expanded Always Free limits. What's there not to love?"))}c.isMDXComponent=!0},62864:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/arm-chip_1200x720-f0b95bb9172f7f1029520abf5762013b.jpg"},47247:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/checking-ords-version-29ad0477fdddc912bcfccd3e42853cad.png"},32770:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/create-compute-instance-c60a56de44cd2076759bc46d14de00b8.png"},96840:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/extra-backend-server-c2430601506727d26906e5cf093b1fdc.png"}}]);