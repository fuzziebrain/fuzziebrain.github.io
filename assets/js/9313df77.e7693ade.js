"use strict";(self.webpackChunknewsite=self.webpackChunknewsite||[]).push([[12859],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>c,MDXProvider:()=>m,mdx:()=>b,useMDXComponents:()=>p,withMDXComponents:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o.apply(this,arguments)}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),d=function(e){return function(t){var n=p(t.components);return a.createElement(e,o({},t,{components:n}))}},p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,u=d["".concat(l,".").concat(m)]||d[m]||h[m]||o;return n?a.createElement(u,s(s({ref:t},c),{},{components:n})):a.createElement(u,s({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=f;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:r,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},21201:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={title:"Snap in Storage For Your Docker Playground",tags:["docker","oracle","devops","orclapex","environment"],slug:"id/1713",authors:["fuzziebrain"],categories:["Technology","DevOps"],date:new Date("2018-07-11T23:24:31.000Z")},l=void 0,s={permalink:"/content/id/1713",source:"@site/posts/snap-in-storage-for-your-docker-playground/index.md",title:"Snap in Storage For Your Docker Playground",description:"Floppy Disks",date:"2018-07-11T23:24:31.000Z",formattedDate:"July 11, 2018",tags:[{label:"docker",permalink:"/content/tags/docker"},{label:"oracle",permalink:"/content/tags/oracle"},{label:"devops",permalink:"/content/tags/devops"},{label:"orclapex",permalink:"/content/tags/orclapex"},{label:"environment",permalink:"/content/tags/environment"}],readingTime:3.59,hasTruncateMarker:!0,authors:[{name:"Adrian Png",title:"Senior Cloud Solutions Architect @ Insum",url:"https://github.com/fuzziebrain",imageURL:"https://github.com/fuzziebrain.png",key:"fuzziebrain"}],frontMatter:{title:"Snap in Storage For Your Docker Playground",tags:["docker","oracle","devops","orclapex","environment"],slug:"id/1713",authors:["fuzziebrain"],categories:["Technology","DevOps"],date:"2018-07-11T23:24:31.000Z"},prevItem:{title:"Research-Ready",permalink:"/content/id/1714"},nextItem:{title:"A Kscope to Remember",permalink:"/content/id/1712"}},i={authorsImageUrls:[void 0]},c=[],d={toc:c};function p(e){let{components:t,...o}=e;return(0,r.mdx)("wrapper",(0,a.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"Floppy Disks",src:n(23267).Z,width:"1920",height:"1280"})),(0,r.mdx)("p",null,"ICYMI (in case you missed it), a team from ",(0,r.mdx)("a",{parentName:"p",href:"https://www.oracle.com"},"Oracle")," has been hard at work these few months churning out a bunch of ",(0,r.mdx)("a",{parentName:"p",href:"https://www.vagrantup.com"},"Vagrant")," configuration files and scripts that help you provision some really cool virtual machines (VM), powered by ",(0,r.mdx)("a",{parentName:"p",href:"https://www.oracle.com/linux/"},"Oracle Enterprise Linux"),". At the time of writing, here are some of the cool VMs you can build:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Vanilla Oracle Linux"),(0,r.mdx)("li",{parentName:"ul"},"Oracle Database"),(0,r.mdx)("li",{parentName:"ul"},"LAMP stack"),(0,r.mdx)("li",{parentName:"ul"},"Docker Container Registry"),(0,r.mdx)("li",{parentName:"ul"},"Docker Host"),(0,r.mdx)("li",{parentName:"ul"},"Kubernetes")),(0,r.mdx)("p",null,'Make sure you "star" or "watch" their ',(0,r.mdx)("a",{parentName:"p",href:"https://github.com/oracle/vagrant-boxes"},"repository")," for the latest updates."),(0,r.mdx)("p",null,"I was recently tasked to develop a deployment guide using ",(0,r.mdx)("a",{parentName:"p",href:"https://www.docker.com"},"Docker")," for creating ",(0,r.mdx)("a",{parentName:"p",href:"https://apex.oracle.com"},"Oracle Application Express")," (APEX) on the ",(0,r.mdx)("a",{parentName:"p",href:"https://cloud.oracle.com"},"Oracle Cloud Infrastructure"),". To setup my working environment, I decided to deploy an Oracle Database instance using the ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/oracle/docker-images"},"Docker images")," that Oracle has also open sourced previously. However, during that process, I encountered the dreaded:"),(0,r.mdx)("p",null,"{% codeblock lang:plain line_number:false %}\ncheckSpace.sh: ERROR - There is not enough space available in the docker container.\ncheckSpace.sh: The container needs at least 15 GB, but only 4 GB are available.\n{% endcodeblock %}"),(0,r.mdx)("p",null,"My first thought was to set a larger container base size, but the VM was configured to use ",(0,r.mdx)("a",{parentName:"p",href:"https://btrfs.wiki.kernel.org/"},"Btrfs")," as the storage driver, so that clearly wasn't the issue. A quick check on the filesystem quickly revealed what the root problem was: ",(0,r.mdx)("strong",{parentName:"p"},"free disk space"),"!"),(0,r.mdx)("p",null,"{% codeblock lang:bash line_number:false %}\n$ df -h\nFilesystem                   Size  Used Avail Use% Mounted on\ndevtmpfs                     854M     0  854M   0% /dev\ntmpfs                        871M     0  871M   0% /dev/shm\ntmpfs                        871M   17M  855M   2% /run\ntmpfs                        871M     0  871M   0% /sys/fs/cgroup\n/dev/mapper/vg_main-lv_root   32G  5.2G   27G  17% /\n/dev/sda1                    497M   99M  398M  20% /boot\nvagrant                      941G  172G  770G  19% /vagrant\nvagrant_share                941G  172G  770G  19% /vagrant_share\n/dev/sdb                      16G  3.4G   11G  25% /var/lib/docker\ntmpfs                        175M     0  175M   0% /run/user/1000\n{% endcodeblock %}"),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"VM&#39;s Storage Devices",src:n(42718).Z,width:"647",height:"444"})),(0,r.mdx)("p",null,"The base OEL vagrant box downloaded came with two attached virtual disk. The second, was about 16 GB and was available to the system as ",(0,r.mdx)("inlineCode",{parentName:"p"},"/dev/sdb"),". This device is then used for the storage device for Docker containers."),(0,r.mdx)("p",null,"See ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/oracle/vagrant-boxes/blob/master/DockerEngine/scripts/install.sh"},(0,r.mdx)("inlineCode",{parentName:"a"},"scripts/install.sh")),", line 21:"),(0,r.mdx)("p",null,"{% codeblock lang:bash line_number:false %}\ndocker-storage-config -s btrfs -d /dev/sdb\n{% endcodeblock %}"),(0,r.mdx)("p",null,"To solve this issue, I needed to increase the amount of storage available to Docker. Fortunately for Btrfs, this is pretty easy to do. "),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Shutdown the VM (using the Vagrant command to halt the system) so that I could add another 16 GB virtual disk.")),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"Virtual disk OL7U5_x86_64-disk3.vmdk added",src:n(93223).Z,width:"647",height:"444"})),(0,r.mdx)("ol",{start:2},(0,r.mdx)("li",{parentName:"ol"},"Power on the VM."),(0,r.mdx)("li",{parentName:"ol"},'Check that the device can be "seen" by the operating system (OS):')),(0,r.mdx)("p",null,"{% codeblock lang:bash line_number:false %}\n$ lsblk\nNAME                MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nsda                   8:0    0 36.5G  0 disk\n\u251c\u2500sda1                8:1    0  500M  0 part /boot\n\u2514\u2500sda2                8:2    0   36G  0 part\n\u251c\u2500vg_main-lv_root 249:0    0   32G  0 lvm  /\n\u2514\u2500vg_main-lv_swap 249:1    0    4G  0 lvm  ","[SWAP]","\nsdb                   8:16   0 15.6G  0 disk /var/lib/docker\nsdc                   8:32   0   16G  0 disk\n{% endcodeblock %}"),(0,r.mdx)("ol",{start:4},(0,r.mdx)("li",{parentName:"ol"},"Add the new device to the Btrfs volume:")),(0,r.mdx)("p",null,"{% codeblock lang:bash line_number:false %}\n$ sudo btrfs device add /dev/sdc /var/lib/docker\n{% endcodeblock %}"),(0,r.mdx)("ol",{start:5},(0,r.mdx)("li",{parentName:"ol"},"Attempt to spread the data evenly (",(0,r.mdx)("a",{parentName:"li",href:"https://btrfs.wiki.kernel.org/index.php/FAQ#What_does_.22balance.22_do.3F"},"balance"),") across all devices:")),(0,r.mdx)("p",null,"{% codeblock lang:bash line_number:false %}\n$ sudo btrfs filesystem balance /var/lib/docker\nWARNING:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"    Full balance without filters requested. This operation is very\n    intense and takes potentially very long. It is recommended to\n    use the balance filters to narrow down the balanced data.\n    Use 'btrfs balance start --full-balance' option to skip this\n    warning. The operation will start in 10 seconds.\n    Use Ctrl-C to stop it.\n")),(0,r.mdx)("p",null,"10 9 8 7 6 5 4 3 2 1\nStarting balance without any filters.\nDone, had to relocate 12 out of 12 chunks\n{% endcodeblock %}"),(0,r.mdx)("p",null,"Finally, check all went well and that we now have sufficient space to build our very own Oracle Database container."),(0,r.mdx)("p",null,"{% codeblock lang:bash line_number:false %}\n$ df -h\nFilesystem                   Size  Used Avail Use% Mounted on\ndevtmpfs                     854M     0  854M   0% /dev\ntmpfs                        871M     0  871M   0% /dev/shm\ntmpfs                        871M   17M  855M   2% /run\ntmpfs                        871M     0  871M   0% /sys/fs/cgroup\n/dev/mapper/vg_main-lv_root   32G  5.2G   27G  17% /\n/dev/sdb                      32G  3.4G   28G  11% /var/lib/docker\n/dev/sda1                    497M   99M  398M  20% /boot\nvagrant                      941G  175G  767G  19% /vagrant\nvagrant_share                941G  175G  767G  19% /vagrant_share\ntmpfs                        175M     0  175M   0% /run/user/1000\n{% endcodeblock %}"))}p.isMDXComponent=!0},23267:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/black-18320_1920-4e73acb16dfdd3527c591919042e95da.jpg"},93223:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/vm-storage-config-new-fb8ad2569ffe218f27a03df5bec8248c.jpg"},42718:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/vm-storage-config-419c12c4c84142d614f1ff72820d169d.jpg"}}]);