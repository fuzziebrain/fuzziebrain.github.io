"use strict";(self.webpackChunknewsite=self.webpackChunknewsite||[]).push([[17264],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>m,MDXProvider:()=>u,mdx:()=>_,useMDXComponents:()=>c,withMDXComponents:()=>p});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(){return r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},r.apply(this,arguments)}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var m=a.createContext({}),p=function(e){return function(n){var t=c(n.components);return a.createElement(e,r({},n,{components:t}))}},c=function(e){var n=a.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(m.Provider,{value:n},e.children)},d="mdxType",b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=c(t),u=o,d=p["".concat(s,".").concat(u)]||p[u]||b[u]||r;return t?a.createElement(d,l(l({ref:n},m),{},{components:t})):a.createElement(d,l({ref:n},m))}));function _(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,s=new Array(r);s[0]=h;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[d]="string"==typeof e?e:o,s[1]=l;for(var m=2;m<r;m++)s[m]=t[m];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},19133:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var a=t(87462),o=(t(67294),t(3905));const r={title:"Watch Your Weight",tags:["oracle","cloud","oci","orclapex","autonomous","alwaysfree","limits"],slug:"id/1922",authors:["fuzziebrain"],categories:["Technology","Infrastructure","Oracle Cloud"],date:new Date("2019-10-12T00:00:00.000Z")},s=void 0,l={permalink:"/content/id/1922",source:"@site/posts/watch-your-weight/index.md",title:"Watch Your Weight",description:"Horizontal Old Weights",date:"2019-10-12T00:00:00.000Z",formattedDate:"October 12, 2019",tags:[{label:"oracle",permalink:"/content/tags/oracle"},{label:"cloud",permalink:"/content/tags/cloud"},{label:"oci",permalink:"/content/tags/oci"},{label:"orclapex",permalink:"/content/tags/orclapex"},{label:"autonomous",permalink:"/content/tags/autonomous"},{label:"alwaysfree",permalink:"/content/tags/alwaysfree"},{label:"limits",permalink:"/content/tags/limits"}],readingTime:4.99,hasTruncateMarker:!0,authors:[{name:"Adrian Png",title:"Senior Cloud Solutions Architect @ Insum",url:"https://github.com/fuzziebrain",imageURL:"https://github.com/fuzziebrain.png",key:"fuzziebrain"}],frontMatter:{title:"Watch Your Weight",tags:["oracle","cloud","oci","orclapex","autonomous","alwaysfree","limits"],slug:"id/1922",authors:["fuzziebrain"],categories:["Technology","Infrastructure","Oracle Cloud"],date:"2019-10-12T00:00:00.000Z"},prevItem:{title:"APEX Challenge Coin 2020 Edition",permalink:"/content/id/2001"},nextItem:{title:"OGB Appreciation Day: Challenge Coin Sponsors",permalink:"/content/id/1921"}},i={authorsImageUrls:[void 0]},m=[{value:"Oracle Advanced Compression",id:"oracle-advanced-compression",level:2}],p={toc:m};function c(e){let{components:n,...r}=e;return(0,o.mdx)("wrapper",(0,a.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("p",null,(0,o.mdx)("img",{alt:"Horizontal Old Weights",src:t(50427).Z,width:"1280",height:"720"})),(0,o.mdx)("p",null,"A reader left an interesting comment/question in my previous post on ",(0,o.mdx)("a",{parentName:"p",href:"/content/id/1920/"},"Making the Move to the Autonomous Database"),":"),(0,o.mdx)("blockquote",null,(0,o.mdx)("p",{parentName:"blockquote"},'"Would You explain how can i check my on-premise DB to satisfy ADB size limitation 20G? What is the size 20G of?"')),(0,o.mdx)("p",null,"This is an excellent question to ask before embarking on any ",(0,o.mdx)("a",{parentName:"p",href:"https://www.oracle.com/database/autonomous-database.html"},"Autonomous Database")," (ADB) migration plans and so I dug a bit deeper. "),(0,o.mdx)("p",null,"Folks moving applications and data from an ",(0,o.mdx)("a",{parentName:"p",href:"https://oracle.com/xe"},"Oracle Database Express Edition")," (XE) instance, version 11gR2 or 18c, will probably not have problems fitting into a Free Tier Autonomous Database (ADB) since database sizes are capped at 11 and 12 GB respectively. You are allowed a maximum of 20 GB user for each Free Tier ADB provisioned. "),(0,o.mdx)("p",null,"To estimate the data size to be migrated, execute the following query as ",(0,o.mdx)("em",{parentName:"p"},"SYS")," on the source database:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-sql"},"select\n  case grouping(owner) when 1 then 'Total' else owner end as owner\n  , round(sum(bytes) / power(2,10), 2) as space_usage_kb\n  , round(sum(bytes) / power(2,20), 2) as space_usage_mb\n  , round(sum(bytes) / power(2,30), 2) as space_usage_gb\nfrom dba_segments\nwhere owner in ('CONTOSO_APP', 'CONTOSO_WEB', 'LOGGER')\ngroup by rollup(owner);\n")),(0,o.mdx)("p",null,"Output:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"OWNER                SPACE_USAGE_KB SPACE_USAGE_MB SPACE_USAGE_GB\n-------------------- -------------- -------------- --------------\nCONTOSO_APP               32,896.00          32.13           0.03\nCONTOSO_WEB                6,720.00           6.56           0.01\nLOGGER                     1,280.00           1.25           0.00\nTotal                     40,896.00          39.94           0.04\n")),(0,o.mdx)("p",null,"That's great! My toy application only requires about 40 MB of storage, but after importing the data into the ADB, I get this on the Service Console?"),(0,o.mdx)("p",null,(0,o.mdx)("img",{alt:"ADB Service Console",src:t(86574).Z,width:"1280",height:"800"})),(0,o.mdx)("p",null,"As it turns out, the total amount of storage used includes quite a few more components than anticipated. The following query should yield values that tally with the amount displayed on the Service Console."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-sql"},"select\n  case grouping(tablespace_name) when 1 then 'Total' else tablespace_name end as tablespace_name\n  , round(sum(bytes) / power(2, 30), 2) as total_size_gb\n  , round(sum(maxbytes) / power(2, 30), 2) as max_size_gb\nfrom (\n  select tablespace_name, bytes, maxbytes\n  from dba_data_files\n  where tablespace_name != 'SAMPLESCHEMA'\n  union all\n  select 'TEMP' as tablespace_name, bytes, maxbytes\n  from dba_temp_files\n)\ngroup by rollup(tablespace_name);\n")),(0,o.mdx)("p",null,"Output:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"TABLESPACE_NAME                TOTAL_SIZE_GB   MAX_SIZE_GB\n------------------------------ ------------- -------------\nDATA                                    0.10     32,768.00\nDBFS_DATA                               0.10     32,768.00\nSYSAUX                                  2.07     32,768.00\nSYSTEM                                  0.74     32,768.00\nTEMP                                    2.03          6.00\nUNDOTBS1                                0.42          1.00\nUNDO_2                                  0.42          1.00\nTotal                                   5.89    131,080.00\n\n8 rows selected.\n")),(0,o.mdx)("p",null,'Based on the above output, it is clear that a more accurate measure of the ADB\'s storage footprint requires us to consider other "non-application" tablespaces, e.g. ',(0,o.mdx)("inlineCode",{parentName:"p"},"SYSTEM"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"SYSAUX"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"TEMP"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"UNDO")," and more! "),(0,o.mdx)("p",null,"The tablespace ",(0,o.mdx)("inlineCode",{parentName:"p"},"DATA")," is the default tablespace for schema users (think ",(0,o.mdx)("inlineCode",{parentName:"p"},"USERS")," tablespace) and is where your application data really lives. Given that ",(0,o.mdx)("inlineCode",{parentName:"p"},"TEMP"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"UNDOTBS1")," and perhaps ",(0,o.mdx)("inlineCode",{parentName:"p"},"UNDO_2")," have a max of 8 GB, it looks like application data really needs to remain within the confines of 12 GB. And even so, more needs to be understood about how the other tablespaces might grow as the database is used, before we can fully appreciate how much room we have to maneuver."),(0,o.mdx)("h2",{id:"oracle-advanced-compression"},"Oracle Advanced Compression"),(0,o.mdx)("p",null,"If you have used ",(0,o.mdx)("a",{parentName:"p",href:"https://www.oracle.com/database/technologies/advanced-compression.html"},"Oracle Advanced Compression"),", ",(0,o.mdx)("a",{parentName:"p",href:"https://docs.oracle.com/en/database/oracle/oracle-database/18/xelic/licensing-information.html#GUID-3BD43E8F-53C3-42F0-BBBD-B743FD41F951__VLDBDATAWAREHOUSINGANDBUSINESSINTEL-6DD7F365"},"available")," in 18c XE, then your tables should remain compressed. While an Automonous Transaction Processing (ATP) database does not compress tables by default, it will do so if specified. For Autonomous Data Warehouse (ADW), compression is enabled by default."),(0,o.mdx)("blockquote",null,(0,o.mdx)("p",{parentName:"blockquote"},(0,o.mdx)("strong",{parentName:"p"},"NOTE:")),(0,o.mdx)("p",{parentName:"blockquote"},"If you wanted to get some data to try out the following steps, use the ",(0,o.mdx)("inlineCode",{parentName:"p"},"CUSTOMERS")," table in schema ",(0,o.mdx)("inlineCode",{parentName:"p"},"SH")," that should be available to all ADBs:"),(0,o.mdx)("pre",{parentName:"blockquote"},(0,o.mdx)("code",{parentName:"pre",className:"language-sql"},"  create table customers_sample as\n  select * from SH.customers where rownum < 10000;\n"))),(0,o.mdx)("p",null,"First, check if the table already has compression enabled. Execute this query as the schema user:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-sql"},"select table_name, compression, compress_for\nfrom user_tables\nwhere table_name = 'CUSTOMERS_SAMPLE';\n")),(0,o.mdx)("p",null,"Output:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"TABLE_NAME                     COMPRESS COMPRESS_FOR                  \n------------------------------ -------- ------------------------------\nCUSTOMERS_SAMPLE               DISABLED\n")),(0,o.mdx)("p",null,"Next, estimate the amount of storage used by this table:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-sql"},"select \n  segment_name\n  , bytes / power(2, 10) as size_kb\n  , bytes / power(2, 20) as size_mb\n  , bytes / power(2, 30) as size_gb\nfrom user_segments\nwhere 1 = 1\n  and segment_name = 'CUSTOMERS_SAMPLE' \n  and segment_type = 'TABLE'\n;\n")),(0,o.mdx)("p",null,"Output:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"SEGMENT_NAME                        SIZE_KB      SIZE_MB      SIZE_GB\n------------------------------ ------------ ------------ ------------\nCUSTOMERS_SAMPLE                    3072.00         3.00         0.00\n")),(0,o.mdx)("p",null,"The ",(0,o.mdx)("inlineCode",{parentName:"p"},"DBMS_COMPRESS.GET_COMPRESSION_RATIO")," is a built-in proceedure that could be used to estimate the amount of space savings. The code below checks the compression ratio for table ",(0,o.mdx)("inlineCode",{parentName:"p"},"CUSTOMERS_SAMPLE")," with Advanced Row Compression."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"declare\n  c_schema_name constant varchar2(20) := 'CONTOSO_WEB';\n  c_object_name constant varchar2(20) := 'CUSTOMERS_SAMPLE';\n\n  l_blkcnt_cmp pls_integer;\n  l_blkcnt_uncmp pls_integer;\n  l_row_cmp pls_integer;\n  l_row_uncmp pls_integer;\n  l_cmp_ratio number;\n  l_comptype_str varchar2(32767);\nbegin\n  dbms_compression.get_compression_ratio(\n    scratchtbsname => 'DATA'\n    , ownname => c_schema_name\n    , objname => c_object_name\n    , subobjname => null\n    , comptype => dbms_compression.comp_advanced\n    , blkcnt_cmp => l_blkcnt_cmp\n    , blkcnt_uncmp => l_blkcnt_uncmp\n    , row_cmp => l_row_cmp\n    , row_uncmp => l_row_uncmp\n    , cmp_ratio => l_cmp_ratio\n    , comptype_str => l_comptype_str\n  );\n  \n  dbms_output.put_line('Compression ratio = ' || l_cmp_ratio);\nend;\n/\n")),(0,o.mdx)("p",null,"Now add compression to the ",(0,o.mdx)("inlineCode",{parentName:"p"},"CUSTOMERS_SAMPLE")," table:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-sql"},"alter table customers_sample \nmove compress for all operations;\n")),(0,o.mdx)("p",null,"The ",(0,o.mdx)("inlineCode",{parentName:"p"},"MOVE")," clause allows you to encrypt existing data in the table, but bear in mind that there is sufficient amount of space for the transition. Don't perform this operation if you are already running out of space!"),(0,o.mdx)("p",null,"Check the table properties and storage sizes again:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-sql"},"SQL> select table_name, compression, compress_for\n  2  from user_tables\n  3  where table_name = 'CUSTOMERS_SAMPLE';\n\nTABLE_NAME                     COMPRESS COMPRESS_FOR                  \n------------------------------ -------- ------------------------------\nCUSTOMERS_SAMPLE               ENABLED  ADVANCED\n\nSQL> select \n  2    segment_name\n  3    , bytes / power(2, 10) as size_kb\n  4    , bytes / power(2, 20) as size_mb\n  5    , bytes / power(2, 30) as size_gb\n  6  from user_segments\n  7  where 1 = 1\n  8    and segment_name = 'CUSTOMERS_SAMPLE' \n  9*   and segment_type = 'TABLE';\n\nSEGMENT_NAME                        SIZE_KB      SIZE_MB      SIZE_GB\n------------------------------ ------------ ------------ ------------\nCUSTOMERS_SAMPLE                    2048.00         2.00         0.00\n")),(0,o.mdx)("p",null,"Looks like I didn't achieve the amount of compression that was anticipated, but something is definitely better than nothing. There are other compression options I could use to achieve higher amounts of space savings, but deciding on the right approach is obviously more involved. The examples here are meant to demonstrate what is possible with ADBs."))}c.isMDXComponent=!0},86574:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/adb-service-console-overview-2030d0e4bb92495894ac518a35988f00.png"},50427:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/horizontal-930716_1280x720-c8d131aa3bbd0dbb94e7c4e2c16224b7.jpg"}}]);