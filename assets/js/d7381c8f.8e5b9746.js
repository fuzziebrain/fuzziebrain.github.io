"use strict";(self.webpackChunknewsite=self.webpackChunknewsite||[]).push([[8731],{3905:(e,t,a)=>{a.r(t),a.d(t,{MDXContext:()=>c,MDXProvider:()=>m,mdx:()=>f,useMDXComponents:()=>p,withMDXComponents:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},o.apply(this,arguments)}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),d=function(e){return function(t){var a=p(t.components);return n.createElement(e,o({},t,{components:a}))}},p=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,u=d["".concat(i,".").concat(m)]||d[m]||h[m]||o;return a?n.createElement(u,l(l({ref:t},c),{},{components:a})):n.createElement(u,l({ref:t},c))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},83663:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const o={title:"Making AI Accessible to APEX",tags:["oracle cloud","artificial intelligence","machine learning","orclapex","oci","natural language processing"],slug:"id/2010",authors:["fuzziebrain"],categories:["Technology","Infrastructure","Oracle Cloud"],date:new Date("2021-05-08T11:24:17.000Z")},i=void 0,l={permalink:"/content/id/2010",source:"@site/posts/making-ai-accessible-to-apex/index.md",title:"Making AI Accessible to APEX",description:"Figuring out sentiments.",date:"2021-05-08T11:24:17.000Z",formattedDate:"May 8, 2021",tags:[{label:"oracle cloud",permalink:"/content/tags/oracle-cloud"},{label:"artificial intelligence",permalink:"/content/tags/artificial-intelligence"},{label:"machine learning",permalink:"/content/tags/machine-learning"},{label:"orclapex",permalink:"/content/tags/orclapex"},{label:"oci",permalink:"/content/tags/oci"},{label:"natural language processing",permalink:"/content/tags/natural-language-processing"}],readingTime:5.3,hasTruncateMarker:!0,authors:[{name:"Adrian Png",title:"Senior Cloud Solutions Architect @ Insum",url:"https://github.com/fuzziebrain",imageURL:"https://github.com/fuzziebrain.png",key:"fuzziebrain"}],frontMatter:{title:"Making AI Accessible to APEX",tags:["oracle cloud","artificial intelligence","machine learning","orclapex","oci","natural language processing"],slug:"id/2010",authors:["fuzziebrain"],categories:["Technology","Infrastructure","Oracle Cloud"],date:"2021-05-08T11:24:17.000Z"},prevItem:{title:"ARM Your APEX Instance",permalink:"/content/id/2011"},nextItem:{title:"Manipulating the Oracle Cloud with PL/SQL",permalink:"/content/id/2009"}},s={authorsImageUrls:[void 0]},c=[{value:"Identity and Policy",id:"identity-and-policy",level:2},{value:"Demo Application",id:"demo-application",level:2}],d={toc:c};function p(e){let{components:t,...o}=e;return(0,r.mdx)("wrapper",(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"Figuring out sentiments.",src:a(44845).Z,width:"1200",height:"800"})),(0,r.mdx)("p",null,"The ",(0,r.mdx)("a",{parentName:"p",href:"https://oracle.com/cloud/"},(0,r.mdx)("em",{parentName:"a"},"Oracle Cloud Infrastructure"))," (OCI) is a great platform in many ways. However, as much as I love it, I have long griped about the lack of out-of-the-box support for AI services that many of Oracle's competitors have. Well, as of May 6, 2021, I am glad to see that things are starting to turn around with the ",(0,r.mdx)("a",{parentName:"p",href:"https://docs.oracle.com/iaas/releasenotes/changes/f801b1f5-b40d-49a5-bbb1-e2b2001ce2cf/"},"launch")," of the OCI ",(0,r.mdx)("em",{parentName:"p"},"Language")," service."),(0,r.mdx)("p",null,'Today, there are different ways to "AI-enable" an ',(0,r.mdx)("a",{parentName:"p",href:"https://apex.oracle.com"},(0,r.mdx)("em",{parentName:"a"},"Oracle Application Express"))," (APEX). For a long time now, Oracle has had several PL/SQL packages under the Oracle Enterprise Database's Machine Learning option, or what used to be known as Oracle Advanced Analytics. This option is in fact, ",(0,r.mdx)("a",{parentName:"p",href:"https://blogs.oracle.com/database/machine-learning,-spatial-and-graph-no-license-required-v2"},"no longer")," an option and is included in all editions of the database."),(0,r.mdx)("p",null,"Specifically, ",(0,r.mdx)("a",{parentName:"p",href:"https://www.oracle.com/database/technologies/datawarehouse-bigdata/oml4sql.html"},(0,r.mdx)("em",{parentName:"a"},"Oracle Machine Learning for SQL"))," (OML4SQL) allows the PL/SQL developer to train and apply ML models without the data leaving the database. It supports a variety of ML algorithms, and generally, does not require developers to have advanced theoretical knowledge of ML. And because it relies only on PL/SQL and SQL, it can be easily integrated into APEX. However, developers are limited to ML algorithms that have been implemented by Oracle."),(0,r.mdx)("p",null,"About a month ago, Oracle announced the general availability of ",(0,r.mdx)("em",{parentName:"p"},"AutoML")," and ",(0,r.mdx)("em",{parentName:"p"},"OML Services")," on the ",(0,r.mdx)("em",{parentName:"p"},"Autonomous Database")," (ADB). Developers who are not too ML-savvy can use the AutoML UI (user interface), available through the Oracle Machine Learning Notebooks that is included with every ADB. AutoMl automates the process of selecting, training, testing, and evaluating ML models. The generated models can then be exposed through OML Services' REST APIs."),(0,r.mdx)("p",null,"However, sometimes, all we need is a ready-to-use AI/ML model that performs a rather generic task. Very common these days is the need to perform ",(0,r.mdx)("em",{parentName:"p"},"Sentiment Analysis"),' on a body of text. Microsoft Azure\'s Cognitive Services has Text Analytics and AWS has Amazon Comprehend. What does Oracle have? At least now we can say, "OCI Language Services." It took a while, but better late than never!'),(0,r.mdx)("h2",{id:"identity-and-policy"},"Identity and Policy"),(0,r.mdx)("p",null,"As a best practice, we should create an OCI user specifically for interacting with the OCI REST API on behalf of the APEX application. The user should have limited OCI capabilities and should only be allowed to have API access and nothing more. You will need to generate the API keys and can easily do this from the user's details page in the OCI console."),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"Generate and download the API key pair from OCI console.",src:a(11138).Z,width:"1280",height:"800"})),(0,r.mdx)("p",null,"You should also download the keys in PEM format. Also, gather the information (click the ",(0,r.mdx)("em",{parentName:"p"},"View Configuration File")," link on the user's details page) that you will need to setup the APEX Web Credentials for OCI, specifically:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"User OCID"),(0,r.mdx)("li",{parentName:"ul"},"Tenant OCID; and"),(0,r.mdx)("li",{parentName:"ul"},"The API key's fingerprint")),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"Gather the OCI information that you will need.",src:a(26299).Z,width:"1280",height:"800"})),(0,r.mdx)("p",null,"Open the private key that you had downloaded from the OCI console and remove (a) the enclosing tags ",(0,r.mdx)("inlineCode",{parentName:"p"},"-----BEGIN PRIVATE KEY-----")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"-----END PRIVATE KEY-----"),"; and (b) ",(0,r.mdx)("strong",{parentName:"p"},"all")," newline characters. The end result should be a very long string of characters. This is the ",(0,r.mdx)("em",{parentName:"p"},"OCI Private Key")," that you will need to provide in the APEX Web Credentials. Copy the text, but ",(0,r.mdx)("strong",{parentName:"p"},"do not")," save the PEM file."),(0,r.mdx)("p",null,"Create the Web Credentials with the required information about your user and tenancy."),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"Setup APEX Web Credentials.",src:a(35590).Z,width:"1280",height:"800"})),(0,r.mdx)("p",null,"Next, create an IAM Group, e.g., ",(0,r.mdx)("em",{parentName:"p"},"AiLanguageUsers"),", and assign the user to the group."),(0,r.mdx)("p",null,"To use the Language Services, we will need to create a policy to allow users access. We have the option of creating a blanket policy with the following statement:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"allow any-user to use ai-service-language-family in tenancy\n")),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"OR")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"allow group AiLanguageUsers to use ai-service-language-family in tenancy\n")),(0,r.mdx)("p",null,"I recommend the latter."),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"Create a policy to allow a group access to the Language Services.",src:a(98140).Z,width:"1280",height:"800"})),(0,r.mdx)("h2",{id:"demo-application"},"Demo Application"),(0,r.mdx)("p",null,"Create a simple APEX application to demonstrate the utility of the Language Service through its REST API."),(0,r.mdx)("p",null,(0,r.mdx)("img",{src:a(48834).Z,width:"1280",height:"800"})),(0,r.mdx)("p",null,"The key items are:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Two textarea page items"),(0,r.mdx)("li",{parentName:"ul"},"A button that triggers a dynamic action"),(0,r.mdx)("li",{parentName:"ul"},"A dynamic action that sets one item using a PL/SQL function with the code below:")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-sql"},"declare\n  c_base_url constant varchar2(59) := 'https://language.aiservice.us-phoenix-1.oci.oraclecloud.com';\n  c_endpoint_path constant varchar2(50) := '/20210101/actions/detectLanguageSentiments';\n  c_web_credential constant varchar2(30) := 'DG_ADBAGENT01';\n\n  l_response clob;\nbegin\n  apex_web_service.g_request_headers(1).name := 'Content-Type';\n  apex_web_service.g_request_headers(1).value := 'application/json';\n\n  l_response := apex_web_service.make_rest_request(\n    p_url => c_base_url || c_endpoint_path\n      , p_http_method => 'POST'\n      , p_body => '{ \"text\": \"' || apex_escape.json(:P1_INPUT) || '\" }'\n      , p_credential_static_id => c_web_credential\n    );\n\n  return l_response;\nend;\n")),(0,r.mdx)("p",null,"This DA simply takes the input text and makes a POST request to the appropriate endpoint for performing sentiment analysis. The expected output is a JSON containing the model's prediction."),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"We made it!",src:a(45688).Z,width:"1280",height:"800"})),(0,r.mdx)("p",null,(0,r.mdx)("del",{parentName:"p"},"Unfortunately, it doesn't seem to work right now and I'm in touch with ",(0,r.mdx)("a",{parentName:"del",href:"https://twitter.com/cczarski"},"Carsten")," to figure this out.")),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},(0,r.mdx)("del",{parentName:"p"},"[TODO]"," I will update the post as soon as there's a positive outcome."))),(0,r.mdx)("p",null,"[UPDATE, 2021-05-10]"," A noob error! I should have checked the debugger logs. As it turns out, I was missing the HTTP header ",(0,r.mdx)("inlineCode",{parentName:"p"},"Content-Type"),". All systems go! The above code snippet and screenshot have been updated to reflect the success! Special thanks to ",(0,r.mdx)("a",{parentName:"p",href:"https://twitter.com/cczarski"},"Carsten")," who helped validate that this REST call is supported and should have been successful."),(0,r.mdx)("p",null,"Meanwhile, I've tried looking at the OCI PL/SQL SDK that I had discussed in the ",(0,r.mdx)("a",{parentName:"p",href:"/content/id/2009"},"previous post"),", but it doesn't appear to have been updated on my ADB."),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"[TODO]"," I will also update this post as that becomes available.")),(0,r.mdx)("p",null,"What's working though is the OCI CLI, but you will need to upgrade it to access the new commands. Here's an example and the output that we should have obtained through the example APEX application."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},'$ oci ai language detect-sentiments --text "I feel great with the launch of OCI AI Language Services!"\n{\n  "data": {\n    "aspects": [\n      {\n        "length": 6,\n        "offset": 22,\n        "scores": {\n          "Negative": 0.0004437448224052787,\n          "Neutral": 0.0,\n          "Positive": 0.9995562434196472\n        },\n        "sentiment": "Positive",\n        "text": "launch"\n      },\n      {\n        "length": 24,\n        "offset": 32,\n        "scores": {\n          "Negative": 0.00011140753485960886,\n          "Neutral": 0.0,\n          "Positive": 0.99988853931427\n        },\n        "sentiment": "Positive",\n        "text": "OCI AI Language Services"\n      }\n]\n  }\n}\n')),(0,r.mdx)("p",null,"Exciting times! As I have repeatedly said, the OCI keeps getting better. I'm certainly looking forward to resolving the issues I have encountered, and hopefully, more AI services to be launched in the near future!"),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},(0,r.mdx)("strong",{parentName:"p"},"Credits")),(0,r.mdx)("p",{parentName:"blockquote"},"Photo by ",(0,r.mdx)("a",{href:"https://unsplash.com/@markuswinkler?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText"},"Markus Winkler")," on ",(0,r.mdx)("a",{href:"https://unsplash.com/s/photos/emoji?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText"},"Unsplash"))))}p.isMDXComponent=!0},45688:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/apex-we-got-there-5f09ec0dbf80b996fd222ca227ce3812.png"},48834:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/demo-page-ca194db60884f70b1042c0df7e4ba2cb.png"},44845:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/emoji-1200x800-d8d45696b386878f5cc9eabc625f019d.jpg"},26299:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/gather-information-87f5622a950a8956edf13604e40aae48.png"},11138:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/generate-download-api-keys-96cc67d2152726a764c819f68d2dc552.png"},98140:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/policy-b3b52e0a770a20b07507f469e41d6074.png"},35590:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/web-credentials-71cc4c78df4dc7ce1cd8059658f14425.png"}}]);