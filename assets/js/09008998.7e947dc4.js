"use strict";(self.webpackChunknewsite=self.webpackChunknewsite||[]).push([[42869],{49910:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>h});var i=a(85893),n=a(11151);const s={title:"Build Two Walls",tags:["orclapex","security","authentication","two-factor","multi-factor","2fa","mfa"],categories:["Technology","Programming","Oracle Application Express"],slug:"id/1718",authors:["fuzziebrain"],date:new Date("2018-10-18T00:28:32.000Z")},o=void 0,r={permalink:"/content/id/1718",source:"@site/posts/build-two-walls/index.md",title:"Build Two Walls",description:"1280 720 The Great Wall of China",date:"2018-10-18T00:28:32.000Z",formattedDate:"October 18, 2018",tags:[{label:"orclapex",permalink:"/content/tags/orclapex"},{label:"security",permalink:"/content/tags/security"},{label:"authentication",permalink:"/content/tags/authentication"},{label:"two-factor",permalink:"/content/tags/two-factor"},{label:"multi-factor",permalink:"/content/tags/multi-factor"},{label:"2fa",permalink:"/content/tags/2-fa"},{label:"mfa",permalink:"/content/tags/mfa"}],readingTime:3.525,hasTruncateMarker:!0,authors:[{name:"Adrian Png",title:"Senior Cloud Solutions Architect @ Insum",url:"https://github.com/fuzziebrain",imageURL:"https://github.com/fuzziebrain.png",key:"fuzziebrain"}],frontMatter:{title:"Build Two Walls",tags:["orclapex","security","authentication","two-factor","multi-factor","2fa","mfa"],categories:["Technology","Programming","Oracle Application Express"],slug:"id/1718",authors:["fuzziebrain"],date:"2018-10-18T00:28:32.000Z"},unlisted:!1,prevItem:{title:"Sweet 18 - A New Oracle XE Release",permalink:"/content/id/1719"},nextItem:{title:"ODC Appreciation Day: Goodbye Oracle Multimedia",permalink:"/content/id/1717"}},l={authorsImageUrls:[void 0]},h=[{value:"The Code",id:"the-code",level:2},{value:"Highlights",id:"highlights",level:2},{value:"Registration",id:"registration",level:3},{value:"Authentication",id:"authentication",level:3},{value:"OTP Validation",id:"otp-validation",level:3},{value:"Closing",id:"closing",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"1280 720 The Great Wall of China",src:a(7092).Z+"",width:"1280",height:"720"})}),"\n",(0,i.jsx)(t.p,{children:"Authentication is an essential component of any enterprise application. These days though, it isn't enough to protect your applications with only a username and password. These are easily stolen by key loggers, sniffing non-encrypted HTTP traffic, phishing, hacked Internet services and the list goes on. To make matters worse, many users have a poor habit of reusing passwords that thieves then use to penetrate other systems. I have had my fair share of that experience."}),"\n",(0,i.jsxs)(t.p,{children:["The question is, can we implement ",(0,i.jsx)(t.a,{href:"https://wikipedia.org/wiki/Multi-factor_authentication",children:"two-factor authentication"})," (TFA) in ",(0,i.jsx)(t.a,{href:"https://apex.oracle.com",children:"Oracle Application Express"})," (APEX)?"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Yes we can!"})}),"\n",(0,i.jsx)(t.h2,{id:"the-code",children:"The Code"}),"\n",(0,i.jsxs)(t.p,{children:["Right around the time when I grew interested in implementing the ",(0,i.jsx)(t.a,{href:"https://wikipedia.org/wiki/Time-based_One-time_Password_algorithm",children:"Time-based One-time Password"})," (TOTP) algorithm, I stumbled upon ",(0,i.jsx)(t.a,{href:"https://community.oracle.com/thread/3905510",children:"code"})," written by Rabbit on the Oracle Community Forums, only months earlier. Hurrah! I didn't have to deal with the mathematical intricacies of implementing the algorithm in PL/SQL code."]}),"\n",(0,i.jsxs)(t.p,{children:["After discussing with ",(0,i.jsx)(t.a,{href:"https://twitter.com/martindsouza",children:"Martin D'Souza"}),", we decided that the best way to share this useful algorithm was through OraOpenSource ",(0,i.jsx)(t.a,{href:"https://github.com/OraOpenSource/oos-utils",children:"oos-utils"}),". All it needed was some additional functionality to make it useful for implementing a custom authentication scheme with TFA support in APEX. We also swapped out the ",(0,i.jsx)(t.code,{children:"dbms_crypto"})," requirement and used ",(0,i.jsx)(t.a,{href:"https://twitter.com/AntonScheffer",children:"Anton Scheffer's"})," ",(0,i.jsx)(t.code,{children:"oos_util_crypto"})," library to perform the ",(0,i.jsx)(t.a,{href:"https://wikipedia.org/wiki/HMAC",children:"HMAC"})," hashing instead. This means, the code should be usable in your workspace on ",(0,i.jsx)(t.a,{href:"https://apex.oracle.com",children:"apex.oracle.com"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"What was missing in the release though, was a demo application to showcase its use, so two years later, here it is!"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)("i",{class:"fa globe"}),(0,i.jsx)(t.a,{href:"https://apeks.app/ords/f?p=TFADEMO",children:"Demo application"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)("i",{class:"fa git"}),(0,i.jsx)(t.a,{href:"https://github.com/fuzziebrain/orclapex-tfa-demo",children:"Source code"})]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"highlights",children:"Highlights"}),"\n",(0,i.jsx)(t.p,{children:"The following are a few key points about the implementation that I thought might be of interest."}),"\n",(0,i.jsx)(t.h3,{id:"registration",children:"Registration"}),"\n",(0,i.jsxs)(t.p,{children:['The registration does not automatically "turn on" TFA for new accounts. The new user is expected to login to the system and activate the TFA protection. During registration, a random and unique key was generated for the account. Whenever TFA is activated, a QR code is generated using the function ',(0,i.jsx)(t.code,{children:"oos_util_totp.format_key_uri"}),', user\'s "shared secret" and a suitable, trusted QR code generation JavaScript library. This allows the user to setup the security application and generate one-time passwords (OTP). The user must validate a OTP before the feature is enabled for the account.']}),"\n",(0,i.jsx)(t.h3,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsx)(t.p,{children:"The authentication process will allow users to authenticate with or without OTP validation depending on the user's preference. The original (default) login page 9999 was modified to support both authentication workflows."}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"Login"})," process typically calls ",(0,i.jsx)(t.code,{children:"apex_authentication.login"})," that triggers a sequence of events ",(0,i.jsx)(t.a,{href:"https://docs.oracle.com/database/apex-18.2/AEAPI/LOGIN-Procedure.htm#AEAPI29157",children:"listed"})," in the official APEX documentation. The process calls an authentication function that matches usernames and passwords. If the function returns true, then the APEX engine will, in a nutshell, set the username for the session and redirect to the requested resource. This function call was replaced with a procedure, ",(0,i.jsx)(t.code,{children:"pkg_tfa_apex.p_authenticate_user"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-plsql",children:"if l_password_hash = f_hash_password(p_password => p_password) then\n  if l_tfa_enabled = 0 then\n    apex_authentication.post_login(\n      p_username => p_username\n      , p_password => null\n    );\n    apex_util.clear_page_cache();\n  end if;\nelse\n  raise login_failed;\nend if;\n"})}),"\n",(0,i.jsxs)(t.p,{children:["If TFA is ",(0,i.jsx)(t.strong,{children:"not"})," enabled, then ",(0,i.jsx)(t.code,{children:"apex_authentication.post_login"})," is called. We have already established that the username and password are correct, so this allows us to bypass the first two steps in a typical authentication sequence."]}),"\n",(0,i.jsxs)(t.p,{children:["Usually, the default login page has a final process that clears the session state for the page, but that was removed. A branch to a second-step login page (10000) was added. It passes the username entered on page 9999 to the the next page for OTP validation. The username is used to retrieve the user's shared secret that is is required by ",(0,i.jsx)(t.code,{children:"oos_util_totp.validate_otp"}),". Hence, I opted to call ",(0,i.jsx)(t.code,{children:"apex_util.clear_page_cache"})," only if TFA was turned off."]}),"\n",(0,i.jsx)(t.h3,{id:"otp-validation",children:"OTP Validation"}),"\n",(0,i.jsxs)(t.p,{children:['The login process redirects to a second login page that requires the user to enter the OTP from a "registered" security app. This is verified (must match with what the system generates) using a page validation. If that checks out, then we will proceed to call the ',(0,i.jsx)(t.code,{children:"apex_authentication.post_login"})," procedure and complete the login process."]}),"\n",(0,i.jsx)(t.h2,{id:"closing",children:"Closing"}),"\n",(0,i.jsx)(t.p,{children:"As always, security is an important issue in any software application we build. I am always learning, so please drop me a note if you spot anything wrong with the approach, or have suggestions for improvement."}),"\n",(0,i.jsx)(t.p,{children:"Thanks for reading!"})]})}function d(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},7092:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/china-2097075_1280x720-3b0d33b35a0d3974025744eab9ecf129.jpg"},11151:(e,t,a)=>{a.d(t,{Z:()=>r,a:()=>o});var i=a(67294);const n={},s=i.createContext(n);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);