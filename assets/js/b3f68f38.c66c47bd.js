"use strict";(self.webpackChunknewsite=self.webpackChunknewsite||[]).push([[10685],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>p,MDXProvider:()=>d,mdx:()=>g,useMDXComponents:()=>m,withMDXComponents:()=>c});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(){return o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},o.apply(this,arguments)}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),c=function(e){return function(n){var t=m(n.components);return a.createElement(e,o({},n,{components:t}))}},m=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=m(e.components);return a.createElement(p.Provider,{value:n},e.children)},u="mdxType",_={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=m(t),d=r,u=c["".concat(i,".").concat(d)]||c[d]||_[d]||o;return t?a.createElement(u,s(s({ref:n},p),{},{components:t})):a.createElement(u,s({ref:n},p))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=h;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},95683:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=t(87462),r=(t(67294),t(3905));const o={title:"Intelligent APEX Applications - Fact or Fiction?",tags:["oracle cloud","orclapex","artificial intelligence","ai","machine learning","ml","rest"],slug:"id/2012",authors:["fuzziebrain"],categories:["Technology","Programming","Oracle Application Express"],date:new Date("2021-07-04T16:45:00.000Z")},i=void 0,s={permalink:"/content/id/2012",source:"@site/posts/intelligent-apex-applications-fact-or-fiction/index.md",title:"Intelligent APEX Applications - Fact or Fiction?",description:"Neurons",date:"2021-07-04T16:45:00.000Z",formattedDate:"July 4, 2021",tags:[{label:"oracle cloud",permalink:"/content/tags/oracle-cloud"},{label:"orclapex",permalink:"/content/tags/orclapex"},{label:"artificial intelligence",permalink:"/content/tags/artificial-intelligence"},{label:"ai",permalink:"/content/tags/ai"},{label:"machine learning",permalink:"/content/tags/machine-learning"},{label:"ml",permalink:"/content/tags/ml"},{label:"rest",permalink:"/content/tags/rest"}],readingTime:8.17,hasTruncateMarker:!0,authors:[{name:"Adrian Png",title:"Senior Cloud Solutions Architect @ Insum",url:"https://github.com/fuzziebrain",imageURL:"https://github.com/fuzziebrain.png",key:"fuzziebrain"}],frontMatter:{title:"Intelligent APEX Applications - Fact or Fiction?",tags:["oracle cloud","orclapex","artificial intelligence","ai","machine learning","ml","rest"],slug:"id/2012",authors:["fuzziebrain"],categories:["Technology","Programming","Oracle Application Express"],date:"2021-07-04T16:45:00.000Z"},prevItem:{title:"Secret Agent APEX",permalink:"/content/id/2013"},nextItem:{title:"ARM Your APEX Instance",permalink:"/content/id/2011"}},l={authorsImageUrls:[void 0]},p=[{value:"Authentication",id:"authentication",level:2},{value:"Inputs and Outputs",id:"inputs-and-outputs",level:2},{value:"Endpoint URL",id:"endpoint-url",level:3},{value:"Inputs",id:"inputs",level:3},{value:"Outputs",id:"outputs",level:3},{value:"Using the Deployed Model",id:"using-the-deployed-model",level:2},{value:"Closing",id:"closing",level:2}],c={toc:p};function m(e){let{components:n,...o}=e;return(0,r.mdx)("wrapper",(0,a.Z)({},c,o,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"Neurons",src:t(48203).Z,width:"1280",height:"801"})),(0,r.mdx)("p",null,"During a recent ",(0,r.mdx)("a",{parentName:"p",href:"https://kscope21.odtug.com/"},"Kscope21"),' session, "',(0,r.mdx)("a",{parentName:"p",href:"https://kscope21.odtug.com/e/in/eid=42&req=info&s=3444&all=1"},"Predict Customer Churn Using Oracle Autonomous Database, Machine Learning, and APEX"),'", I had shared that it has always been my personal desire to create web applications that are not only purposeful, but also have an element of "intelligence". With new features recently introduced in the ',(0,r.mdx)("a",{parentName:"p",href:"https://www.oracle.com/data-science/machine-learning/"},"Oracle Machine Learning")," product offering, it is now relatively easy to introduce ML as a component of your ",(0,r.mdx)("a",{parentName:"p",href:"https://apex.oracle.com"},"Oracle Application Express")," (APEX) applications. This is the first of several posts that I am writing as a follow up to the presentations I did at this year's (virtual) conference."),(0,r.mdx)("p",null,"The whys and how we created our first Machine Learning (ML) model using ",(0,r.mdx)("a",{parentName:"p",href:"https://blogs.oracle.com/machinelearning/introducing-oml-automl-user-interface"},"AutoML UI")," is detailed in our presentation, so I highly encourage you to review the presentation to get the required background information. There are also several tutorials that Oracle has published to help you get going with the technology. In this blog post, the goal is to provide details on code needed to consume the ML model that we operationalised using OML Services. these are:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#Authentication"},"How to authenticate with the REST services")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#Inputs-and-Outputs"},"Identifying the REST service's inputs and outputs"),"; and finally"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#using-the-Deployed-Model"},"Using the Deployed Model"))),(0,r.mdx)("p",null,"Also, it would be worthwhile pointing out that AutoML, OML Services, and many of the other Oracle technologies described in this post are only available on the ",(0,r.mdx)("a",{parentName:"p",href:"https://www.oracle.com/autonomous-database/"},"Oracle Autonomous Database")," (ADB) at this time, including the two ",(0,r.mdx)("em",{parentName:"p"},"Always Free")," instances that you get with every Oracle Cloud account."),(0,r.mdx)("h2",{id:"authentication"},"Authentication"),(0,r.mdx)("p",null,"To secure OML Service endpoints, clients must use an OML Service account and obtain an ",(0,r.mdx)("em",{parentName:"p"},"access token"),". You may create this user and enable access to OML Services using either the ",(0,r.mdx)("em",{parentName:"p"},"Oracle ML User Administration")," console or ",(0,r.mdx)("em",{parentName:"p"},"Database Actions"),"."),(0,r.mdx)("p",null,"The authentication element consists of:"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"Two application items ",(0,r.mdx)("inlineCode",{parentName:"p"},"G_TOKEN")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"G_TOKEN_EXPIRY")," that are used to store the access token and expiry measured in epochs.")),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"An on page load (before header) application process with the following PL/SQL code:"),(0,r.mdx)("pre",{parentName:"li"},(0,r.mdx)("code",{parentName:"pre",className:"language-sql"},"if :G_TOKEN is null\n  or :G_TOKEN_EXPIRY is null\n  or pkg_omlservices_util.f_convert_to_epoch(sysdate) > :G_TOKEN_EXPIRY\nthen\n  pkg_omlservices_util.p_authenticate(\n    p_token_url => :G_TOKEN_URL\n    , p_username => 'readmore'\n    , p_password => pkg_secrets.gc_password\n    , p_token => :G_TOKEN\n    , p_expiry_epoch => :G_TOKEN_EXPIRY\n  );\nend if;\n"))),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"The application process calls a custom procedure ",(0,r.mdx)("inlineCode",{parentName:"p"},"pkg_omlservices_util.p_authenticate")," that embodies the following code:"),(0,r.mdx)("pre",{parentName:"li"},(0,r.mdx)("code",{parentName:"pre",className:"language-sql"},"create or replace package body pkg_omlservices_util\nas\n  ...\n\n  procedure p_authenticate(\n    p_token_url in varchar2\n    , p_username in varchar2\n    , p_password in varchar2\n    , p_token out varchar2\n    , p_expiry_epoch out number\n  )\n  as\n    l_response clob;\n  begin\n    apex_web_service.g_request_headers(1).name := 'Content-Type';\n    apex_web_service.g_request_headers(1).value := 'application/json';\n\n    l_response := apex_web_service.make_rest_request(\n      p_url => p_token_url\n      , p_http_method => 'POST'\n      , p_body => json_object(\n          'grant_type' value 'password'\n          , 'username' value p_username\n          , 'password' value p_password\n        )\n    );\n\n    if apex_web_service.g_status_code = 200 then\n      apex_debug.info(l_response);\n      apex_json.parse(p_source => l_response);\n\n      p_token := apex_json.get_varchar2(p_path => 'accessToken');\n      p_expiry_epoch := pkg_omlservices_util.f_convert_to_epoch(sysdate)\n        + apex_json.get_number(p_path => 'expiresIn');\n    else\n      raise_application_error(-20001, 'Authentication request failed. '\n        || 'HTTP status code returned: '\n        || apex_web_service.g_status_code);\n    end if;\n  end p_authenticate;\nend pkg_omlservices_util;\n")))),(0,r.mdx)("p",null,"The URL to direct the access token request to is set and passed using the APEX substitution string ",(0,r.mdx)("inlineCode",{parentName:"p"},"G_TOKEN_URL"),". This URL is constructed based on a few components unique to your environment. You will need the following information:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"REGION_CODE"),". For example, ",(0,r.mdx)("inlineCode",{parentName:"li"},"us-ashburn-1"),"."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"TENANT_OCID"),". Looks like this: ",(0,r.mdx)("inlineCode",{parentName:"li"},"ocid1.tenancy.oc1..aaaaaaaa..."),"."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"DATABASE_NAME"),". The database name given to your ADB instance.")),(0,r.mdx)("p",null,"Then, use the template below and replace the placeholders with the appropriate values."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"https://adb.<REGION_CODE>.oraclecloud.com/omlusers/tenants/<TENANT_OCID>/databases/<DATABASE_NAME>/api/oauth2/v1/token\n")),(0,r.mdx)("p",null,"This approach helps maintain a valid access token for as long as it is not expired, and will request a new one only when it does."),(0,r.mdx)("h2",{id:"inputs-and-outputs"},"Inputs and Outputs"),(0,r.mdx)("p",null,"During the presentation, I had demonstrated how you can use the OML AutoML User Interface (UI) to create ML models with no code. Once you are satisfied with the predicted model, you can then deploy the model thus exposing it through OML Services as a REST endpoint. To consume the REST service, there are three essential information that we will require:"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"The REST endpoint URL."),(0,r.mdx)("li",{parentName:"ol"},"The request's input parameters and how to transmit them."),(0,r.mdx)("li",{parentName:"ol"},"The response's expected output format.")),(0,r.mdx)("p",null,"You can access this information from the metadata published after the models are deployed."),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"List of Deployed ML Models",src:t(60282).Z,width:"1280",height:"389"})),(0,r.mdx)("p",null,"The endpoint URL can be derived from the ",(0,r.mdx)("em",{parentName:"p"},"Open API Specification"),' for the service that you can access by clicking the link labelled "A". Below is shortened version of the JSON output to help highlight the important pieces of information.'),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "openapi": "3.0.1",\n  "info": {\n    "title": "svml_9223d64159",\n    "version": "1.0"\n  },\n  ...\n\n  "paths": {\n    "/svml/score": {\n      "post": {\n        "operationId": "scoreModel",\n        "requestBody": {\n          "content": {\n            "application/json": {\n              "schema": {\n                "$ref": "#/components/schemas/svml_9223d64159_INPUT_TYPE"\n              }\n            }\n          },\n          "required": true\n        },\n        "responses": {\n          "200": {\n            "description": "Successfully scored model svml.",\n            "content": {\n              "application/json": {\n                "schema": {\n                  "$ref": "#/components/schemas/svml_9223d64159_OUTPUT_TYPE"\n                }\n              }\n            }\n          },\n          ...\n        }\n      }\n    }\n  },\n  "components": {\n    "schemas": {\n      "svml_9223d64159_INPUT_TYPE": {\n        "properties": {\n          "inputRecords": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/Attributes"\n            }\n          },\n          "topN": {\n            "type": "integer",\n            "format": "int32"\n          },\n          "topNdetails": {\n            "type": "integer",\n            "format": "int32"\n          }\n        }\n      },\n      "Attributes": {\n        "properties": {\n          "AVG_TOTAL_GROUP_READING_TIME": {\n            "type": "number",\n            "format": "double"\n          },\n          "DASHBOARD_VISITS": {\n            "type": "number",\n            "format": "double"\n          },\n          "MAX_TOTAL_GROUP_READING_TIME": {\n            "type": "number",\n            "format": "double"\n          },\n          "MIN_TOTAL_GROUP_READING_TIME": {\n            "type": "number",\n            "format": "double"\n          },\n          "NUMBER_OF_KIDS_ENROLLED": {\n            "type": "number",\n            "format": "double"\n          },\n          "NUMBER_OF_REWARDS_CREATED": {\n            "type": "number",\n            "format": "double"\n          },\n          "NUMBER_OF_REWARDS_PURCHASED": {\n            "type": "number",\n            "format": "double"\n          }\n        }\n      },\n      "svml_9223d64159_OUTPUT_TYPE": {\n        "properties": {\n          "scoringResults": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/ScoringResults"\n            }\n          }\n        }\n      },\n      "ScoringResults": {\n        "properties": {\n          "classifications": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/LabelProb"\n            }\n          },\n          "details": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/Detail"\n            }\n          }\n        }\n      },\n      ...\n  }\n}\n')),(0,r.mdx)("h3",{id:"endpoint-url"},"Endpoint URL"),(0,r.mdx)("p",null,"The template for the OML Service endpoint URLs is:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"https://adb.<REGION_CODE>.oraclecloud.com/omlmod/v1/deployment<PATH>\n")),(0,r.mdx)("p",null,"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"PATH")," that we will use to perform the scoring operation is ",(0,r.mdx)("inlineCode",{parentName:"p"},"/svml/score"),", which you can find in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"paths")," attribute. It accepts a HTTP ",(0,r.mdx)("inlineCode",{parentName:"p"},"POST")," request with a required body containing input parameters in JSON format."),(0,r.mdx)("h3",{id:"inputs"},"Inputs"),(0,r.mdx)("p",null,"From the input schema, you can glean that the endpoint requires an ",(0,r.mdx)("inlineCode",{parentName:"p"},"inputRecords")," array containing one or more objects, each with seven numerical input variables:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"AVG_TOTAL_GROUP_READING_TIME")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"DASHBOARD_VISITS")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"MAX_TOTAL_GROUP_READING_TIME")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"MIN_TOTAL_GROUP_READING_TIME")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"NUMBER_OF_KIDS_ENROLLED")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"NUMBER_OF_REWARDS_CREATED")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"NUMBER_OF_REWARDS_PURCHASED"))),(0,r.mdx)("p",null,"These are features that AutoML had selected during the training process. An example of the JSON payload included in a HTTP request is:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "inputRecords": [\n        {\n            "AVG_TOTAL_GROUP_READING_TIME": 383,\n            "DASHBOARD_VISITS": 2021,\n            "MAX_TOTAL_GROUP_READING_TIME": 157,\n            "MIN_TOTAL_GROUP_READING_TIME": 281,\n            "NUMBER_OF_KIDS_ENROLLED": 114,\n            "NUMBER_OF_REWARDS_CREATED": 20,\n            "NUMBER_OF_REWARDS_PURCHASED": 45\n        }\n    ]\n}\n')),(0,r.mdx)("h3",{id:"outputs"},"Outputs"),(0,r.mdx)("p",null,"Finally, from the specifications, we know that the service will return the array ",(0,r.mdx)("inlineCode",{parentName:"p"},"scoringResults")," that should be of the same size as the ",(0,r.mdx)("inlineCode",{parentName:"p"},"inputRecords")," submitted in the request. Each element will contain an array of ",(0,r.mdx)("inlineCode",{parentName:"p"},"classifications")," (there are two in our binary classifier) objects with the attributes ",(0,r.mdx)("inlineCode",{parentName:"p"},"label")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"probability"),". Below is an example of prediction outputs returned after a successful call to the OML Service."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "scoringResults": [\n        {\n            "classifications": [\n                {\n                    "label": "0",\n                    "probability": 0.1977130504153105\n                },\n                {\n                    "label": "1",\n                    "probability": 0.8022869495846895\n                }\n            ]\n        }\n    ]\n}\n')),(0,r.mdx)("h2",{id:"using-the-deployed-model"},"Using the Deployed Model"),(0,r.mdx)("p",null,"Armed with the information ",(0,r.mdx)("a",{parentName:"p",href:"#Inputs-and-Outputs"},"above"),", we can now construct a wrapper PL/SQL procedure, for example:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-sql"},"create or replace package body pkg_omlservices_predict\nas\n  c_svml_url constant varchar2(73) := 'https://.../omlmod/v1/deployment/svml/score';\n\n  function f_active_in_six_months(\n    p_token in varchar2\n    , p_avg_total_group_reading_time in number\n    , p_dashboard_visits in number\n    , p_max_total_group_reading_time in number\n    , p_min_total_group_reading_time in number\n    , p_number_of_kids_enrolled in number\n    , p_number_of_rewards_created in number\n    , p_number_of_rewards_purchased in number\n  ) return clob\n  as\n    l_results clob;\n  begin\n    apex_web_service.g_request_headers(1).name := 'Authorization';\n    apex_web_service.g_request_headers(1).value := 'Bearer ' || p_token;\n\n    apex_web_service.g_request_headers(2).name := 'Content-Type';\n    apex_web_service.g_request_headers(2).value := 'application/json';\n\n    l_results := apex_web_service.make_rest_request(\n      p_url => c_svml_url\n      , p_http_method => 'POST'\n      , p_body => json_object(\n          'inputRecords' value json_array(\n            json_object(\n              'AVG_TOTAL_GROUP_READING_TIME' value p_avg_total_group_reading_time\n              , 'DASHBOARD_VISITS' value p_dashboard_visits\n              , 'MAX_TOTAL_GROUP_READING_TIME' value p_max_total_group_reading_time\n              , 'MIN_TOTAL_GROUP_READING_TIME' value p_min_total_group_reading_time\n              , 'NUMBER_OF_KIDS_ENROLLED' value p_number_of_kids_enrolled\n              , 'NUMBER_OF_REWARDS_CREATED' value p_number_of_rewards_created\n              , 'NUMBER_OF_REWARDS_PURCHASED' value p_number_of_rewards_purchased\n            )\n          )\n        )\n      )\n    );\n\n    if apex_web_service.g_status_code != 200 then\n      raise_application_error(\n        -20002\n        , 'Error predicting results. HTTP status code: ' || apex_web_service.g_status_code)\n      ;\n    end if;\n\n    return l_results;\n  exception\n    when others then\n      owa_util.status_line(\n        nstatus => 500\n        , creason => apex_web_service.g_status_code\n      );\n  end f_active_in_six_months;\nend pkg_omlservices_predict;\n")),(0,r.mdx)("p",null,"For a simple demonstration on how to use the OML Service in APEX, I created a page that allows users to enter the seven required inputs, and then call the ",(0,r.mdx)("inlineCode",{parentName:"p"},"pkg_omlservices_predict.f_active_in_six_months")," function to obtain the predicted labels and their probabilities."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-sql"},"declare\n  l_results clob;\nbegin\n  apex_collection.create_or_truncate_collection('PREDICTION_RESULTS');\n\n  l_results := pkg_omlservices_predict.f_active_in_six_months(\n    p_token => :G_TOKEN\n    , p_avg_total_group_reading_time => :P1_AVG_TOTAL_GROUP_READING_TIME\n    , p_dashboard_visits => :P1_DASHBOARD_VISITS\n    , p_max_total_group_reading_time => :P1_MAX_TOTAL_GROUP_READING_TIME\n    , p_min_total_group_reading_time => :P1_MIN_TOTAL_GROUP_READING_TIME\n    , p_number_of_kids_enrolled => :P1_NUMBER_OF_KIDS_ENROLLED\n    , p_number_of_rewards_created => :P1_NUMBER_OF_REWARDS_CREATED\n    , p_number_of_rewards_purchased => :P1_NUMBER_OF_REWARDS_PURCHASED\n  );\n\n  apex_collection.add_member(\n    p_collection_name => 'PREDICTION_RESULTS'\n    , p_clob001 => l_results\n  );\nend;\n")),(0,r.mdx)("p",null,"I can then render the desired output after parsing the ",(0,r.mdx)("inlineCode",{parentName:"p"},"scoringResults")," JSON array returned by the OML Service, for example, using a classic report using the following SQL query:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-sql"},"with results as (\n  select clob001 as json_data\n  from apex_collections\n  where collection_name = 'PREDICTION_RESULTS'\n  fetch first 1 rows only\n)\nselect\n  j.outcome\n  , j.probability\nfrom results r\n  , json_table(\n    r.json_data, '$.scoringResults' columns (\n      nested path '$.classifications[*]'\n      columns (\n        outcome path '$.label'\n        , probability path '$.probability'\n      )\n    )\n  ) j\n")),(0,r.mdx)("p",null,"It is worthwhile noting that developers can submit multiple rows of input data and obtain all the results at once. For example, if you wanted to cache the predicted outcomes in a local table, you can batch them in one HTTP request and then parsing multiple results, thereby reducing some overheads."),(0,r.mdx)("h2",{id:"closing"},"Closing"),(0,r.mdx)("p",null,"This is only the beginning and I am super excited with all the tools that Oracle has put at our disposal. Do more and do good. If you require additional help, or would like to collaborate on other APEX+ML adventures, please do not hesitate to contact me ",(0,r.mdx)("em",{parentName:"p"},"via")," ",(0,r.mdx)("a",{parentName:"p",href:"https://twitter.com/fuzziebrain"},"Twitter")," or through ",(0,r.mdx)("a",{parentName:"p",href:"https://www.insum.ca/contact/"},"Insum"),"."),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},(0,r.mdx)("strong",{parentName:"p"},"Credits")),(0,r.mdx)("p",{parentName:"blockquote"},"Image by ",(0,r.mdx)("a",{href:"https://pixabay.com/users/geralt-9301/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=1773922"},"Gerd Altmann")," from ",(0,r.mdx)("a",{href:"https://pixabay.com/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=1773922"},"Pixabay"))))}m.isMDXComponent=!0},60282:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/inputs-and-outputs-afbad3af210a9e1bb7cf6084dd15f22e.png"},48203:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/neurons-1773922_1280x800-7f66eda817262c26d7e59a85cb1591e2.jpg"}}]);