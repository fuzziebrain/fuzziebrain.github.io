"use strict";(self.webpackChunknewsite=self.webpackChunknewsite||[]).push([[26944],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>s,MDXProvider:()=>m,mdx:()=>g,useMDXComponents:()=>d,withMDXComponents:()=>p});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(){return r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},r.apply(this,arguments)}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),p=function(e){return function(n){var t=d(n.components);return a.createElement(e,r({},n,{components:t}))}},d=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=d(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=d(t),m=o,u=p["".concat(i,".").concat(m)]||p[m]||f[m]||r;return t?a.createElement(u,l(l({ref:n},s),{},{components:t})):a.createElement(u,l({ref:n},s))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=h;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},17324:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var a=t(87462),o=(t(67294),t(3905));const r={title:"Day 22 - 30 Days on the Oracle Cloud",tags:["oracle","cloud","oci","IaaS","infrastructure","fnproj","serverless","orclfn","functions"],slug:"id/1912",authors:["fuzziebrain"],categories:["Technology","Infrastructure","Oracle Cloud"],date:new Date("2019-07-23T01:03:15.000Z")},i=void 0,l={permalink:"/content/id/1912",source:"@site/posts/day-22-30-days-on-the-oracle-cloud/index.md",title:"Day 22 - 30 Days on the Oracle Cloud",description:"All sorts of functions",date:"2019-07-23T01:03:15.000Z",formattedDate:"July 23, 2019",tags:[{label:"oracle",permalink:"/content/tags/oracle"},{label:"cloud",permalink:"/content/tags/cloud"},{label:"oci",permalink:"/content/tags/oci"},{label:"IaaS",permalink:"/content/tags/iaa-s"},{label:"infrastructure",permalink:"/content/tags/infrastructure"},{label:"fnproj",permalink:"/content/tags/fnproj"},{label:"serverless",permalink:"/content/tags/serverless"},{label:"orclfn",permalink:"/content/tags/orclfn"},{label:"functions",permalink:"/content/tags/functions"}],readingTime:5.785,hasTruncateMarker:!0,authors:[{name:"Adrian Png",title:"Senior Cloud Solutions Architect @ Insum",url:"https://github.com/fuzziebrain",imageURL:"https://github.com/fuzziebrain.png",key:"fuzziebrain"}],frontMatter:{title:"Day 22 - 30 Days on the Oracle Cloud",tags:["oracle","cloud","oci","IaaS","infrastructure","fnproj","serverless","orclfn","functions"],slug:"id/1912",authors:["fuzziebrain"],categories:["Technology","Infrastructure","Oracle Cloud"],date:"2019-07-23T01:03:15.000Z"},prevItem:{title:"Day 28 - 30 Days on the Oracle Cloud",permalink:"/content/id/1913"},nextItem:{title:"Day 17 - 30 days on the Oracle Cloud",permalink:"/content/id/1911"}},c={authorsImageUrls:[void 0]},s=[{value:"Development Environment Setup",id:"development-environment-setup",level:2},{value:"Oracle Cloud Setup",id:"oracle-cloud-setup",level:2},{value:"OCI Components Required",id:"oci-components-required",level:3},{value:"Configure Environment for Oracle Functions",id:"configure-environment-for-oracle-functions",level:3},{value:"Deploying to Oracle Function",id:"deploying-to-oracle-function",level:2},{value:"Summary",id:"summary",level:2}],p={toc:s};function d(e){let{components:n,...r}=e;return(0,o.mdx)("wrapper",(0,a.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("p",null,(0,o.mdx)("img",{alt:"All sorts of functions",src:t(12425).Z,width:"1280",height:"720"})),(0,o.mdx)("p",null,"Oracle Function was ",(0,o.mdx)("a",{parentName:"p",href:"https://www.oracle.com/corporate/pressrelease/oracle-cloud-native-framework-121118.html"},"announced")," late last year (2018), with limited availability to select ",(0,o.mdx)("a",{parentName:"p",href:"https://cloud.oracle.com"},"Oracle Cloud")," customers. The platform is built on ",(0,o.mdx)("a",{parentName:"p",href:"https://fnproject.io"},"Fn")," and is Oracle's solution for developers wanting to deploy services using a ",(0,o.mdx)("a",{parentName:"p",href:"https://wikipedia.org/wiki/Serverless_Framework"},"Serverless Framework"),"."),(0,o.mdx)("p",null,"As succinctly explained by ",(0,o.mdx)("a",{parentName:"p",href:"https://twitter.com/kaslinfields"},"Kaslin Fields"),", a Fn function is a small embodiment of code that listens and speaks to HTTP streams. Ideally, each Fn function serves one, and only one purpose. It can be implemented in wide variety of programming languages and they are listed ",(0,o.mdx)("a",{parentName:"p",href:"https://github.com/fnproject/docs/blob/master/cli/ref/fn-init.md"},"here")," (see the list of runtime options available)."),(0,o.mdx)("h2",{id:"development-environment-setup"},"Development Environment Setup"),(0,o.mdx)("p",null,"The Fn project provides a concise ",(0,o.mdx)("a",{parentName:"p",href:"https://fnproject.io/tutorials/install/"},"set of instructions")," on installing the Fn command line interface (CLI) utility. The CLI allows developers to run a Fn server locally, and perform developer and deployment client functions."),(0,o.mdx)("p",null,"A rather recent version of ",(0,o.mdx)("a",{parentName:"p",href:"https://www.docker.com/"},"Docker")," is required, and if you are on a Microsoft Windows machine, I highly recommend installing ",(0,o.mdx)("a",{parentName:"p",href:"https://www.virtualbox.org/"},"Virtual Box")," and running a Linux virtual machine (VM) for Fn development. You can create a VM manually, or you can install ",(0,o.mdx)("a",{parentName:"p",href:"https://www.vagrantup.com/"},"Vagrant")," and quickly stand up a suitable using Oracle's official ",(0,o.mdx)("a",{parentName:"p",href:"https://github.com/oracle/vagrant-boxes"},"Vagrant build scripts")," (see ",(0,o.mdx)("a",{parentName:"p",href:"https://github.com/oracle/vagrant-boxes/tree/master/DockerEngine"},"Orace Linux 7 with Docker engine"),")."),(0,o.mdx)("p",null,"In a nutshell, assuming a Linux Operating System (OS), do the following:"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Install, configure and run Docker.")),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Install Fn CLI using the command provided:"),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"$ curl -LSs https://raw.githubusercontent.com/fnproject/cli/master/install | sh\n"))),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Open a console and start the Fn Server for ",(0,o.mdx)("strong",{parentName:"p"},"local")," development:"),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"$ fn start\n")),(0,o.mdx)("p",{parentName:"li"},"This pulls a Docker image and runs a container. The default server API URL is ",(0,o.mdx)("inlineCode",{parentName:"p"},"http://127.0.0.1:8080"),".")),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Configure the VM to work with a local registry if you are planning to start out by developing serverless functions locally.")),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Follow the ",(0,o.mdx)("a",{parentName:"p",href:"https://fnproject.io/tutorials/Apps/"},"quick tutorial"),' on creating a simple "Helloworld" service, changing the runtime to use the programming language of your choice.'))),(0,o.mdx)("h2",{id:"oracle-cloud-setup"},"Oracle Cloud Setup"),(0,o.mdx)("p",null,"Oracle Functions is not 100% ready to go, right out of the box when your Oracle Cloud account is provisioned. The setup tasks and deployment instructions are already available in the ",(0,o.mdx)("a",{parentName:"p",href:"https://docs.cloud.oracle.com/iaas/Content/Functions/Concepts/functionsoverview.htm"},"official documentation"),". I shall attempt to summarise and highlight the important steps."),(0,o.mdx)("h3",{id:"oci-components-required"},"OCI Components Required"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"A minimally functional Virtual Cloud Network (VCN)")),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Policies that allows Oracle Functions (FaaS) to:\na. Access the Oracle Cloud Infrastructure Registry (OCIR); and"),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre"},"```\nAllow service FaaS to read repos in tenancy\n```\n")),(0,o.mdx)("p",{parentName:"li"},"b. Use network components in the target compartment."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre"},"```\nAllow service FaaS to use virtual-network-family in compartment <COMPARTMENT_NAME>\n```\n")),(0,o.mdx)("blockquote",{parentName:"li"},(0,o.mdx)("p",{parentName:"blockquote"},"One or two policies may be created, however, the first policy statement must be created in a policy within the root compartment.")))),(0,o.mdx)("h3",{id:"configure-environment-for-oracle-functions"},"Configure Environment for Oracle Functions"),(0,o.mdx)("p",null,"There are ",(0,o.mdx)("strong",{parentName:"p"},"ten")," steps to perform for ",(0,o.mdx)("a",{parentName:"p",href:"https://docs.cloud.oracle.com/iaas/Content/Functions/Tasks/functionsconfiguringclient.htm"},"configuring"),' the Fn development environment. The minimum you will need to invoke a simple "Helloworld" function are:'),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("a",{parentName:"li",href:"https://docs.cloud.oracle.com/iaas/Content/Functions/Tasks/functionssetupapikey.htm"},"Setting up the OCI API Signing key")," .",(0,o.mdx)("ol",{parentName:"li"},(0,o.mdx)("li",{parentName:"ol"},"Run ",(0,o.mdx)("inlineCode",{parentName:"li"},"openssl")," command to generate the private and public keys. Note down the ",(0,o.mdx)("strong",{parentName:"li"},"paths")," and ",(0,o.mdx)("strong",{parentName:"li"},"passphrase")," used."),(0,o.mdx)("li",{parentName:"ol"},"Add the public key to the OCI user's API Keys and then noting the ",(0,o.mdx)("strong",{parentName:"li"},"fingerprint"),"."))),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("a",{parentName:"li",href:"https://docs.cloud.oracle.com/iaas/Content/Functions/Tasks/functionsconfigureocicli.htm"},"Create the OCI profile")," and configuration file (",(0,o.mdx)("inlineCode",{parentName:"li"},"~/.oci/config"),"). Make sure the values required are entered correctly, or API signing will fail and you will not be able to authenticate with the endpoint. Note the ",(0,o.mdx)("strong",{parentName:"li"},"profile")," name. The end result is a profile like this:",(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre"},"[my_oci-profile]\nuser=ocid1.user.oc1..**********\nfingerprint=**:**:**:**:**:**:**:**:**:**:**:**:**:**:**:**\nkey_file=~/.oci/my-private-key.pem\ntenancy=ocid1.tenancy.oc1..**********\nregion=us-ashburn-1\npass_phrase=mysupersecretpassword\n"))),(0,o.mdx)("li",{parentName:"ol"},"Setup ",(0,o.mdx)("inlineCode",{parentName:"li"},"oci-curl"),", which isn't really required to do a quick invocation test."),(0,o.mdx)("li",{parentName:"ol"},"If you already have a Fn development environment, then chances are, Docker and Fn CLI are already installed, configured and running."),(0,o.mdx)("li",{parentName:"ol"},"Setup the ",(0,o.mdx)("a",{parentName:"li",href:"https://docs.cloud.oracle.com/iaas/Content/Functions/Tasks/functionscreatefncontext.htm"},"context")," (and ",(0,o.mdx)("a",{parentName:"li",href:"https://docs.cloud.oracle.com/iaas/Content/Functions/Tasks/functionssetoracleprofile.htm"},"this"),") for Fn CLI to work with Oracle Functions. After performing these steps, a context file will be created in ",(0,o.mdx)("inlineCode",{parentName:"li"},"~/.fn/contexts"),", containing contents similar to this:",(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre"},"api-url: https://functions.us-ashburn-1.oraclecloud.com\noracle.compartment-id: ocid1.compartment.oc1..**********\noracle.profile: my-oci-profile\nprovider: oracle\nregistry: iad.ocir.io/<TENANT_NAMESPACE>/<REPOSITORY_NAME>\n"))),(0,o.mdx)("li",{parentName:"ol"},"Generate and note the Auth token, and then login to the OCIR.")),(0,o.mdx)("h2",{id:"deploying-to-oracle-function"},"Deploying to Oracle Function"),(0,o.mdx)("p",null,"The best way to check that the environment is configured (",(0,o.mdx)("inlineCode",{parentName:"p"},"~/.oci/config"),") correctly, is to list the applications available:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"$ fn list apps\nNo apps found\nNAME    ID\n")),(0,o.mdx)("p",null,"To create an application, either use the OCI console:"),(0,o.mdx)("p",null,(0,o.mdx)("img",{alt:"Oracle Functions - Create Application",src:t(72287).Z,width:"1280",height:"800"})),(0,o.mdx)("p",null,"Or, use the Fn CLI, specifying the name of the application, and the OCID of the subnet to attach to:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"$ fn create app nodeapp --annotation oracle.com/oci/subnetIds='[\"ocid1.subnet.oc1.iad.**********\"]'\n")),(0,o.mdx)("p",null,"List the applications again to ensure it was successfully created:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"$ fn list apps\nNAME    ID\nnodeapp ocid1.fnapp.oc1.iad.**********\n")),(0,o.mdx)("p",null,"Following the Fn tutorial, you would have created a directory containing the following artifacts required for a Fn function:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"[/home/myuser/projects/nodefn]$ ls\nfunc.js  func.yaml  package.json\n")),(0,o.mdx)("p",null,"Set your working directory here and then attempt to deploy the application:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},'[/home/myuser/projects/nodefn]$ fn -v deploy --app nodeapp\nDeploying nodefn to app: nodeapp\nBumped to version 0.0.5\nBuilding image iad.ocir.io/**********/fndemo/nodefn:0.0.5\nFN_REGISTRY:  iad.ocir.io/**********/fndemo\nCurrent Context:  fboci05\nSending build context to Docker daemon   5.12kB\nStep 1/9 : FROM fnproject/node:dev as build-stage\n ---\x3e b557a05fec78\nStep 2/9 : WORKDIR /function\n ---\x3e Using cache\n ---\x3e 80aba4e33a61\nStep 3/9 : ADD package.json /function/\n ---\x3e Using cache\n ---\x3e ce7d7130e497\nStep 4/9 : RUN npm install\n ---\x3e Using cache\n ---\x3e 622fc377f1a9\nStep 5/9 : FROM fnproject/node\n ---\x3e c8da69259495\nStep 6/9 : WORKDIR /function\n ---\x3e Using cache\n ---\x3e e4ef6fe5e78e\nStep 7/9 : ADD . /function/\n ---\x3e 2d41667e41f6\nStep 8/9 : COPY --from=build-stage /function/node_modules/ /function/node_modules/\n ---\x3e 14abb279af71\nStep 9/9 : ENTRYPOINT ["node", "func.js"]\n ---\x3e Running in 60097a195252\nRemoving intermediate container 60097a195252\n ---\x3e 9a54e9d7ef1d\nSuccessfully built 9a54e9d7ef1d\nSuccessfully tagged iad.ocir.io/**********/fndemo/nodefn:0.0.5\n\nParts:  [iad.ocir.io ********** fndemo nodefn:0.0.5]\nPushing iad.ocir.io/**********/fndemo/nodefn:0.0.5 to docker registry...The push refers to repository [iad.ocir.io/**********/fndemo/nodefn]\na71bd36619f2: Pushed\ne355820d7f01: Pushed\n9682c276ebcb: Pushed\na0d7b4199dce: Pushed\n8aed3db29123: Pushed\n9c85c117f8f6: Pushed\na464c54f93a9: Pushed\n0.0.5: digest: sha256:6dca91254ae9a404236e3ac5f486a9d0fb575b1589f987c146b9489b4900ffdf size: 1780\nUpdating function nodefn using image iad.ocir.io/**********/fndemo/nodefn:0.0.5...\nSuccessfully created function: nodefn with iad.ocir.io/**********/fndemo/nodefn:0.0.5\n\nFn: [GET /triggers][500] ListTriggers default  &{Fields: Message:Internal server error}\n\nSee \'fn <command> --help\' for more information. Client version: 0.5.84\n')),(0,o.mdx)("p",null,"With increase verbosity, it is clear that Docker is used to containerize the service. I have not delved into the nuts and bolts of the deployment model, but from the little I know, a Docker image is first created and deployed to the OCIR. When a function is invoked, the platform creates a container, executes the function and then terminates, releasing any allocated resources."),(0,o.mdx)("p",null,"To invoke the function, simply execute the command or use the ",(0,o.mdx)("inlineCode",{parentName:"p"},"oci-curl")," if available:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},'[/home/myuser/projects/nodefn]]$ fn invoke nodeapp nodefn\n{"message":"Hello World"}\n')),(0,o.mdx)("h2",{id:"summary"},"Summary"),(0,o.mdx)("p",null,"The tutorial's \"Helloworld\" example doesn't do much for now. However, as mentioned earlier in this article, Fn functions are wrapped up in a Docker container. By creating a custom ",(0,o.mdx)("inlineCode",{parentName:"p"},"Dockerfile")," for your Fn, the possibilities are endless."),(0,o.mdx)("p",null,"Also in the tutorials, the authors provide a roadmap on how to create a custom Docker image that uses ",(0,o.mdx)("a",{parentName:"p",href:"https://imagemagick.org/index.php"},"ImageMagick")," to perform image manipulations. Something that could be useful to us ",(0,o.mdx)("a",{parentName:"p",href:"https://apex.oracle.com"},"Oracle Application Express")," developers when Oracle Multimedia is completely removed in future Oracle Database versions."))}d.isMDXComponent=!0},72287:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/create-fn-application-f2265a926aa9753b0e28ef27e88ff7dc.png"},12425:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/mathematics-757566_1280x720-e2fbadf074f86891e7a1b1761c3a2bb0.jpg"}}]);