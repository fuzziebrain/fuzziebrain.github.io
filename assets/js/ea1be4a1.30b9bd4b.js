"use strict";(self.webpackChunknewsite=self.webpackChunknewsite||[]).push([[5279],{4892:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var a=n(85893),s=n(11151);const i={title:"We Have a Wallet",tags:["oracle database","18cXE","orclapex","ssl","tls","security","https","pki"],categories:["Technology","Programming","Oracle Application Express"],slug:"id/1720",authors:["fuzziebrain"],date:new Date("2018-10-23T22:17:22.000Z")},o=void 0,r={permalink:"/content/id/1720",source:"@site/posts/we-have-a-wallet/index.md",title:"We Have a Wallet",description:"1280 720 Photo by Pexels",date:"2018-10-23T22:17:22.000Z",formattedDate:"October 23, 2018",tags:[{label:"oracle database",permalink:"/content/tags/oracle-database"},{label:"18cXE",permalink:"/content/tags/18-c-xe"},{label:"orclapex",permalink:"/content/tags/orclapex"},{label:"ssl",permalink:"/content/tags/ssl"},{label:"tls",permalink:"/content/tags/tls"},{label:"security",permalink:"/content/tags/security"},{label:"https",permalink:"/content/tags/https"},{label:"pki",permalink:"/content/tags/pki"}],readingTime:5.185,hasTruncateMarker:!0,authors:[{name:"Adrian Png",title:"Senior Cloud Solutions Architect @ Insum",url:"https://github.com/fuzziebrain",imageURL:"https://github.com/fuzziebrain.png",key:"fuzziebrain"}],frontMatter:{title:"We Have a Wallet",tags:["oracle database","18cXE","orclapex","ssl","tls","security","https","pki"],categories:["Technology","Programming","Oracle Application Express"],slug:"id/1720",authors:["fuzziebrain"],date:"2018-10-23T22:17:22.000Z"},unlisted:!1,prevItem:{title:"Protect Your Data with Transparent Data Encryption",permalink:"/content/id/1721"},nextItem:{title:"Sweet 18 - A New Oracle XE Release",permalink:"/content/id/1719"}},c={authorsImageUrls:[void 0]},l=[{value:"Obtain Root and Intermediate Certificates",id:"obtain-root-and-intermediate-certificates",level:2},{value:"Add Certificates",id:"add-certificates",level:2},{value:"Don&#39;t Leave Home Without It",id:"dont-leave-home-without-it",level:2},{value:"Set Up APEX to Use the Wallet",id:"set-up-apex-to-use-the-wallet",level:2},{value:"One Last Thing",id:"one-last-thing",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"1280 720 Photo by Pexels",src:n(12072).Z+"",width:"1280",height:"720"})}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Updated November 17, 2018"}),"\nPlease read this follow-up ",(0,a.jsx)(t.a,{href:"/content/id/1725/",children:"post"})," as well. It contains an important note about intermediate certificates and where to download the root certificates."]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["One of the difficulties working with web services in the previous version of Oracle Database Express Edition (XE) was the lack of a usable Oracle Wallet. This was fast becoming a huge problems for developers, as many API providers started enforcing requirements to that clients accessed services through secured channels. When working with 11g XE, I often relied on proxies within a sandbox to mask the need for SSL/TLS. I discussed this somewhat at length in a previous ",(0,a.jsx)(t.a,{href:"/content/id/1711/",children:"blog post"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["With the 18c release, Oracle has opened up and provided us developers the opportunities to make our apps safer. We now have access to the (",(0,a.jsx)(t.a,{href:"https://docs.oracle.com/en/database/oracle/oracle-database/18/dbseg/using-the-orapki-utility-to-manage-pki-elements.html#GUID-83EF7865-373A-4C39-8A64-44A73EB87759",children:(0,a.jsx)(t.code,{children:"orapki"})}),") tools needed to manage an Oracle Wallet. I don't do this a lot, so I keep a snippets of what I do to make this easy."]}),"\n",(0,a.jsxs)(t.p,{children:["I had to revisit this procedure while configuring ",(0,a.jsx)(t.a,{href:"https://apex.oracle.com",children:"Oracle Application Express"})," (APEX) to support email sending using the ",(0,a.jsx)(t.a,{href:"https://docs.oracle.com/database/apex-18.2/AEAPI/APEX_MAIL.htm#AEAPI341",children:(0,a.jsx)(t.code,{children:"APEX_MAIL"})})," package. The target SMTP server is Google's ",(0,a.jsx)(t.code,{children:"smtp.google.com"}),", and because we want to secure the user credentials during authentication, we have to use TLS. We will use this for context."]}),"\n",(0,a.jsx)(t.h2,{id:"obtain-root-and-intermediate-certificates",children:"Obtain Root and Intermediate Certificates"}),"\n",(0,a.jsx)(t.p,{children:"To obtain the certificates for Google's SMTP servers, execute the following command:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-txt",children:'$ openssl s_client -starttls smtp -connect smtp.gmail.com:587 -showcerts\nCONNECTED(000001B4)\n---\nCertificate chain\n 0 s:/C=US/ST=California/L=Mountain View/O=Google LLC/CN=smtp.gmail.com\n   i:/C=US/O=Google Trust Services/CN=Google Internet Authority G3\n-----BEGIN CERTIFICATE-----\nMIIEgjCCA2qgAwIBAgIIYYzIf9CCTNQwDQYJKoZIhvcNAQELBQAwVDELMAkGA1UE\nBhMCVVMxHjAcBgNVBAoTFUdvb2dsZSBUcnVzdCBTZXJ2aWNlczElMCMGA1UEAxMc\nR29vZ2xlIEludGVybmV0IEF1dGhvcml0eSBHMzAeFw0xODEwMDkxMzA4MDBaFw0x\nOTAxMDExMzA4MDBaMGgxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlh\nMRYwFAYDVQQHDA1Nb3VudGFpbiBWaWV3MRMwEQYDVQQKDApHb29nbGUgTExDMRcw\nFQYDVQQDDA5zbXRwLmdtYWlsLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC\nAQoCggEBAObRl1CBmcUdG0DKuFBKZUrtiI9LEjkWdLkCTG5GZN2dmmyoVF2Um+3Q\n8GkxPSp4cNE/pV/+eKpX0swjsX7OSr+H75tG3SwPAwgsxKK/hciP5+UZn3hNxIGe\nvkNZUIIiZcLpSmUm2C13AVYO+RrSQoswy72Pqq9L5MOin40RJq2zF1MCqA8AG3S6\nc5uNevdHhRAfF9PuFc+FS+KRfMIOKZ1mnE6iMR9rBV4n3I5muVb0F24NlwtnQfKq\n8KvUBIZzgZsoj9ED7WeTunTny1n70ElE9AgrOx7+YOpx8UiBsN1uMhszzb+l+Fck\nY6sJl4bjb7HfnYBKbihqauFcxGbsocECAwEAAaOCAUIwggE+MBMGA1UdJQQMMAoG\nCCsGAQUFBwMBMBkGA1UdEQQSMBCCDnNtdHAuZ21haWwuY29tMGgGCCsGAQUFBwEB\nBFwwWjAtBggrBgEFBQcwAoYhaHR0cDovL3BraS5nb29nL2dzcjIvR1RTR0lBRzMu\nY3J0MCkGCCsGAQUFBzABhh1odHRwOi8vb2NzcC5wa2kuZ29vZy9HVFNHSUFHMzAd\nBgNVHQ4EFgQUHPvi7USz6x/8/XVkgFyMk9ndjJAwDAYDVR0TAQH/BAIwADAfBgNV\nHSMEGDAWgBR3wrhQmmd2drEtwobQg6B+pn66SzAhBgNVHSAEGjAYMAwGCisGAQQB\n1nkCBQMwCAYGZ4EMAQICMDEGA1UdHwQqMCgwJqAkoCKGIGh0dHA6Ly9jcmwucGtp\nLmdvb2cvR1RTR0lBRzMuY3JsMA0GCSqGSIb3DQEBCwUAA4IBAQC+CB4l2nvFPQck\n8aJZRZ8vvT1G3gs5BGIPnpB3wIUEp6Hg4xHuPt3CAGktttMEu/wGJABxzfIr4RFo\nqgafq3cg7/w5R9+4kaDX0YcNNdgvC6/8UXlHHTjEsNgJiGFDJGRzttHmGGhUvsxg\nMwCihV1N0E5YZYIMfxVFHmbLTZe0tI4Ma0n+hxxbXSlSCOH4fjbaZ+sKX0RbWTDx\nwweZxQM9JIn7Lwz4Fe34e+YfpyNqOow6FdvaOf5J3dEmqHoS5rXJ+dp8jTSTld5L\nwn+ganMirE5mLNJNh9AvfIVtz4sHw1Wg5v+TkvWZ6t5J1oJY3UJPSfJrPQy6fssu\n9rs+s4BX\n-----END CERTIFICATE-----\n 1 s:/C=US/O=Google Trust Services/CN=Google Internet Authority G3\n   i:/OU=GlobalSign Root CA - R2/O=GlobalSign/CN=GlobalSign\n-----BEGIN CERTIFICATE-----\nMIIEXDCCA0SgAwIBAgINAeOpMBz8cgY4P5pTHTANBgkqhkiG9w0BAQsFADBMMSAw\nHgYDVQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSMjETMBEGA1UEChMKR2xvYmFs\nU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjAeFw0xNzA2MTUwMDAwNDJaFw0yMTEy\nMTUwMDAwNDJaMFQxCzAJBgNVBAYTAlVTMR4wHAYDVQQKExVHb29nbGUgVHJ1c3Qg\nU2VydmljZXMxJTAjBgNVBAMTHEdvb2dsZSBJbnRlcm5ldCBBdXRob3JpdHkgRzMw\nggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDKUkvqHv/OJGuo2nIYaNVW\nXQ5IWi01CXZaz6TIHLGp/lOJ+600/4hbn7vn6AAB3DVzdQOts7G5pH0rJnnOFUAK\n71G4nzKMfHCGUksW/mona+Y2emJQ2N+aicwJKetPKRSIgAuPOB6Aahh8Hb2XO3h9\nRUk2T0HNouB2VzxoMXlkyW7XUR5mw6JkLHnA52XDVoRTWkNty5oCINLvGmnRsJ1z\nouAqYGVQMc/7sy+/EYhALrVJEA8KbtyX+r8snwU5C1hUrwaW6MWOARa8qBpNQcWT\nkaIeoYvy/sGIJEmjR0vFEwHdp1cSaWIr6/4g72n7OqXwfinu7ZYW97EfoOSQJeAz\nAgMBAAGjggEzMIIBLzAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0lBBYwFAYIKwYBBQUH\nAwEGCCsGAQUFBwMCMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFHfCuFCa\nZ3Z2sS3ChtCDoH6mfrpLMB8GA1UdIwQYMBaAFJviB1dnHB7AagbeWbSaLd/cGYYu\nMDUGCCsGAQUFBwEBBCkwJzAlBggrBgEFBQcwAYYZaHR0cDovL29jc3AucGtpLmdv\nb2cvZ3NyMjAyBgNVHR8EKzApMCegJaAjhiFodHRwOi8vY3JsLnBraS5nb29nL2dz\ncjIvZ3NyMi5jcmwwPwYDVR0gBDgwNjA0BgZngQwBAgIwKjAoBggrBgEFBQcCARYc\naHR0cHM6Ly9wa2kuZ29vZy9yZXBvc2l0b3J5LzANBgkqhkiG9w0BAQsFAAOCAQEA\nHLeJluRT7bvs26gyAZ8so81trUISd7O45skDUmAge1cnxhG1P2cNmSxbWsoiCt2e\nux9LSD+PAj2LIYRFHW31/6xoic1k4tbWXkDCjir37xTTNqRAMPUyFRWSdvt+nlPq\nwnb8Oa2I/maSJukcxDjNSfpDh/Bd1lZNgdd/8cLdsE3+wypufJ9uXO1iQpnh9zbu\nFIwsIONGl1p3A8CgxkqI/UAih3JaGOqcpcdaCIzkBaR9uYQ1X4k2Vg5APRLouzVy\n7a8IVk6wuy6pm+T7HT4LY8ibS5FEZlfAFLSW8NwsVz9SBK2Vqn1N0PIMn5xA6NZV\nc7o835DLAFshEWfC7TIe3g==\n-----END CERTIFICATE-----\n---\nServer certificate\nsubject=/C=US/ST=California/L=Mountain View/O=Google LLC/CN=smtp.gmail.com\nissuer=/C=US/O=Google Trust Services/CN=Google Internet Authority G3\n---\nNo client certificate CA names sent\nPeer signing digest: SHA256\nServer Temp Key: ECDH, P-256, 256 bits\n---\nSSL handshake has read 3240 bytes and written 469 bytes\n---\nNew, TLSv1/SSLv3, Cipher is ECDHE-RSA-AES128-GCM-SHA256\nServer public key is 2048 bit\nSecure Renegotiation IS supported\nCompression: NONE\nExpansion: NONE\nNo ALPN negotiated\nSSL-Session:\n    Protocol  : TLSv1.2\n    Cipher    : ECDHE-RSA-AES128-GCM-SHA256\n    Session-ID: 5DF77BA747412BE89EB308BEAFE46CB25A88516376424ED100CA56C2BDD34225\n    Session-ID-ctx:\n    Master-Key: 565E04E20E6D8200A4FECD2A5F09ED4549EA2FA982350A598B6A9D4EDA2B9FD26F434F66475CA6524B8EF469A1A0A563\n    Key-Arg   : None\n    PSK identity: None\n    PSK identity hint: None\n    SRP username: None\n    TLS session ticket lifetime hint: 100800 (seconds)\n    TLS session ticket:\n    0000 - 00 85 11 42 e7 58 60 f5-50 28 ca bc 82 57 ec 48   ...B.X`.P(...W.H\n    0010 - 68 64 84 5a 2b ca 65 e3-2f 92 2a 46 16 43 f3 7b   hd.Z+.e./.*F.C.{\n    0020 - 13 e2 99 52 c2 8f bb 9a-de d1 89 3e 22 de 5a 60   ...R.......>".Z`\n    0030 - 90 fc 24 8c d6 4f f6 40-d0 f4 e7 2c bc f9 46 e7   ..$..O.@...,..F.\n    0040 - 7f 7b a1 96 0f da da 6e-14 cd 32 2a 98 f1 97 e6   .{.....n..2*....\n    0050 - 09 06 9f 59 d5 ef 93 a3-e9 7f c7 b6 88 64 b0 1d   ...Y.........d..\n    0060 - 98 93 06 a9 01 57 9b b7-fc 57 14 45 0a cb 3a 6a   .....W...W.E..:j\n    0070 - 39 4e 80 43 d7 04 e9 16-62 61 d5 ef 36 7b 75 b4   9N.C....ba..6{u.\n    0080 - 0a db bb 0b 2d 58 bd 32-7e 15 e7 20 b6 61 9d 39   ....-X.2~.. .a.9\n    0090 - 2d 74 b1 e8 67 da f1 3d-40 2d 62 e3 b2 ab 51 3e   -t..g..=@-b...Q>\n    00a0 - 56 0b ec 51 90 df d4 90-54 76 a2 5b b0 e3 3c 95   V..Q....Tv.[..<.\n    00b0 - 1b af 75 d5 70 10 c7 e9-e1 e0 b4 1d 8c ea 7a 85   ..u.p.........z.\n    00c0 - e5 89 f8 81 81 02 22 99-b7 a9 2f 80 e3 37 d3 c6   ......".../..7..\n    00d0 - 88 be 7d 33 b7                                    ..}3.\n\n    Start Time: 1540348953\n    Timeout   : 300 (sec)\n    Verify return code: 0 (ok)\n---\n'})}),"\n",(0,a.jsxs)(t.p,{children:["The first certificate in the chain (lines 7 to 33) belongs to the server you intend to connect to. You do/should ",(0,a.jsx)(t.strong,{children:"NOT"})," put this in the wallet. The remaining entries are the intermediate(s) and root certificate. These are needed. In this case, there is only an intermediate certificate. Take the content from lines 36 to 61 and save it in a file named ",(0,a.jsx)(t.code,{children:"/home/oracle/certs/Google-Internet-Authority-G3.pem"}),"."]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:"For regular websites over SSL/TLS, you would use this instead:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash"})}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"$ openssl s_client -connect google.com:443 -showcerts"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"\nThe application `openssl` is commonly found in Linux distributions and probably in the MacOS as well. For Windows users, use Git Bash.\n\n## Create the Oracle Wallet\n\nDo this only if you have not already done so. Create the Oracle Wallet using the following command:\n\n```bash\n$ orapki wallet create -wallet /home/oracle/wallets/mywallet \\\n  -pwd averysecurepassword\n"})}),"\n",(0,a.jsx)(t.h2,{id:"add-certificates",children:"Add Certificates"}),"\n",(0,a.jsx)(t.p,{children:"Now add the certificate using the following command against every certificate that was retrieved in the previous step."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"$ orapki wallet add -wallet /home/oracle/wallets/mywallet \\\n  -trusted_cert -cert /home/oracle/certs/Google-Internet-Authority-G3.pem\n"})}),"\n",(0,a.jsx)(t.h2,{id:"dont-leave-home-without-it",children:"Don't Leave Home Without It"}),"\n",(0,a.jsx)(t.p,{children:"Check the wallet to make sure that the certificate has been successfully added:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"$ orapki wallet display -wallet /home/oracle/wallets/mywallet/\nOracle PKI Tool Release 18.0.0.0.0 - Production\nVersion 18.1.0.0.0\nCopyright (c) 2004, 2017, Oracle and/or its affiliates. All rights reserved.\n\nEnter wallet password:\nRequested Certificates:\nUser Certificates:\nTrusted Certificates:\nSubject:        CN=Google Internet Authority G3,O=Google Trust Services,C=US\n"})}),"\n",(0,a.jsx)(t.h2,{id:"set-up-apex-to-use-the-wallet",children:"Set Up APEX to Use the Wallet"}),"\n",(0,a.jsx)(t.p,{children:'Login to APEX as the instance administrator and navigate to "Manage Instance > Instance Settings".'}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"APEX Instance Setting - Wallet",src:n(95541).Z+"",width:"656",height:"159"})}),"\n",(0,a.jsx)(t.p,{children:"That's it!"}),"\n",(0,a.jsx)(t.h2,{id:"one-last-thing",children:"One Last Thing"}),"\n",(0,a.jsxs)(t.p,{children:["I did most of this in a Docker container using this ",(0,a.jsx)(t.a,{href:"https://github.com/fuzziebrain/docker-oracle-xe",children:"image build"}),". The image doesn't have ",(0,a.jsx)(t.code,{children:"openssl"})," available, so I grabbed the certs from the host operating system environment. For the Oracle Wallet management, you can access the tool by obtaining a Bash session in the database container."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"[opc@hostserver ~]$ docker exec -it -u oracle oracledb bash\n[oracle@oracledb /]$ . oraenv\nORACLE_SID = [XE] ?\nThe Oracle base remains unchanged with value /opt/oracle\n[oracle@oracledb /]$\n"})}),"\n",(0,a.jsx)(t.p,{children:"Hope this helps. Lock it down!"})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},95541:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/apex-instance-setting-wallet-3a84223190bef7b71345d11cb47e99ec.jpg"},12072:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/wood-1284077_1920_1280x720-2803d19b8c3e656da71d48a7f6e4ca57.jpg"},11151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>o});var a=n(67294);const s={},i=a.createContext(s);function o(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);