<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>test</title>
        <link>https://fuzziebrain.com/content</link>
        <description>Thinking Anew Blog</description>
        <lastBuildDate>Wed, 24 Jan 2024 22:05:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <copyright>Copyright © 2024 Adrian Png.</copyright>
        <item>
            <title><![CDATA[GenAI Made Easy]]></title>
            <link>https://fuzziebrain.com/content/genai-made-easy</link>
            <guid>https://fuzziebrain.com/content/genai-made-easy</guid>
            <pubDate>Wed, 24 Jan 2024 22:05:00 GMT</pubDate>
            <description><![CDATA[Oracle Generative AI is now generally available. In this blog post, let's look at what it takes to integrate the service in an Oracle APEX application.]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="Photo of a robot ruling the planet." src="https://fuzziebrain.com/assets/images/robot-domination-69195ba4bc7ab5e002c74fe58d729f3c.png" width="1280" height="720" class="img_ev3q"></p>
<p>A new year, a new product! Yesterday, Oracle <a href="https://www.oracle.com/news/announcement/oracle-announces-availability-oci-generative-ai-service-2024-01-23/" target="_blank" rel="noopener noreferrer">announced</a> the general availability of the OCI Generative AI (GenAI) service. In my final blog post last year, I briefly looked at the beta information that was available to the public, and suggested how you can quite easily add powerful GenAI capability in <a href="https://apex.oracle.com/" target="_blank" rel="noopener noreferrer">Oracle APEX</a> applications by calling the REST APIs using <code>APEX_WEB_SERVICE</code>. With the service in GA, I am now finally able to take a deeper dive and hopefully, help you get started.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="first-what-you-need-to-know">First, What You Need to Know...<a href="https://fuzziebrain.com/content/genai-made-easy#first-what-you-need-to-know" class="hash-link" aria-label="Direct link to First, What You Need to Know..." title="Direct link to First, What You Need to Know...">​</a></h2>
<p>The GenAI service is the newest of Oracle's portfolio of AI-focused OCI offerings. At this time, the service is only available in the US Midwest (Chicago) region. If you aren't already subscribed to this region, you can easily do this through the OCI Console. If you are on a trial account, and Chicago's not your home region, you might have to request for a service limit increase. In my personal experience, it can be an uphill task.</p>
<p>Unlike many of the Oracle AI services like Language, Vision, and Speech, costs of this service is not based solely on API calls. It is a combination of the serving mode, number of requests, the model used, and the length of both inputs and outputs. The <a href="https://www.oracle.com/cloud/costestimator.html" target="_blank" rel="noopener noreferrer">OCI Cost Estimator</a> is your "goto" website for estimating your costs, but here's a quick breakdown of each available model.</p>
<table><thead><tr><th>Model</th><th>Cost (CAD)</th></tr></thead><tbody><tr><td>Cohere (small)</td><td>0.05</td></tr><tr><td>Cohere (large)</td><td>0.26</td></tr><tr><td>Llama2-70</td><td>0.18</td></tr><tr><td>Embedding</td><td>0.01</td></tr></tbody></table>
<p>Rates are based on 1 request with an input and output length of 1. If you're familiar with other similar GenAI services, I believe this is akin to tracking input and output tokens. To track my costs, I would think of adding a table to store the input and output lengths of each request. Thereafter, it would be a fairly trivial task to understand and forecast your usage, and hey, maybe even bill your customers. <!-- -->😉</p>
<p>You could also monitor your usage and costs using the OCI Cost Analysis tool. Filtering on the service <code>GENERATIVE_AI</code>, you will find that each model's usage and costs are tracked separately.</p>
<p><img decoding="async" loading="lazy" alt="Example of GenAI usage in OCI Cost Analysis." src="https://fuzziebrain.com/assets/images/cost-analysis-826088a79b4e981c814922dee8fd4d40.png" width="2560" height="1440" class="img_ev3q"></p>
<p>To use the service, either you are an OCI administrator, or belong to an IAM (Identity and Access Management) group that has been granted access to the service. An IAM policy with the following statement should do the trick.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">allow group &lt;group-name&gt; to manage generative-ai-family in compartment &lt;compartment-name&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<blockquote>
<p><strong>NOTE</strong></p>
<p>For the purpose of calling the GenAI inference tasks, I have found that the verb <em>use</em> is probably sufficient. Just a habit of providing the least privileges.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">allow group &lt;group-name&gt; to use generative-ai-family in compartment &lt;compartment-name&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-playground">The Playground<a href="https://fuzziebrain.com/content/genai-made-easy#the-playground" class="hash-link" aria-label="Direct link to The Playground" title="Direct link to The Playground">​</a></h2>
<p>This allows you to access the GenAI playground where you can try out the different tasks and models. Like many of its competitors, through the user interface, you can modify various parameters that influences the resulting text.</p>
<p><img decoding="async" loading="lazy" alt="The OCI Generative AI Playground." src="https://fuzziebrain.com/assets/images/generative-ai-playground-4ff1ea723aef59b92e2a8952bf21fb48.png" width="2560" height="1440" class="img_ev3q"></p>
<p>It's a great starting place to explore concepts, and test your prompts. For example, using the playground, I could see how one-shot learning might help with generating a response given a "fill in the blanks" question.</p>
<p>Here's a prompt without seeding any examples:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">A bus has ___ seats.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The generated output is:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">There is no definitive answer to this question as it could depend on several factors such as the type of bus, the model and the manufacturer. However, I can provide you with some information on the average number of seats you would typically find on a bus.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Typically, a standard bus would have around 30 to 50 seats. However, school buses tend to have more seats. They can typically accommodate around 48 to 80 passengers, depending on the size of the bus. Shuttle buses, on the other hand, tend to have fewer seats to provide more space for luggage. Airport shuttle buses can have seats for as few as 12 passengers up to around 30 passengers.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">It's also important to note that the number of seats in a bus can be influenced by local regulations and standards. For example, buses operating in North America must comply with Federal Motor Vehicle Safety Standards, which set specific requirements for the number of seats and the space between them to ensure passenger safety.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">In summary, the number of seats on a bus can vary widely depending on the type of bus and regulatory standards. While a typical bus may have around 30 to 50 seats, school and shuttle buses can have fewer or more seats depending on their intended use.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Not what I had expected. Let's try that by infusing one example question and response:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Input:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">A car has ___ wheels.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Output:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">===</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Input:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">A bus has ___ seats.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Output:</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This time, the model returns:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">50</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Perfect! Now I know how I should construct my prompt in the <em>kidz quiz</em> application! <!-- -->😉</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-rest-apis">The REST APIs<a href="https://fuzziebrain.com/content/genai-made-easy#the-rest-apis" class="hash-link" aria-label="Direct link to The REST APIs" title="Direct link to The REST APIs">​</a></h2>
<p>In some cases, users may find it necessary to fine-tune a foundation model to generate more relevant responses. This is a highly compute intensive task that often requires a GPU compute cluster to complete the learning process within the 21st century. I won't go into details in this post except to say that users can provision dedicated "AI" clusters to train and host models. And it looks like the product development team made a good decision to split the inference and management APIs into two different categories: <em>Generative AI Service Inference API</em> and <em>Generative AI Service Management API</em>.</p>
<p>Let's delve into the inference APIs that provide us the same set of tasks that was discussed in the <a href="https://fuzziebrain.com/content/a-yearful-of-ai-but-whats-next">previous writeup</a>. The first thing to note is that the endpoint URL is now <code>https://inference.generativeai.us-chicago-1.oci.oraclecloud.com</code>. The inputs and outputs have also changed from what was in the beta documentation, so please ignore almost everything that I wrote in the last post about them. "Almost" because the methodology remains unchanged.</p>
<p>Let's look at the <em>GenerateTextResult</em> task/action for starters. When the GenAI service was first announced at Oracle CloudWorld 2023, the general expectation was that only <a href="https://cohere.ai/" target="_blank" rel="noopener noreferrer">Cohere</a> models were supported. So, it was a pleasant surprise that we now also have Meta's <a href="https://ai.meta.com/llama/" target="_blank" rel="noopener noreferrer">Llama2</a> 70B parameter model available for text generation tasks.</p>
<p>As a reminder, there are currently three capabilities that the GenAI supports:</p>
<ul>
<li>Text generation</li>
<li>Text summarization; and</li>
<li>Text embeddings</li>
</ul>
<p>To see a full list of supported pretrained models, and if you can afford it, custom models, go to the playground, look for the button <em>View model details</em>, and click it. There's an API for it, but why bother. <!-- -->😉<!-- --> You should find the list of model names (labelled <em>1</em> in the diagram) and OCIDs (<em>2</em>), either of which you will need to invoke the REST APIs, so take a note of them.</p>
<p><img decoding="async" loading="lazy" alt="Available model details." src="https://fuzziebrain.com/assets/images/model-details-96892595834ab21606046e3c8f7e7219.png" width="2560" height="1440" class="img_ev3q"></p>
<p>For my quick demo, I'm going to use the Llama2 model, and if you're familiar with its usage, there are certain terms and conditions that you need to agree to. You'll see this when you switch the model in the playground the first time.</p>
<p><img decoding="async" loading="lazy" alt="Aggreement to the terms of use for Llama2 is required." src="https://fuzziebrain.com/assets/images/llama2-agreement-4e8f7ed9c7ee0b0dc15241adfdb52eac.png" width="2560" height="1440" class="img_ev3q"></p>
<p>My goal is to replace the marketing folks at the company I work at, Contoso Food Enterprises Inc. Sales is plummeting, and recently, we have resorted to offering 50% discounts on expiring food products that we were selling at the stores. We need urgent help from GenAI. My goal is to generate product descriptions that make them compelling to buy. After a few trials with the GenAI playground, I settled on this prompt:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Task:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- You are a creative writer. Using the production information provided, write a product description that will increase product sales.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- Use a maximum of 250 words.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Product Information:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Name - {{PRODUCT_NAME}}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Price - ${{PRICE}}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Comments - {{COMMENTS}}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Product Description:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">===</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And then created this app:</p>
<p><img decoding="async" loading="lazy" alt="Demo application to replace marketing types." src="https://fuzziebrain.com/assets/images/generate-text-inputs-724caeb48f77a6a188af1572c6609819.png" width="2560" height="1440" class="img_ev3q"></p>
<p>I assume that you're an expert Oracle APEX developer, so there's no need for me to get GenAI to help me write a few paragraphs here on how to get started on creating an application, page, add page items, buttons, and then a page process to call the endpoint and parse the results. You will need to an OCI web credential, and if you are not familiar with doing that, shameless plug, I highly recommend checking out my Oracle LiveLabs <a href="https://apexapps.oracle.com/pls/apex/r/dbpm/livelabs/view-workshop?wid=3558" target="_blank" rel="noopener noreferrer">workshop</a> on using OCI Object Storage with Oracle APEX. There are detailed instructions on setting up an IAM user, group, generating API keys, and then finally creating the web credentials. Just remember to add the required IAM policy to allow this user to use the GenAI services.</p>
<p>I've masked some of the important variables that are unique to your setup, so please, create the necessary substitution strings and replace them with the values.</p>
<div class="language-plsql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-plsql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">declare</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  c_prompt_template varchar2(32767) := trim(q'[</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Task:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- You are a creative writer. Using the production information provided, write a product description that will increase product sales.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- Use a maximum of 250 words.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Product Information:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Name - {{PRODUCT_NAME}}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Price - ${{PRICE}}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Comments - {{COMMENTS}}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Product Description:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">===</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ]');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_prompt varchar2(32767);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_response clob;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_results json_object_t;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_product_description varchar2(32767);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">begin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -- Prepare your prompt with the page item values on your page.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_prompt := regexp_replace(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    regexp_replace(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      regexp_replace(c_prompt_template, '{{PRODUCT_NAME}}', :P2_PRODUCT_NAME)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      , '{{PRICE}}', :P2_PRICE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    , '{{COMMENTS}}', :P2_COMMENTS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apex_web_service.g_request_headers(1).name := 'Content-Type';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apex_web_service.g_request_headers(1).value := 'application/json';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -- Call the appropriate endpoint, delivering the JSON-formatted payload</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -- as required.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_response := apex_web_service.make_rest_request(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_url =&gt; :G_ENDPOINT_URL || '/20231130/actions/generateText'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    , p_http_method =&gt; 'POST'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    , p_body =&gt; json_object(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        key 'compartmentId' value :G_COMPARTMENT_OCID</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        , key 'inferenceRequest' value json_object(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            key 'prompt' value apex_escape.json(l_prompt)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            , key 'maxTokens' value 400</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            , key 'isStream' value false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            , key 'numGenerations' value 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            , key 'runtimeType' value 'LLAMA'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            , key 'frequencyPenalty' value 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            , key 'presencePenalty' value 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            , key 'temperature' value 0.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            , key 'topP' value 0.75</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            , key 'topK' value -1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            , key 'stop' value json_array('===')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        , key 'servingMode' value json_object(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            key 'servingType' value 'ON_DEMAND'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            -- For the modelId, we could use its name "meta.llama-2-70b-chat".</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            , key 'modelId' value 'ocid1.generativeaimodel.oc1.us-chicago-1.amaaaaaask7dceyai3pxxkeezogygojnayizqu3bgslgcn6yiqvmyu3w75ma'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    , p_credential_static_id =&gt; :G_OCI_CREDENTIALS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -- Parse the JSON-formatted response</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_results := json_object_t.parse(l_response);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -- Replace those nasty "\n"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_product_description := treat(l_results.get_object('inferenceResponse')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    .get_array('choices').get(0) as JSON_OBJECT_T).get_string('text');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -- That's it. Display the results.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  :P2_PRODUCT_DESCRIPTION := regexp_replace(l_product_description, '\\n', '&lt;br/&gt;');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The JSON payload that we send to the endpoint would look like this:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"compartmentId": "&lt;compartment-ocid&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"inferenceRequest": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"prompt":"\005C\005CnTask:\005C\005Cn- You are a creative writer. Using the production information provided, write a product description that will increase product sales. \005C\005Cn- Use a maximum of 250 words.\005C\005Cn\005C\005CnProduct Information:\005C\005CnName - Musang King Durian\005C\005CnPrice - $120\005C\005CnComments - Durians are tasty and smell great. They are fruits that have fibre content, vitamins, and essential minerals.\005C\005Cn\005C\005CnProduct Description:\005C\005Cn\005C\005Cn===\005C\005Cn",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"maxTokens": 400,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"isStream": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"numGenerations": 1,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"runtimeType": "LLAMA",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"frequencyPenalty": 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"presencePenalty": 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"temperature": 0.5,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"topP": 0.75,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"topK": -1,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"stop": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			"==="</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"servingMode": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"servingType": "ON_DEMAND",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"modelId": "ocid1.generativeaimodel.oc1.us-chicago-1.amaaaaaask7dceyai3pxxkeezogygojnayizqu3bgslgcn6yiqvmyu3w75ma"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Note that the text generation task supports both Cohere and Llama2 models. The <code>inferenceRequest</code> is an element of type <code>LlmInferenceRequest</code>, and it has two subtypes: <code>CohereLlmInferenceRequest</code> and <code>LlamaLlmInferenceRequest</code>. They have similar but not the same set of attributes, so pay attention to those, and refer to the documentation for details on each parameter that you can tweak.</p>
<p>Similarly, the text generation results as an <code>inferenceResponse</code> attribute that is of type <code>LlmInferenceResponse</code>, and it has subtypes for both Cohere and Llama2 responses.</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"modelId": "ocid1.generativeaimodel.oc1.us-chicago-1.amaaaaaask7dceyai3pxxkeezogygojnayizqu3bgslgcn6yiqvmyu3w75ma",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"modelVersion": "1.0",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"inferenceResponse": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"runtimeType": "LLAMA",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"created": "2024-01-25T03:57:33.985Z",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"choices": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"index": 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"text": "\\nExperience the richness of Malaysia's most popular durian, Musang King Durian. With its creamy texture and sweet, savory flavor, this fruit is a favorite among durian lovers. Not only does it taste great, but it also has numerous health benefits. The fibre content helps with digestion, while the vitamins and essential minerals boost your immune system. \\n\\nBut what really sets Musang King Durian apart is its unique aroma. The moment you open the box, you'll be greeted by a delicious, pungent smell that will fill the air. It's a smell that's both familiar and exciting, reminding you of the lush rainforests of Malaysia. \\n\\nDon't settle for less, choose the best. Musang King Durian is the perfect choice for any occasion. Whether you're enjoying it on your own or sharing it with friends and family, this durian will leave you wanting more. And at just $120, it's an affordable luxury that's hard to resist. \\n\\nSo why wait? Order your Musang King Durian today and experience the richness of Malaysia's most beloved fruit. Treat your taste buds to a culinary adventure that they'll never forget. Order now and get ready to indulge in the creamy, sweet, and savory goodness of Musang King Durian.",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"finishReason": "stop"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And the outcome? Hordes of people buying durians from Contoso Food Enterprises Inc.!</p>
<p><img decoding="async" loading="lazy" alt="Demo showing output from the GenAI service." src="https://fuzziebrain.com/assets/images/generate-text-outputs-5a55bf52918825e3e43057c311b815ca.png" width="2560" height="1440" class="img_ev3q"></p>
<p>But hey, there's just <strong>NO WAY</strong> this app's going to replace any human in marketing. They are one of my most favourite people to work with. <!-- -->😄<!-- --> Authentic creativity results from unique personalities and experiences.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="parting-words">Parting Words<a href="https://fuzziebrain.com/content/genai-made-easy#parting-words" class="hash-link" aria-label="Direct link to Parting Words" title="Direct link to Parting Words">​</a></h2>
<p>It's 2024, and demo apps like these aren't newsworthy anymore, and definitely not as cool as Michelle Skamene's <a href="https://www.laureston.ca/2023/01/17/building-a-chatgpt-application-with-oracle-apex-in-record-time/" target="_blank" rel="noopener noreferrer">meal planning app</a>. However, it is important to demonstrate that for an Oracle technology professional, we now have a cloud-native, easy-to-use AI-powered service to create digital transformative solutions on our favourite ecosystem, the Oracle Cloud, and of course, Oracle APEX.</p>
<p>What will you build tomorrow?</p>
<p>As always, if you are interested to discuss your unique business challenge, please reach out to me by <a href="https://cal.com/fuzziebrain/iaas-consult" target="_blank" rel="noopener noreferrer">booking</a> a time slot.</p>
<blockquote>
<p><strong>Credits</strong></p>
<ul>
<li>Banner image generated using Stability AI's <a href="https://huggingface.co/stabilityai/stable-diffusion-xl-base-1.0" target="_blank" rel="noopener noreferrer">Stable Diffusion</a> model.</li>
</ul>
</blockquote>]]></content:encoded>
            <category>machine learning</category>
            <category>oci</category>
            <category>oracle apex</category>
            <category>generative ai</category>
            <category>large language model</category>
            <category>llm</category>
        </item>
        <item>
            <title><![CDATA[A Yearful of AI But What's Next?]]></title>
            <link>https://fuzziebrain.com/content/a-yearful-of-ai-but-whats-next</link>
            <guid>https://fuzziebrain.com/content/a-yearful-of-ai-but-whats-next</guid>
            <pubDate>Sun, 31 Dec 2023 15:30:00 GMT</pubDate>
            <description><![CDATA[As 2023 draws to a close, I reflect on year where frontier models dominate the news and focus in the industry, and my aspirations for 2024.]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="A beautiful winter sunrise in Whitehorse, Yukon, Canada." src="https://fuzziebrain.com/assets/images/sunrise-whitehorse-1280x720-c751de502eb414ff30940c710ca94c4e.jpg" width="1280" height="720" class="img_ev3q"></p>
<p>In the last one year since <a href="https://openai.com/" target="_blank" rel="noopener noreferrer">OpenAI</a> popularised <a href="https://wikipedia.org/wiki/Generative_artificial_intelligence" target="_blank" rel="noopener noreferrer">generative AI</a>, a lot of the excitement and intrigue have been centred on the generative power of large language models (LLMs) or foundational models. Understandably so. However, the generative power of this models only cover a segment of business needs. The underlying promise of these frontier models is in its ability to "understand" natural language, and that to me, is where we will find more utility.</p>
<p>For the last few years at <a href="https://www.insum.ca/" target="_blank" rel="noopener noreferrer">Insum</a>, we've had an almost biannual tradition of reviewing what's been going on in the AI/ML space, in particular, around what Oracle has been doing to provide innovative solutions and tools. If you missed those, I have provided the links below. In the absence of an updated review, I am hoping that this final 2023 blog post would serve somewhat as a stopgap.</p>
<p>In late 2020, we did an interview with world-renowned ML expert, <a href="https://helifromfinland.blog/" target="_blank" rel="noopener noreferrer">Heli Helskyaho</a>, where we discussed about AI and its impact on society.</p>
<div class="container_yPU9"><iframe width="560" height="315" src="https://www.youtube.com/embed/BHX-Vt0OU-s" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe></div>
<p><a href="http://montylatiolais.blogspot.com/" target="_blank" rel="noopener noreferrer">Monty Latiolais</a> prophetically asked about whether AI could be used to improve developer productivity. At Insum, we had looked at <a href="https://github.com/features/copilot" target="_blank" rel="noopener noreferrer">GitHub CoPilot</a> in its beta days, thanks to <a href="https://ar.linkedin.com/in/fedegaete" target="_blank" rel="noopener noreferrer">Federico Gaete</a>. However, at that time, we found that it provided limited help to us as it was trained over public repositories, and PL/SQL is overwhelmingly underrepresented. We haven't given up.</p>
<p>It is exciting that Oracle is working towards a "no code" platform <!-- -->😉<!-- -->. In this <a href="https://blogs.oracle.com/apex/post/generative-ai-apex-1" target="_blank" rel="noopener noreferrer">blog post</a>, the authors outline the various facets where AI will assist Oracle APEX and citizen developers create applications and write SQL code. And not to forget, on the Oracle Autonomous Database, there already is <a href="https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/sql-generation-ai-autonomous.html" target="_blank" rel="noopener noreferrer">Select AI</a>. I had <a href="https://fuzziebrain.com/content/speaking-ai-to-your-oracle-database">written previously</a> on my experience, and am still anxiously waiting for the feature that allows you to use a self-hosted LLM.</p>
<p>In early 2022, I did a one-to-one interview with <a href="https://ca.linkedin.com/in/marcruel" target="_blank" rel="noopener noreferrer">Marc Ruel</a>, and we had discussed how we can quite easily build "AI APEX applications" by calling the various Oracle Cloud Infrastructure (OCI) AI services' REST APIs, and/or use AutoML to train and deploy in-database ML models.</p>
<div class="container_yPU9"><iframe width="560" height="315" src="https://www.youtube.com/embed/gavA55-3UXo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe></div>
<p>Have you tried them out?</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="oci-generative-ai">OCI Generative AI<a href="https://fuzziebrain.com/content/a-yearful-of-ai-but-whats-next#oci-generative-ai" class="hash-link" aria-label="Direct link to OCI Generative AI" title="Direct link to OCI Generative AI">​</a></h2>
<blockquote>
<p><strong>IMPORTANT DISCLAIMER</strong></p>
<p>While I, the author, am an active participant in Oracle's Generative AI service beta programme, it is important to clarify that the following content does not contain any exclusive or proprietary information that is not already publicly documented in Oracle Cloud Infrastructure (OCI) documentation. Oracle makes extensive resources available to its users, and I encourage everyone to review these materials for accurate and up-to-date information regarding the capabilities and usage of the Generative AI service. The intention of this text is to provide an example or context rather than to disclose any confidential or undisclosed features.</p>
</blockquote>
<p>2024 will be a year that we should see Oracle releasing new services and features that target the generative AI space. One of them is the Oracle <a href="https://www.oracle.com/artificial-intelligence/generative-ai/" target="_blank" rel="noopener noreferrer">Generative AI</a> (GenAI) service, a cloud native service that was first revealed at Oracle CloudWorld 2023. I was privileged to have attended an introductory session by <a href="https://www.linkedin.com/in/luisecabrera" target="_blank" rel="noopener noreferrer">Luis Cabrera-Cordon</a>, where he demonstrated some of its features using the OCI Console.</p>
<p><img decoding="async" loading="lazy" alt="Luis demonstrating the GenAI service during a session at Oracle CloudWorld 2023." src="https://fuzziebrain.com/assets/images/genai-ocw-2023-edcd6330052e77a155786db50c7c7393.png" width="2560" height="1602" class="img_ev3q"></p>
<p>If you've used any other similar "LLM-as-an-API" service, then the user interface would be familiar to you. It allows you to enter a prompt and adjust parameters like <em>temperature</em> and <em>maximum tokens</em>.</p>
<p>The playground on the OCI Console looks like a great tool to give the feature a quick spin, try things out, and to see how it works. However, the real proof of the pudding is using it inside an application, for example, in Oracle APEX. And like the other Oracle AI services, you can call these models using the OCI REST APIs.</p>
<p>From the API documentation, the key endpoints that us developers would look at using are</p>
<ul>
<li><em>GenerateTextResult</em></li>
<li><em>SummarizeTextResult</em>; and</li>
<li><em>EmbedTextResult</em></li>
</ul>
<p>Like other OCI REST APIs, the required and optional parameters are passed to the endpoints as a JSON payload in the request body, and the results will be returned as a JSON response.</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "compartmentId": "ocid...",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "input": "The text to be summarised.",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "servingMode": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "servingType": "ON_DEMAND",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "modelId": "???"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "additionalCommand": "Additional instructions for the model.",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "extractiveness": "AUTO",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "format": "PARAGRAPH",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "isEcho": "true",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "length": "MEDIUM",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "temperature": 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The attributes are pretty well documented. I am particularly interested in the <code>serviceMode</code> attribute. The value can be either of the type <em>OnDemandServingMode</em> or <em>DedicatedServingMode</em>. Both have the common attribute <code>servingType</code> that is a string value of either <code>ON_DEMAND</code> or <code>DEDICATED</code>. The on-demand serving mode additionally requires the attribute <code>modelId</code> that you can obtain by querying the endpoint <em>ListModels</em> (under <em>ModelCollection</em> in the documentation). This returns a list of elements of type <em>ModelSummary</em>. I would assume that the required model identifier can be found in the <code>id</code> attribute.</p>
<p>The dedicated serving mode has <code>endpointId</code> that points to a <a href="https://docs.oracle.com/iaas/Content/generative-ai/create-ai-cluster-fine-tuning.htm" target="_blank" rel="noopener noreferrer"><em>dedicated AI cluster</em></a> that you can provision to perform fine-tuning. These are (likely) GPU compute clusters that allow us to fine-tune a base LLM over proprietary datasets in order to achieve more relevant and precise results.</p>
<p>Calling and processing the GenAI endpoints will be easily accomplished with the Oracle APEX PL/SQL routines. This will probably work:</p>
<div class="language-plsql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-plsql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">apex_web_service.g_request_headers(1).name := 'Content-Type';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">apex_web_service.g_request_headers(1).value := 'application/json';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">l_response := apex_web_service.make_rest_request(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p_url =&gt; 'https://generativeai.aiservice.us-chicago-1.oci.oraclecloud.com/20231130/actions/summarizeText'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  , p_http_method =&gt; 'POST'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  , p_body =&gt; json_object(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      key 'compartmentId' value 'ocid...'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      , key 'input' value 'The text to be summarised.'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      , key 'serviceMode' value json_object(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          key 'servingType' value 'ON_DEMAND'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          , key 'modelId' value '???'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      , key 'additionalCommand' value 'Additional instructions for the model.'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      , key 'extractiveness' value 'AUTO'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      , key 'format' value 'PARAGRAPH'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      , key 'isEcho' value 'true'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      , key 'length' value 'MEDIUM'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      , key 'temperature' value 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  , p_credential_static_id =&gt; 'MY_OCI_CREDENTIALS'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And after that, all we need to do is parse the results, and there you have it, an AI app! <!-- -->😉</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "id": "ocid...",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "input": "The text to be summarised.",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "modelId": "???",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "modelVersion": 1.0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "summary": "The summarised text that we wanted."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Finally, since these models are from <a href="https://cohere.ai/" target="_blank" rel="noopener noreferrer">Cohere</a>, besides prompt engineering and fine-tuning, I am hoping that we can also perform some in-context learning as well. For example:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Review:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">It's a great camera system!</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">We are able to save video clips, and it's easy to set up.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">We have our motion alerts on high sensitivity, and we receive any motion alerts, which is amazing. The camera quality seems to be clear on our end, including any sounds. We can see everything even at night.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">We purchased 2 cameras on sale on Cyber Monday. Amazing deal! Highly recommend</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Rating:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Five</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Review:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Not happy with these cameras. You start off by having to sign up for a free 30 day subscription trial. If you stay on the trial you don’t actually know how the USB storage option works for recorded videos (if you don’t want to continue with a monthly subscription for a monthly fee). So, I cancelled my free subscription so I could try the usb storage option rather than pay for subscription. This also allows me the flexibility to return it within 30 days. Interesting that you cannot “pause” free trial and reinstate later. Once cancelled you lose your free trial which seems like a gimmick.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">The USB (not included) does work but, retrieving the videos is very slow and trying to access the cameras in “live” view sometimes does not work.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">The daytime quality of cameras is ok but the night time quality is poor. Also, they are not weather resistant. I have mine protected under roofline but most mornings the cameras are blurry because of condensation despite having them in a somewhat protected area. We did also put one on a fence as they shown on the website but quickly had to remove it because of condensation build up (when it wasn’t even raining).</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Will be returning. Not happy at all.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Rating:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">One</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Review:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">It's a decent camera system without a live view option for multiple cameras. Important: this kit includes the Sync Module already, I didn't see that listed anywhere so I bought separately the sync module and ended up with 2 of them.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Pros:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- Able to communicate with people with 2-way communication.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- Able to save video clips.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- Easy to set up</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Cons:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- No constant live view. It's not like a traditional camera security system where you look at a monitor and see multiple cameras with a live view. You need to click on each camera and it will (slowly) load the view at that camera.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- I haven't received any motion alerts. I have the sensitivity up high, I selected zones, I did everything they said to do and still no alerts for motion.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- The camera quality is not like it is shown on the photos. The photos on Amazon are taken with a high end camera and made to look like they're the view of these cameras. It is nothing like the photos shown. Picture a digital camera from 2010. That is the image you'll get.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Rating returned as a json object with one attribute named rating:</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>That then returns a result like this:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "rating": 3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<blockquote>
<p><strong>Acknowledgement</strong></p>
<p>The text in the examples are actual reviews taken from Amazon.</p>
</blockquote>
<p>At the moment, it seems to me that creating applications using Large Language Models (LLMs) remains an expensive endeavor due to reliance on GPUs and ongoing supply chain issues, there are promising signs of change with growing interest in alternatives like Intel ARC and AMD Radeon. This diversification of hardware options offers hope for more accessible and affordable fine-tuning opportunities in the near future. Nevertheless, let us not forget to keep a close eye on the ecological impact of these advancements.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="oracle-ai-vector-search">Oracle AI Vector Search<a href="https://fuzziebrain.com/content/a-yearful-of-ai-but-whats-next#oracle-ai-vector-search" class="hash-link" aria-label="Direct link to Oracle AI Vector Search" title="Direct link to Oracle AI Vector Search">​</a></h2>
<p>Unlike the GenAI service, not a lot has been published on this upcoming Oracle Database 23c feature. And I might stress "upcoming". When news first broke (also) at Oracle CloudWorld 2023, it wasn't clear if the vector data type and its powerful search features were part of the 23c general availability (GA) that was announced at the same time. If you missed it, here's the <a href="https://www.oracle.com/news/announcement/ocw-integrated-vector-database-augments-generative-ai-2023-09-19/" target="_blank" rel="noopener noreferrer">press release</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="embeddings-and-knowledge-graphs">Embeddings and Knowledge Graphs<a href="https://fuzziebrain.com/content/a-yearful-of-ai-but-whats-next#embeddings-and-knowledge-graphs" class="hash-link" aria-label="Direct link to Embeddings and Knowledge Graphs" title="Direct link to Embeddings and Knowledge Graphs">​</a></h2>
<p>In the absence of publicly available content on the AI vector search database feature, let's focus instead on an important concept, <em>embeddings</em>. Embeddings in LLMs are a vector of numbers that somewhat represent meaning and context in a body of text. These vectors are derived from the parameters or the weights of a LLM used to generate these embeddings. They can be used to encode and decode both inputs and outputs of your inferencing task. These vectors are what powers "semantic" search and Retrieval Augment Generation (RAG), and based on the press release, we can expect to perform these tasks when the AI vector search feature becomes generally available.</p>
<p>While I await for AI vector search to be generally available, there are a few frameworks and alternate vector database solutions that I am currently looking at, including most recently, the newly release <a href="https://www.oracle.com/cloud/redis/" target="_blank" rel="noopener noreferrer">OCI Cache with Redis</a> service that didn't work out as I had expected. <!-- -->😦<!-- --> More on that in a 2024 blog post.</p>
<p>One other area that I am looking to spend some time on in 2024 is on the subject of <em>knowledge graph embeddings</em>. I first learned about the Semantic Web and the power of ontologies, knowledge representation, and linked data at a 2006 bioinformatics conference in Boston, where I crashed on a special interest group meeting at the <a href="https://www.csail.mit.edu/" target="_blank" rel="noopener noreferrer">MIT Computer Science &amp; Artificial Intelligence Laboratory</a>. Aside from seeing the back of <a href="https://wikipedia.org/wiki/Tim_Berners-Lee" target="_blank" rel="noopener noreferrer">Sir Tim Berners-Lee's</a>, I was truly inspired by the brains around this subject, and remembered listening to a presentation on what would later become <a href="https://wikipedia.org/wiki/Freebase_(database)" target="_blank" rel="noopener noreferrer">Freebase</a>.</p>
<p>In my Kscope17 presentation, <a href="https://www.insum.ca/portfolio/enriching-oracle-apex-applications-semantics/" target="_blank" rel="noopener noreferrer"><em>Enriching Oracle APEX Applications with Semantics</em></a>, I described simple changes to how data is presented so that software agents may access and consume data meaningfully. As we continue to produce yottabytes of data, we should not neglect the importance of curating, documenting, and enriching (and securing) data. Data without meaning is going to be garbage. And the essence of embedding meaning in data is ever increasingly important in this new era of AI. I'm placing my bets that the development and use of knowledge graphs and frontier models is the next disrupter in the AI space. If anyone's looking for a part-time PhD candidate, can I please volunteer? :raising_hand:<!-- -->😉</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://fuzziebrain.com/content/a-yearful-of-ai-but-whats-next#summary" class="hash-link" aria-label="Direct link to Summary" title="Direct link to Summary">​</a></h2>
<p>It's been an accelerating year for AI developments and I don't think anyone's going to see the end of it in 2024. For me personally, I continue to be conflicted with the current developments and hype around generative AI. While it presents a lot of promise, it shouldn't dwarf the usefulness of traditional ML approaches that I feel still provides a lot of immediate utility. It is also seemingly a technology for those who can afford it, and it has potential to take jobs away from people who do what some might call mundane.</p>
<p>Take the banner art that I use for my previous few blogs for example. In case it wasn't obvious enough, I have relied on generating the images using the <a href="https://huggingface.co/papers/2307.01952" target="_blank" rel="noopener noreferrer">Stable Diffusion XL</a> model, when I used to scour online repositories of royalty-free photos. For more professional websites, I'm sure they source these from companies selling stock art from contributors, providing a source of income for people passionate about photography or graphic art.</p>
<p>AI is great, and I'm passionate about what it can do for civilisation. But in 2024, and in the years following, I do hope that we can all continue to remember that technology should be used to improve the lives of all, and not some.</p>
<p>With that, I'll end this blog post and 2023. For those whom I have had the privilege of working with this year, a huge "Thank you". It's been a great year, and I look forward to our continued collaboration to make this world a better place for you, me, and those whom we serve.</p>
<p><img decoding="async" loading="lazy" alt="Wefie at OCW23." src="https://fuzziebrain.com/assets/images/happy-new-year-3e154e40bf876197419a84e7b55442b3.jpg" width="3264" height="1836" class="img_ev3q"></p>
<p>Happy New Year Everyone!<br>
祝大家新年快乐！<br>
Bonne Année à Tous!<br>
あけましておめでとう皆さん！<br></p>
<blockquote>
<p><strong>Photo Credits</strong></p>
<p>The photo used in the banner image was taken by me quite recently. This is a winter sunrise with the mountains in the backdrop. Moving from big cities into a remote community in the far North has been humbling, and a reminder that I am a very small piece in this humongous puzzle.</p>
</blockquote>]]></content:encoded>
            <category>frontier models</category>
            <category>large language models</category>
            <category>llms</category>
            <category>foundation models</category>
            <category>machine learning</category>
            <category>oci</category>
            <category>generative ai</category>
            <category>knowledge graph</category>
            <category>embeddings</category>
        </item>
        <item>
            <title><![CDATA[Generate Art Using Latent Diffusion Models and NFC Tags]]></title>
            <link>https://fuzziebrain.com/content/generate-art-using-diffusion-models-and-nfc-tags</link>
            <guid>https://fuzziebrain.com/content/generate-art-using-diffusion-models-and-nfc-tags</guid>
            <pubDate>Sun, 19 Nov 2023 21:00:00 GMT</pubDate>
            <description><![CDATA[Learn how to host the Stable  for performing text-to-image generation tasks on the Oracle Cloud Infrastructure (OCI). Then, build an Oracle APEX application that uses NFC tags to receive text prompts and use it to generate an image.]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="Photo of a bird perched on a tree, generated using a Stability Diffusion model." src="https://fuzziebrain.com/assets/images/image20231119221347-f7f8e843ef24108f6ff6b29e10bd7527.png" width="1280" height="720" class="img_ev3q"></p>
<p>In my previous <a href="https://fuzziebrain.com/content/deploy-and-use-fine-tuned-llms-in-oracle-apex">post</a>, you read about how I performed fine-tuning and deployed a large language model (LLM) on the <a href="https://oracle.com/cloud" target="_blank" rel="noopener noreferrer">Oracle Cloud Infrastructure</a> (OCI) <a href="https://www.oracle.com/artificial-intelligence/data-science/" target="_blank" rel="noopener noreferrer">Data Science</a> service. Here, I was hoping to do the same with the <a href="https://stability.ai/stable-diffusion" target="_blank" rel="noopener noreferrer">Stable Diffusion XL</a>, a <em>Latent Diffusion Model</em> (LDM), but unfortunately, the platform currently does not support a <a href="https://huggingface.co/" target="_blank" rel="noopener noreferrer"><em>Hugging Face</em></a> pipeline using this model. I found an alternative, and you will read about it later in this article.</p>
<p>To demonstrate its utility, I create a simple <a href="https://apex.oracle.com/" target="_blank" rel="noopener noreferrer">Oracle APEX</a> application that reads NFC tags using the <strong>experimental</strong> <a href="https://w3c.github.io/web-nfc/" target="_blank" rel="noopener noreferrer"><em>Web NFC</em></a> API, and then displays an image generated by the deployed machine learning (ML) model.</p>
<p>I called this toy application "Amiibo Art". The <a href="https://www.nintendo.com/amiibo/" target="_blank" rel="noopener noreferrer">Amiibo</a> was created by <em>Nintendo</em> to bridge games with the real world using toys, figurines, and collectibles that embedded a radio-frequency tag. I wanted this APEX application to interact with the real world, and then generate a collectible. If you missed it, here's the screen recording of the application in action:</p>
<div class="container_yPU9"><iframe width="560" height="315" src="https://www.youtube.com/embed/aozXI0NWlKs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="deploying-the-model">Deploying the Model<a href="https://fuzziebrain.com/content/generate-art-using-diffusion-models-and-nfc-tags#deploying-the-model" class="hash-link" aria-label="Direct link to Deploying the Model" title="Direct link to Deploying the Model">​</a></h2>
<p>As mentioned earlier, the OCI Data Science platform did not provide me an easy way to deploy the Stable Diffusion XL model. I found an open-source project called <a href="https://pinferencia.underneathall.app/" target="_blank" rel="noopener noreferrer"><em>Pinferenia</em></a> that I could use to deploy a Hugging Face pipeline to perform the text-to-image generation task. The code below can be executed and deployed on an OCI Compute, and a GPU, while not required, is desired.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="setup-the-server-environment">Setup the Server Environment<a href="https://fuzziebrain.com/content/generate-art-using-diffusion-models-and-nfc-tags#setup-the-server-environment" class="hash-link" aria-label="Direct link to Setup the Server Environment" title="Direct link to Setup the Server Environment">​</a></h3>
<p>The first task involved setting up a new <a href="https://conda.io/" target="_blank" rel="noopener noreferrer">Conda</a> environment with the required dependencies using the <a href="https://yaml.org/" target="_blank" rel="noopener noreferrer">YAML</a> file below:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">channels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> conda</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">forge</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> pytorch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> nvidia</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">dependencies</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> python=3.9</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> pytorch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> pytorch</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">cuda</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> transformers</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> pillow</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> numpy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> safetensors</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> diffusers</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> accelerate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> pip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">pip</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> invisible_watermark</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> oracle</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">ads</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> pinferencia</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>If you are new to Conda, write the YAML contents into a file name <code>amiibo-art.yaml</code>, install the Conda software, and then execute the command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">conda env create -n amiibo-art -f amiibo-art.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Then, as instructed, activate the environment before running the subsequent code and commands. To activate the newly created environment, execute the command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">conda activate amiibo-art</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="write-the-server-side-code">Write the Server-Side Code<a href="https://fuzziebrain.com/content/generate-art-using-diffusion-models-and-nfc-tags#write-the-server-side-code" class="hash-link" aria-label="Direct link to Write the Server-Side Code" title="Direct link to Write the Server-Side Code">​</a></h3>
<p>Create the Python file <code>app.py</code> with the code provided below. Follow the embedded comments to understand what it is doing.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> diffusers </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> DiffusionPipeline</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> pinferencia </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> Server</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> torch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> datetime</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> os</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> oci</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">object_storage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">get_current_timestamp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    Return a timestamp for file naming purposes.</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    now </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> datetime</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">datetime</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">now</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> now</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">strftime</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'%Y%m%d%H%M%S'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">save_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">bucketName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> objectName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> content</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    Save the generated image in an Object Storage bucket for retrieval later.</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mimeType </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"image/png"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">object</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> client</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">put_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        namespace_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> namespace</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> bucket_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> bucketName</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> object_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> objectName</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> content_type </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> mimeType</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> put_object_body </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> content</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">generate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">prompt</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    This function is registered to the Pinferencia as the model "genai". It</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    generates the image using the Hugging Face pipeline, save the output as a</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    file, then push it to the Object Storage bucket using the function</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    "save_object".</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    bucketName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"amiibo"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    objectName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string-interpolation string" style="color:#e3116c">f"image</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">get_current_timestamp</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">(</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">)</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">.png"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    image </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pipe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">prompt</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">prompt</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> width</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1280</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> height</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">720</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">images</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    image</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">save</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">objectName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    content </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">objectName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"rb"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    save_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">bucketName</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">bucketName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> objectName</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">objectName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> content</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">content</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">remove</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">objectName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"bucket_name"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bucketName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"object_name"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> objectName</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">We will use an instance principal to sign the request. Be sure to:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">1. Create a dynamic group that includes the Compute instance's OCID.</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">2. Create an IAM policy that has the necessary statements to allow the dynamic</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">   group to write to the bucket.</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">signer </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> oci</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">auth</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">signers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">InstancePrincipalsSecurityTokenSigner</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">client </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> oci</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">object_storage</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ObjectStorageClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">config</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"region"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"***"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"tenancy"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">signer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">tenancy_id</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> signer</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">signer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">namespace </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> client</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get_namespace</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">Create a Hugging Face pipeline using the Stable Diffusion XL model hosted on the</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">platform. We will use the quantized model.</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pipe </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> DiffusionPipeline</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">from_pretrained</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"stabilityai/stable-diffusion-xl-base-1.0"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        use_safetensors</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> torch_dtype</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">float16</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> variant</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"fp16"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">Use a Nvidia GPU, if available.</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pipe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">to</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"cuda"</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cuda</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">is_available</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"cpu"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">Instantiate the Pinferencia server.</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">service </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Server</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">Register the "generate" function as the model "genai".</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">register</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">model_name</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"genai"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> model</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">generate</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    metadata</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"platform"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"Linux"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"device"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"GPU"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="run-the-server">Run the Server<a href="https://fuzziebrain.com/content/generate-art-using-diffusion-models-and-nfc-tags#run-the-server" class="hash-link" aria-label="Direct link to Run the Server" title="Direct link to Run the Server">​</a></h3>
<p>The Pinferencia package includes executables for running a server instance. For simplicity, I ran the server in the background using <a href="https://github.com/tmux/tmux" target="_blank" rel="noopener noreferrer">tmux</a> (think <em>screen</em>), and executing the command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">pinfer --backend-host 0.0.0.0 --mode backend app:service --reload</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<blockquote>
<p><strong>NOTE</strong></p>
<p>By default, the server only binds and listens to the local interface, i.e., <code>localhost</code> or IP address <code>127.0.0.1</code>. Hence, the command includes the parameter <code>--backend-host 0.0.0.0</code>.</p>
</blockquote>
<p>The deployed model is accessible at an endpoint URL with a format that looks like this:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">http://{{HOST_IP}}:8000/v1/models/{{MODEL_NAME}}/predict</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>For example:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">http://10.30.4.23:8000/v1/models/genai/predict</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="deploy-an-oci-api-gateway">Deploy an OCI API Gateway<a href="https://fuzziebrain.com/content/generate-art-using-diffusion-models-and-nfc-tags#deploy-an-oci-api-gateway" class="hash-link" aria-label="Direct link to Deploy an OCI API Gateway" title="Direct link to Deploy an OCI API Gateway">​</a></h3>
<p>As I am calling this web service from an Oracle Autonomous Database that is <strong>not</strong> using a private endpoint, I needed to proxy the service over HTTPS. The fastest approach to achieve this was to create an OCI API Gateway and route as show below.</p>
<p><img decoding="async" loading="lazy" alt="OCI API Gateway route for the Pinferencia web service endpoint." src="https://fuzziebrain.com/assets/images/apigw-route-29651e67af64b9e698f6b103f0e3cf44.png" width="2560" height="1440" class="img_ev3q"></p>
<p>This serves the web service publicly using an endpoint address that looks like this:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">https://{{UNIQUE_IDENTIFIER}}.apigateway.eu-frankfurt-1.oci.customer-oci.com/v1/genai/texttoimage</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="testing-the-model">Testing the Model<a href="https://fuzziebrain.com/content/generate-art-using-diffusion-models-and-nfc-tags#testing-the-model" class="hash-link" aria-label="Direct link to Testing the Model" title="Direct link to Testing the Model">​</a></h3>
<p>Pinferencia provides a <a href="https://swagger.io/" target="_blank" rel="noopener noreferrer">Swagger</a> UI that documents all the endpoints it is serving. You can use it to try out the models served. In this diagram, I am testing the image generation model.</p>
<p><img decoding="async" loading="lazy" alt="Swagger UI showing all the available endpoints and a way to try them." src="https://fuzziebrain.com/assets/images/swagger-ui-68ecb832cc8fc650997e2232db31a795.png" width="2560" height="1440" class="img_ev3q"></p>
<p>The input is a JSON object containing the prompt:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "id": "string",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "parameters": {},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "data": "A cartoon image of a cat chasing a mouse."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>After the image has been placed in the bucket, it returns a HTTP response containing a JSON payload with the <code>bucket_name</code> and <code>object_name</code> that we can use to retrieve the object.</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "id": "string",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "model_name": "genai",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "model_version": "default",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "data": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "bucket_name": "amiibo",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "object_name": "image20231113223047.png"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-nfc-enabled-web-application">The NFC-Enabled Web Application<a href="https://fuzziebrain.com/content/generate-art-using-diffusion-models-and-nfc-tags#the-nfc-enabled-web-application" class="hash-link" aria-label="Direct link to The NFC-Enabled Web Application" title="Direct link to The NFC-Enabled Web Application">​</a></h2>
<p>I created an Oracle APEX application with the following features:</p>
<ol>
<li><strong>Page 1.</strong> On the home page, the user scans a NFC tag containing a single text record that stores the prompt to submit to the deployed model.</li>
<li>An administrative tool that allows an administrator to:<!-- -->
<ol>
<li><strong>Page 2</strong>. List tags in the inventory with buttons to manage or write prompts to a tag.</li>
<li><strong>Page 3</strong>. Register and manage a tag.</li>
<li><strong>Page 4</strong>. Write prompts to a tag.</li>
</ol>
</li>
</ol>
<p>To keep this blog post readable, I will focus on two key aspects that allow the user to scan and generate an image.</p>
<p>First, the <em>Ajax Callback</em> process that is called when an NFC tag containing a valid prompt is scanned successfully. Again, follow the embedded comments to understand what this code does.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * The collection name used for temporary storing the images.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c_collection_name apex_collections</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">collection_name</span><span class="token operator" style="color:#393A34">%</span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AMIIBO_ART'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * The JavaScript event listener will read the tag and supply prompt using</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * the x01 variable.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_prompt apex_application</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_x01</span><span class="token operator" style="color:#393A34">%</span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex_application</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_x01</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * Utility variables for reading and parsing the results.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_response clob</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_content </span><span class="token keyword" style="color:#00009f">blob</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_json_response apex_json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">t_values</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * Call the deployed model's endpoint through the API gateway. The payload</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * contains the prompt read from the NFC tag.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_response :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">make_rest_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        p_url </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'https://{{UNIQUE_IDENTIFIER}}.apigateway.eu-frankfurt-1.oci.customer-oci.com/v1/genai/texttoimage'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_http_method </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'POST'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_body </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'data'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> l_prompt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_status_code </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">200</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         * If all goes well, parse the HTTP response's JSON payload to read the</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         * generated image's bucket and object name.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        apex_json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">parse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_json_response</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> l_response</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         * Retrieve the object using the DBMS_CLOUD.GET_OBJECT function. Be sure</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         * to also create an IAM user, set up the OCI API credentials, and</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         * create the necessary policy to allow the IAM user to access the</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         * object.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        l_content :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> dbms_cloud</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            credential_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MY_API_CREDENTIALS'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> object_uri </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'https://objectstorage.eu-frankfurt-1.oraclecloud.com/n/***/b/amiibo/o/'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token operator" style="color:#393A34">||</span><span class="token plain">  apex_json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get_varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        p_path </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'data.object_name'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_values </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_json_response</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         * Not the best code here, but I am simply pushing the image into the</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         * an APEX collection.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        apex_collection</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create_or_truncate_collection</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c_collection_name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        apex_collection</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">add_member</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            p_collection_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> c_collection_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_c001 </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_prompt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_blob001 </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_content</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sys</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">htp</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'{"message":"success", "prompt": "'</span><span class="token operator" style="color:#393A34">||</span><span class="token plain">l_prompt</span><span class="token operator" style="color:#393A34">||</span><span class="token string" style="color:#e3116c">'"}'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sys</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">htp</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'{"message":"failed"}'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This can be a long running process, and better strategies should be considered if larger images, the non-quantized model is used, or the pipeline is not running on a server with a GPU with sufficient memory. With a single Nvidia A10, I was able to get images to be generated in less than 20 seconds. While possible, using a CPU took more than 12 minutes in one attempt I made.</p>
<p><img decoding="async" loading="lazy" alt="Elapsed time using only CPU resources for the pipeline." src="https://fuzziebrain.com/assets/images/elapsed-time-with-cpu-only-eeaf9ccb0ae9facf788d9eb69a4d0afb.png" width="2560" height="1440" class="img_ev3q"></p>
<p>On page 1, an Oracle APEX <em>Card Region</em> is added to render the image using the source query:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    seq_id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'My Amiibo Art'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> title</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c001 </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> prompt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> blob001 </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> content_blob</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> apex_collections</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> collection_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AMIIBO_ART'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And a button that calls a dynamic action that executes the following JavaScript code:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">apex</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">message</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"Close this alert, and then scan your Amiibo."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">style</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"information"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword control-flow" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token doc-comment comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">     * Instantiate the NFC reader object when the scan button is clicked.</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> ndef </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">NDEFReader</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token doc-comment comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">     * Begin scanning.</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ndef</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">scan</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token doc-comment comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">     * Attach an event handler when there is an error reading the tag.</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ndef</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">addEventListener</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"readingerror"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            apex</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">message</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"Failed to read data from the Amiibo. Please try again."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">style</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"warning"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token doc-comment comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">     * Attach an event handler to handle the incoming data when a tag is scanned</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">     * successfully. The data contains the serial number and its message</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">     * payload.</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ndef</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">addEventListener</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"reading"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter punctuation" style="color:#393A34">{</span><span class="token parameter"> message</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> serialNumber </span><span class="token parameter punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">message</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">records</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token doc-comment comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">                 * Get the first record.</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">                 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                record </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> message</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">records</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token doc-comment comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">                 * If it is of the expected record type, then process it.</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">                 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">record</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">recordType</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"text"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token doc-comment comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">                     * First, instantiate a text decoder.</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">                     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> decoder </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">TextDecoder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> spinner </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">showSpinner</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">$</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"body"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token doc-comment comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">                     * Call the Ajax callback with the text contained in the</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">                     * tag's message payload.</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">                     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    apex</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">server</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">process</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"TEXT_TO_IMAGE"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token literal-property property" style="color:#36acaa">x01</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> decoder</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">record</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token function-variable function" style="color:#d73a49">success</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token parameter">data</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                </span><span class="token doc-comment comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">                                 * TODO:</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">                                 * A page submit here because the Card region</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">                                 * was not refreshing with the new image. Needs</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">                                 * improvement.</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">                                 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                apex</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">page</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">submit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token function-variable function" style="color:#d73a49">error</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token parameter">jqXHR</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> textStatus</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> errorThrown</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                </span><span class="token comment" style="color:#999988;font-style:italic">// handle error</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apex</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">message</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">General error: {error}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">style</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"warning"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>After the tag is scan, on the backend, you can see Pinferencia hard at work, generating images typically under 20 seconds.</p>
<div class="container_yPU9"><iframe width="560" height="315" src="https://www.youtube.com/embed/uheDoKlAFdU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe></div>
<p>And if all goes well, the page should be refreshed with the image generated by the model.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="writing-to-nfc-tags">Writing to NFC Tags<a href="https://fuzziebrain.com/content/generate-art-using-diffusion-models-and-nfc-tags#writing-to-nfc-tags" class="hash-link" aria-label="Direct link to Writing to NFC Tags" title="Direct link to Writing to NFC Tags">​</a></h2>
<p>At the time of writing, the Web NFC API allows developers to read, write, and set a tag to "read-only" mode. In the application, I had created functionality for an administrator to maintain a collection of NFC tags, and to write prompts to them. On page 4, a button is attached to a dynamic action that runs JavaScript code to write to the tag. A sample of the code is as follows:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword control-flow" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ndef</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">addEventListener</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"reading"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter punctuation" style="color:#393A34">{</span><span class="token parameter"> message</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> serialNumber </span><span class="token parameter punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">serialNumber </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> apex</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">item</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"P4_TAG_ID"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getValue</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ndef</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">write</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apex</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">item</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"P4_PROMPT"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getValue</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                apex</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">message</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token string" style="color:#e3116c">"Prompt written to tag."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">style</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"information"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                apex</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">message</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token string" style="color:#e3116c">"Failed to write to tag. Tag ID mismatch."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">style</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"danger"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apex</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">message</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">General error: {error}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">style</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"warning"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Easy eh?</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://fuzziebrain.com/content/generate-art-using-diffusion-models-and-nfc-tags#summary" class="hash-link" aria-label="Direct link to Summary" title="Direct link to Summary">​</a></h2>
<p>I worked on this fun project with two objectives in mind:</p>
<ol>
<li>How can I work with NFC tags in an Oracle APEX application.</li>
<li>How can I host a Stable Diffusion model in the OCI.</li>
</ol>
<p>Despite the limitations, I have learned quite a bit during this adventure.</p>
<ol>
<li>Support for NFC tags is currently limited. Only Google Chrome on an Android device supports the experimental Web NFC API. And even so, we seem to be limited to reading, writing, and setting a tag to "read-only" mode. Hopefully, there will be future support password-lock a tag as well.</li>
<li>Not all Hugging Face pipelines are supported and can be deployed to the OCI Data Science platform.</li>
<li>There are other software platforms that can be used to deploy ML models, for example, Pinferencia. I don't consider it ready for production use, but it has been very easy to set up, run, and host a ML model.</li>
</ol>
<p>Hope you enjoyed reading about this as much as I had working and writing on the project. If you are interested to discuss possible solutions to your unique business challenge, please reach out to me using this <a href="https://cal.com/fuzziebrain/iaas-consult" target="_blank" rel="noopener noreferrer">form</a>.</p>
<blockquote>
<p><strong>Credits</strong></p>
<ul>
<li>Banner image generated using Stability AI's <a href="https://huggingface.co/stabilityai/stable-diffusion-xl-base-1.0" target="_blank" rel="noopener noreferrer">Stable Diffusion</a> model.</li>
</ul>
</blockquote>]]></content:encoded>
            <category>latent diffusion model</category>
            <category>ldm</category>
            <category>machine learning</category>
            <category>oci</category>
            <category>python</category>
            <category>conda</category>
            <category>oracle apex</category>
            <category>generative ai</category>
            <category>ai-generated art</category>
            <category>mlops</category>
            <category>nfc</category>
            <category>text-to-image generation</category>
        </item>
        <item>
            <title><![CDATA[Deploy and Use Fine-Tuned LLMs in Oracle APEX]]></title>
            <link>https://fuzziebrain.com/content/deploy-and-use-fine-tuned-llms-in-oracle-apex</link>
            <guid>https://fuzziebrain.com/content/deploy-and-use-fine-tuned-llms-in-oracle-apex</guid>
            <pubDate>Sun, 05 Nov 2023 01:35:00 GMT</pubDate>
            <description><![CDATA[Learn how Oracle Cloud Infrastructure (OCI) resources can be used to fine-tune and deploy open source large language models (LLMs). Then, build an Oracle APEX application that users may use to submit feedback and have their reviews automatically scored.]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="LLMs for analyzing customer reviews." src="https://fuzziebrain.com/assets/images/llms-for-analyzing-customer-reviews-5f8f8c44197d2e7aba542aea8d90582d.png" width="1280" height="720" class="img_ev3q"></p>
<p>In my previous <a href="https://fuzziebrain.com/content/predict-the-rugby-world-cup-2023-winner">post</a>, I wrote about how a <a href="https://scikit-learn.org/" target="_blank" rel="noopener noreferrer">scikit-learn</a> machine learning (ML) could be trained and deployed on the <a href="https://oracle.com/cloud" target="_blank" rel="noopener noreferrer">Oracle Cloud Infrastructure</a> (OCI) <a href="https://www.oracle.com/artificial-intelligence/data-science/" target="_blank" rel="noopener noreferrer">Data Science</a> service. The model is deployed on the service's managed infrastructure, allowing developers to simply call a HTTP endpoint to perform ML model inference on the submitted data. In my latest adventure, I built an <a href="https://apex.oracle.com/" target="_blank" rel="noopener noreferrer">Oracle APEX</a> application that takes product reviews and then automatically ranks the review using a fine-tuned large language model (LLM) available through <a href="https://huggingface.co/" target="_blank" rel="noopener noreferrer">Hugging Face</a>.</p>
<p>While OpenAI's <a href="https://openai.com/chatgpt" target="_blank" rel="noopener noreferrer">ChatGPT</a> has largely dominated the news headlines when it comes to <em>Generative AI</em>, there is a plethora of LLMs out there. Many of them are open sourced and readily available through hubs like Hugging Face. There are a bunch of tutorials that introduce the platform including the available datasets, models, Python, and JavaScript libraries. In this post, I will use the example from their tutorial on fine-tuning a pre-trained model.</p>
<p>The goal is to use the <a href="https://huggingface.co/datasets/yelp_review_full" target="_blank" rel="noopener noreferrer">Yelp review</a> dataset to fine-tune <a href="https://arxiv.org/abs/1810.04805" target="_blank" rel="noopener noreferrer">BERT</a>, specifically, the <a href="https://huggingface.co/distilbert-base-uncased" target="_blank" rel="noopener noreferrer">distilbert-base-uncased</a> model, to assign a rank that describes the sentiment expressed in a body of text.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="provisioning-the-tools">Provisioning the Tools<a href="https://fuzziebrain.com/content/deploy-and-use-fine-tuned-llms-in-oracle-apex#provisioning-the-tools" class="hash-link" aria-label="Direct link to Provisioning the Tools" title="Direct link to Provisioning the Tools">​</a></h2>
<p>Machine learning tasks can be performed on a CPU, but more often than not, we have a huge performance gained by using a graphical processing unit (GPU). For most people, that's going to be a Nvidia chip. On the OCI, we currently have a choice of the P100, V100, and more recently, A10 and A100. I went with an A10 as it was newer, cheaper than the A100, and has adequate amount of GPU memory. And, more importantly, the tenancy that I was on had sufficient number of GPUs assigned.</p>
<p>You can check your tenancy's service limits to see if you can provision a GPU instance. The resource that you will need is either <code>gpu-a10-count</code> if you wish to run the training on an OCI Compute instance, or <code>ds-gpu-a10-count</code> for an OCI Data Science notebook. These limits are assigned differently for Compute instance and Data Science notebooks. If your tenancy is either a trial, or a <em>PAYG</em> (Pay-as-you-go) account, then these limits are likely <code>0</code>. For <em>PAYG</em>, you could try making a service limit request, but for trial accounts, it's an uphill battle. And for accounts with a <em>Universal Credits</em>, you might find <code>16</code> is the number for <code>gpu-a10-count</code>. Make a service limit request for <code>ds-gpu-a10-count</code> if you wish to run the training in a GPU-powered notebook session.</p>
<p>I initially did not have access to GPU resources on OCI Data Science, so I had provisioned a Compute with a GPU, and then all I needed was to install <a href="https://conda.io/miniconda" target="_blank" rel="noopener noreferrer">Miniconda</a>, and I was good to go!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="fine-tune-the-llm">Fine-tune the LLM<a href="https://fuzziebrain.com/content/deploy-and-use-fine-tuned-llms-in-oracle-apex#fine-tune-the-llm" class="hash-link" aria-label="Direct link to Fine-tune the LLM" title="Direct link to Fine-tune the LLM">​</a></h2>
<p>In OCI Data Science, you can probably use the <a href="https://conda.io/" target="_blank" rel="noopener noreferrer">Conda</a> environments <code>generalml_p38_cpu_v1</code> or <code>pytorch20_p39_gpu_v2</code> (if you have a GPU instance provisioned) for fine-tuning the model. However, for deployment, a GPU instance probably isn't necessary as the time needed to complete the inference is relatively much shorter.</p>
<p>If you do use the Oracle-provided Conda environments, please note that you might need to add any missing dependencies that are specific for working with Hugging Face models and datasets. For me, I opted to create a custom Conda environment as I had started out training the model on a GPU-powered compute instance. This environment was published and later used for the model deployment. Below is the Conda environment file I used.</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">channels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> conda</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">forge</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">dependencies</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> python</span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token plain">=3.8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> transformers</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> evaluate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> scikit</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">learn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> accelerate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> pillow</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> numpy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> pip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">pip</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> torch==2.1.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> oracle</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">ads</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">notebook</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<blockquote>
<p><strong>NOTE</strong></p>
<p>If you're running this in an OCI Data Science notebook, then the <code>jupyterlab</code> and <code>ipywidgets</code> dependencies can be omitted as they are automatically added when you create a conda environment using the <code>odsc</code> command.</p>
</blockquote>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> datasets </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> load_dataset</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> transformers </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> AutoTokenizer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> AutoModelForSequenceClassification</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> TrainingArguments</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Trainer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> numpy </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> np</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> evaluate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> torch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">tokenize_function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">examples</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> tokenizer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">examples</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"text"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> padding</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"max_length"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> truncation</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">compute_metrics</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">eval_pred</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    logits</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> labels </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> eval_pred</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    predictions </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> np</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argmax</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">logits</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> axis</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">compute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">predictions</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">predictions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> references</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">labels</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">device </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">device</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"cuda"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cuda</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">is_available</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">device</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"cpu"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">model_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"distilbert-base-uncased"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dataset </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> load_dataset</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"yelp_review_full"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tokenizer </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AutoTokenizer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">from_pretrained</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">model_name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">metric </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> evaluate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">load</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"accuracy"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tokenized_datasets </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> dataset</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tokenize_function</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> batched</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">small_train_dataset </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tokenized_datasets</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"train"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">shuffle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">seed</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">42</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">select</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">range</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">small_eval_dataset </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tokenized_datasets</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"test"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">shuffle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">seed</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">42</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">select</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">range</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">model </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AutoModelForSequenceClassification</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">from_pretrained</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">model_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> num_labels</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">model</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">to</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">device</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">training_args </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> TrainingArguments</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">output_dir</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"test_trainer"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                  evaluation_strategy</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"epoch"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                  num_train_epochs</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                  fp16</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">trainer </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Trainer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    model</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">model</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    args</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">training_args</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    train_dataset</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">small_train_dataset</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    eval_dataset</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">small_eval_dataset</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    compute_metrics</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">compute_metrics</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">trainer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">train</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I wanted to use this model in a different tenancy, and so, after fine-tuning the model in the Compute instance, I exported the model to be deployed in an OCI Data Science project. To save the model, I ran this function:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">model</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">save_pretrained</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"./mymodel"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The model artifacts are saved in the local directory <code>mymodel</code>. It contains the files <code>config.json</code> and <code>pytorch_model.bin</code>. A tarball was then created, and transferred to the OCI Data Science project where I would deploy the model.</p>
<p>The <code>distilbert-base-uncased</code> model is relatively small with only 67 million parameters, and thus required only about 4 GB of GPU memory for the training. Just for fun, I attempted to do the training on <code>bert-large-uncased</code> that is a large model with 336 million parameters. Here's how much memory it took.</p>
<p><img decoding="async" loading="lazy" alt="GPU status reported by nvidia-smi command." src="https://fuzziebrain.com/assets/images/gpu-status-4422868b3271e014bd79f3467a6c2235.png" width="1894" height="1356" class="img_ev3q"></p>
<p>Unfortunately, the accuracy wasn't as impressive even with more parameters. More work would be required before I could eventually use larger LLMs such as this.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="deploy-the-fine-tuned-llm">Deploy the Fine-tuned LLM<a href="https://fuzziebrain.com/content/deploy-and-use-fine-tuned-llms-in-oracle-apex#deploy-the-fine-tuned-llm" class="hash-link" aria-label="Direct link to Deploy the Fine-tuned LLM" title="Direct link to Deploy the Fine-tuned LLM">​</a></h2>
<p>The Oracle <a href="https://accelerated-data-science.readthedocs.io/" target="_blank" rel="noopener noreferrer">Accelerated Data Science</a> Python libraries provides the data scientists and machine learning engineers as suite of utility packages to load datasets from various sources on the OCI, and other repositories, perform machine learning and MLOps tasks, and many more. Since version 2.8.2, the ADS provides support for Hugging Face models using the class <em>HuggingFacePipelineModel</em>. Hugging Face pipelines are convenient facade for developers to use models for inference.</p>
<p>If, like me, you had performed the fine-tuning outside of the OCI Data Science notebook that you will use to prepare and deploy the model, then first upload the tarball containing the model's artifacts, and then extract the files. You can then use the following script to create a <em>Pipeline</em> and test out some predictions. If not, simply create the pipeline using the trained model.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> transformers </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> AutoTokenizer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> AutoModelForSequenceClassification</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pipeline</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tokenizer </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AutoTokenizer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">from_pretrained</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"distilbert-base-uncased"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">model </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AutoModelForSequenceClassification</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">from_pretrained</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"./mymodel"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pipe </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pipeline</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">task</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"sentiment-analysis"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> model</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">model</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tokenizer</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">tokenizer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">review </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">I recently purchased Tim Horton's Nespresso pods for use at home, and I</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">was impressed by the consistent quality of the coffee. The pods are easy</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">to store and use, making them a convenient option for busy individuals or</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">small households. However, the pods can be expensive, especially if you</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">are a frequent coffee drinker, and may not be available in all locations,</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">limiting your ability to enjoy Tim Horton's espresso on-the-go. Overall, I</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">would recommend Tim Horton's Nespresso pods as a convenient way to enjoy</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">high-quality espresso at home, but keep in mind the cost and availability</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">limitations.</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pipe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">review</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Here's a sample of the results:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">'label'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'LABEL_3'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'score'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.9998452663421631</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The next task involves using ADS to prepare, save, and deploy the model on OCI Data Science. The following code assumes that:</p>
<ol>
<li>A dynamic group has been created and includes both the notebook sessions and model deployment resource types.</li>
<li>An Identity and Access Management (IAM) policy has been created and contains the required statements to allow the dynamic group to create and manage the associated OCI resources.</li>
<li>The Conda environment to be used for the model deployment has been published to the assigned Object Storage bucket.</li>
</ol>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> ads</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> ads</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">common</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">model_metadata </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> UseCaseType</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> ads</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">model</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">framework</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">huggingface_model </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> HuggingFacePipelineModel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ads</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">set_auth</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">auth</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'resource_principal'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">artifact_dir </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"huggingface_pipeline_model_artifact"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">huggingface_pipeline_model </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> HuggingFacePipelineModel</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">estimator</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">pipe</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> artifact_dir</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">artifact_dir</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 1. Prepare</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">huggingface_pipeline_model</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prepare</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inference_conda_env</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"oci://conda-envs@*****/conda_environments/cpu/review/0.0.1/review_v0_0_1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inference_python_version</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"3.8"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    training_conda_env</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"oci://conda-envs@*****/conda_environments/cpu/review/0.0.1/review_v0_0_1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    use_case_type</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">UseCaseType</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SENTIMENT_ANALYSIS</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    force_overwrite</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 2. Save</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">huggingface_pipeline_model</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">save</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 3. Deploy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">huggingface_pipeline_model</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">deploy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    display_name</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"Demo Review Model"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    deployment_instance_shape</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"VM.Standard.E4.Flex"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    deployment_ocpus</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    deployment_memory_in_gbs</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">16</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 4. Print the invocation endpoint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"Endpoint: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">huggingface_pipeline_model</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">.</span><span class="token string-interpolation interpolation">model_deployment</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">.</span><span class="token string-interpolation interpolation">url</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">/predict"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>If everything ran as planned, then you should first see that the model has been saved to the model catalog in your OCI Data Science project.</p>
<p><img decoding="async" loading="lazy" alt="Hugging Face model saved in the OCI Data Science project." src="https://fuzziebrain.com/assets/images/model-saved-346bdffafdadfbf6e31e1f24552b9dc9.png" width="2880" height="1800" class="img_ev3q"></p>
<p>You should also see that the model has been deployed with the resources specified. The <em>Invoking your model</em> view provides the URL to call in your application.</p>
<p><img decoding="async" loading="lazy" alt="Model deployment details and endpoint for invoking the model." src="https://fuzziebrain.com/assets/images/model-deployed-2820d79824be4dbb49207c42f5e21a56.png" width="2880" height="1800" class="img_ev3q"></p>
<p>Once deployed, you may invoke the endpoint using <code>APEX_WEB_SERVICE</code> to perform inference on the submitted text. However, like all secure OCI REST APIs, calling this endpoint will require the same HTTP request signature to authenticate with the service. This is an easy task with APEX web credentials support for OCI API keys. If you are new to this, check out either this Oracle blog <a href="https://blogs.oracle.com/connect/post/better-file-storage-in-oracle-cloud" target="_blank" rel="noopener noreferrer">article</a>, or follow the steps outlined in this LiveLabs <a href="https://apexapps.oracle.com/pls/apex/r/dbpm/livelabs/view-workshop?wid=3558" target="_blank" rel="noopener noreferrer">workshop</a>.</p>
<p>Also, be sure to add an IAM policy with a statement similar to this one:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">allow group ApexAgents to {DATA_SCIENCE_MODEL_DEPLOYMENT_PREDICT} in compartment Demo</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The IAM user used by Oracle APEX should be added to this group. This would allow it to call the prediction endpoint for an model deployed in the specified compartment.</p>
<p>Create a page that allows users to enter a review, and then a page process that executes the PL/SQL code below, when the page is submitted.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_response clob</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_values apex_json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">t_values</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_prediction_label varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_request_headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Content-Type'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_request_headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'application/json'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_response :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">make_rest_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_credential_static_id </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'OCI_CREDENTIALS'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_http_method </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'POST'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_url </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'https://modeldeployment.us-phoenix-1.oci.customer-oci.com/ocid1.datasciencemodeldeployment.oc1.phx.***/predict'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_body </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'['</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> apex_json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stringify</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">:P4_CONTENT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">']'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_status_code </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">200</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apex_json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">parse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      p_values </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_values</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_source </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_response</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_prediction_label :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex_json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get_varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      p_values </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_values</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_path </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'prediction[1].label'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">insert</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">into</span><span class="token plain"> review</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      prod_id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> content</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> review_score</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> reviewed_by</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> reviewed_on</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">values</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      :P4_PROD_ID</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> :P4_CONTENT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> l_prediction_label</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">when</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'LABEL_0'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">when</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'LABEL_1'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">when</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'LABEL_2'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">when</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'LABEL_3'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">when</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'LABEL_4'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> :APP_USER</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> systimestamp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    raise_application_error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">20001</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Failed to process new review.'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>From the JSON response from calling <code>pipe(review)</code>, we know that it contains two attributes: <code>label</code> and <code>score</code>. The <code>label</code> is what we are after, and thus, we extract the value of <code>prediction[1].label</code> using the <code>APEX_JSON</code> package. Sometimes, adding the confidence score can be helpful to the user.</p>
<p>Here's a simple demonstration of the fine-tuned model applied:</p>
<div class="container_yPU9"><iframe width="560" height="315" src="https://www.youtube.com/embed/YlKM2vUrc0Q" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-about-the-oci-ai-language-service">What About the OCI AI Language Service<a href="https://fuzziebrain.com/content/deploy-and-use-fine-tuned-llms-in-oracle-apex#what-about-the-oci-ai-language-service" class="hash-link" aria-label="Direct link to What About the OCI AI Language Service" title="Direct link to What About the OCI AI Language Service">​</a></h2>
<p>If you are familiar with Oracle's suite of AI Service, there is the OCI <a href="https://www.oracle.com/artificial-intelligence/language/" target="_blank" rel="noopener noreferrer">Language</a> service that provides "sentiment analysis" using a pre-trained model. This is an easy-to-use API, and I have previously written on how to use it for <a href="https://fuzziebrain.com/content/revolutionising-language-learning">performing translation tasks</a>.</p>
<p><img decoding="async" loading="lazy" alt="Sentiment analysis results from invoking the OCI Language pre-trained model." src="https://fuzziebrain.com/assets/images/oci-ai-language-results-9e4d6745bd2b0bc951c4ebee414c431f.png" width="2880" height="1800" class="img_ev3q"></p>
<p>However, with the fine-tuned LLM, my goal was to provide a review score, ranging from 1 to 5, based on the reviewer's comments. The OCI Language pre-trained model returns polarity (positive, negative, mixed, or neutral) scores at the document, sentence, and aspect levels. And at this time, there isn't a custom model that I could train for sentiment analysis.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://fuzziebrain.com/content/deploy-and-use-fine-tuned-llms-in-oracle-apex#summary" class="hash-link" aria-label="Direct link to Summary" title="Direct link to Summary">​</a></h2>
<p>The OCI Data Science platform is a great complement to Oracle APEX when it comes to training and integrating machine learning models for specialized tasks. Both the Hugging Face and Oracle ADS libraries make it very easy for a novice like me to quickly build applications with some intelligence. I hope it excites you as much as it does to me. If you have a use case where this combination of technology might help, I'd like to talk. You may reach out to me using this <a href="https://cal.com/fuzziebrain/iaas-consult" target="_blank" rel="noopener noreferrer">form</a>.</p>
<blockquote>
<p><strong>Credits</strong></p>
<ul>
<li>Hugging Face for the comprehensive documentation and tutorials, and making available the datasets and models used in this little experiment.</li>
<li>My employer, <a href="https://insum.ca/" target="_blank" rel="noopener noreferrer">Insum</a>, for kindly sponsoring the GPU resources. It can be rather challenging to get them on the OCI, and I hope that can change soon.</li>
<li>Banner image generated using Stability AI's <a href="https://huggingface.co/stabilityai/stable-diffusion-xl-base-1.0" target="_blank" rel="noopener noreferrer">Stable Diffusion</a> model.</li>
</ul>
</blockquote>]]></content:encoded>
            <category>large language models</category>
            <category>llms</category>
            <category>machine learning</category>
            <category>oci</category>
            <category>data science</category>
            <category>python</category>
            <category>jupyter</category>
            <category>conda</category>
            <category>oracle apex</category>
        </item>
        <item>
            <title><![CDATA[Predict the Rugby World Cup 2023 Winner]]></title>
            <link>https://fuzziebrain.com/content/predict-the-rugby-world-cup-2023-winner</link>
            <guid>https://fuzziebrain.com/content/predict-the-rugby-world-cup-2023-winner</guid>
            <pubDate>Thu, 19 Oct 2023 22:15:00 GMT</pubDate>
            <description><![CDATA[Create an Oracle APEX application that predicts the winner of the Rugby World Cup 2023 matches using machine learning models trained and deployed using the OCI Data Science platform.]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="Woman in a crystal ball" src="https://fuzziebrain.com/assets/images/woman-in-crystal-ball-196996a4ae30f625defb6121c704b8bb.png" width="1280" height="720" class="img_ev3q"></p>
<p>This has been one of those weeks where I couldn't wait to wake up and get to work. Just last week, <a href="https://www.linkedin.com/in/luc-demanche-17107b2" target="_blank" rel="noopener noreferrer">Luc Demanche</a> threw me a challenge and asked that I help develop an <a href="https://apex.oracle.com/" target="_blank" rel="noopener noreferrer">Oracle APEX</a> application that could be used to predict the winner of the <a href="https://www.rugbyworldcup.com/2023/" target="_blank" rel="noopener noreferrer">Rugby World Cup 2023</a> (RWC2023). I couldn't resist the challenge!</p>
<p>The first challenge we had attempting to predict the outcome of a sports match was data. As with any machine learning (ML), obtaining ample high quality training data greatly influences the accuracy of the prediction models. This can sometimes be hard to find as professional sports is a lucrative market, and the highest quality data, such as player statistics, game performance, and match history, are typically collected, managed, and made available through paid channels. Something that I didn't have access to.</p>
<p>Fortunately, my French teammate <a href="https://www.linkedin.com/in/louis-moreaux" target="_blank" rel="noopener noreferrer">Louis Moreaux</a> stumbled on a <a href="https://www.kaggle.com/" target="_blank" rel="noopener noreferrer">Kaggle</a> dataset that contained historical match data that was scrapped from <a href="https://wikipedia.org/" target="_blank" rel="noopener noreferrer">Wikipedia</a> and aggregated by a contributor. The dataset contained minimal data on different rugby matches played since 1871. At first glance, there wasn't really much to work on, but fortunately, another contributor had presented a notebook that demonstrated how we can enrich the data and help better predict the match outcomes. This included calculating features such as a team's ranking point and form. This was good enough for the proof-of-concept application that we needed to build.</p>
<p>It was only a few months ago that I sat for and passed the <a href="https://education.oracle.com/oracle-cloud-infrastructure-data-science-2023-professional/pexam_1Z0-1110-23" target="_blank" rel="noopener noreferrer">Oracle Cloud Infrastructure Data Science 2023 Professional</a>, so this was the perfect opportunity to put training to practice!</p>
<p>Without any hesitation, I provisioned a new <a href="https://oracle.com/cloud" target="_blank" rel="noopener noreferrer">Oracle Cloud Infrastructure</a> (OCI) <a href="https://www.oracle.com/artificial-intelligence/data-science/" target="_blank" rel="noopener noreferrer">Data Science</a> project, and worked on training the prediction model using a notebook session. The notebook session is Oracle's managed <a href="https://jupyter.org/" target="_blank" rel="noopener noreferrer">Jupyter</a> environment for data scientists to perform exploratory data analysis, data visualization, data cleaning and preparation, model training, validation, and deployment. I also utilise the powerful <a href="https://accelerated-data-science.readthedocs.io/" target="_blank" rel="noopener noreferrer">Oracle Accelerated Data Science</a> (ADS) Python library that allows me to perform a wide variety of activities including interfacing with the OCI, accessing data stored in an <a href="https://oracle.com/autonomousdatabase" target="_blank" rel="noopener noreferrer">Oracle Autonomous Database</a>, managing and deploying models. Just to name a few.</p>
<p>Once deployed, using the ML model in a web application is performed by invoking its HTTP endpoint. Of course, this being an OCI managed service, calls to the endpoints require signing. This is no different from calling any OCI REST APIs, and relies on creating the necessary OCI Identity and Access Management (IAM) users, groups, policies, and generating the required API keys. Oracle APEX simplifies the signing process, and you will only need to create the required APEX web credentials and reference its static identifier during the web service call. Below is an example PL/SQL snippet:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  c_model_url constant varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">32767</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'https://modeldeployment.eu-paris-1.oci.customer-oci.com/ocid1.datasciencemodeldeployment.oc1.eu-paris-1.amaaaaa.../predict'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_ranking_points_home ml_team</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ranking_point</span><span class="token operator" style="color:#393A34">%</span><span class="token keyword" style="color:#00009f">type</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_ranking_points_away ml_team</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ranking_point</span><span class="token operator" style="color:#393A34">%</span><span class="token keyword" style="color:#00009f">type</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_home_form ml_result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">home_form</span><span class="token operator" style="color:#393A34">%</span><span class="token keyword" style="color:#00009f">type</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_away_form ml_result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">home_form</span><span class="token operator" style="color:#393A34">%</span><span class="token keyword" style="color:#00009f">type</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_request_body clob</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_response clob</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">-- Code to retrieve the required input values based on the teams selected.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_request_body :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     apex_json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stringify</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       json_array</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'neutral'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'world_cup'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ranking_points_home'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> l_ranking_points_home</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ranking_points_away'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> l_ranking_points_away</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'home_form'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> l_home_form</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'away_form'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> l_away_form</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_request_headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Content-Type'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_request_headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'application/json'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_response :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">make_rest_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_url </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> c_model_url</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_http_method </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'POST'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_body </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_request_body</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_credential_static_id </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> pkg_oci_common</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_credential_static_id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  :P1_WINNING_TEAM :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">when</span><span class="token plain"> json_value</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_response</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'$.prediction[0]'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'home_win'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        :P1_HOME_TEAM</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        :P1_AWAY_TEAM</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Here's the outcome and predictions for the next two <a href="https://www.rugbyworldcup.com/2023/matches" target="_blank" rel="noopener noreferrer">matches</a> to be held this week:</p>
<div class="container_yPU9"><iframe width="560" height="315" src="https://www.youtube.com/embed/B9mOhTp6TIs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe></div>
<p>Let's see how our ML model fares this week.</p>
<p>Do take the predicted outcomes with a huge pinch of salt. I did not do sufficient justice to the tremendous amount of work required to train a good ML model. In the spirit of rapid application development, we built this demo application within days, but it clearly demonstrates how we can we can train, deploy, and perform inferences using machine learning models with minimal need to manage the underlying infrastructure. I have, unfortunately, left out much of the details as I'm rushing to have this post published before the semi-final games tomorrow. However, you can expect more details on how to do this on your own, so stay tuned!</p>
<blockquote>
<p><strong>Credits</strong></p>
<p>Banner image generated using Stability AI's <a href="https://huggingface.co/stabilityai/stable-diffusion-xl-base-1.0" target="_blank" rel="noopener noreferrer">Stable Diffusion</a> model.</p>
</blockquote>]]></content:encoded>
            <category>machine learning</category>
            <category>artificial intelligence</category>
            <category>data science</category>
            <category>oci</category>
            <category>oracle cloud</category>
            <category>oracle apex</category>
            <category>python</category>
        </item>
        <item>
            <title><![CDATA[Closing the Era of the APEX Challenge Coin]]></title>
            <link>https://fuzziebrain.com/content/closing-the-era-of-the-apex-challenge-coin</link>
            <guid>https://fuzziebrain.com/content/closing-the-era-of-the-apex-challenge-coin</guid>
            <pubDate>Wed, 11 Oct 2023 06:00:00 GMT</pubDate>
            <description><![CDATA[Saying goodbye is hard.]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="Joel and Friends" src="https://fuzziebrain.com/assets/images/joel-and-friends-0b987932dec820c145c9add07d6121f9.jpg" width="1800" height="837" class="img_ev3q"></p>
<p>I hope Joel doesn't mind that I used this image here to commemorate <a href="https://twitter.com/search?q=%23JoelKallmanDay" target="_blank" rel="noopener noreferrer">#JoelKallmanDay</a>. This picture was <a href="https://twitter.com/joelkallman/status/1192268209291976704" target="_blank" rel="noopener noreferrer">posted</a> by our dear friend, Joel Kallman, in 2019. Shortly after Mike Hichwa was presented with the first coin in the first series of the <a href="https://fuzziebrain.com/content/id/1727">Oracle APEX Challenge Coin</a>.</p>
<p>I first approached Joel about this project on Thursday, January 3, 2019, at 3.05 PM Pacific Time. Presented the initial sketch of the coin, and sought his permission to use the Oracle APEX logo on the main face of the coin. Below is the initial sketch of both sides of the coin.</p>
<p><img decoding="async" loading="lazy" alt="The initial sketch of the Oracle APEX challenge coin in 2019." src="https://fuzziebrain.com/assets/images/artwork-original-06607c09988316cbefcc82775750ba80.png" width="652" height="270" class="img_ev3q"></p>
<p>A minute later, I received an out-of-office reply saying:</p>
<blockquote>
<p>Thank you for your message.</p>
<p>I am on vacation until January 7, 2019 and will be unable to respond to email or voicemail during this period.  Happy New Year!</p>
<p>Joel</p>
</blockquote>
<p>At 5.44 PM that day, I unexpectedly received an reply from Joel granting me the needed permission to use the logo and included some suggestions for improvements. These were his exact words, double spaces after the period included.</p>
<blockquote>
<p>Please forgive me for offering my opinion where one wasn't solicited, but I have a suggestion about some of the words you have on the coin.  Two words seem to be inconsistent with the 4 others - namely  STANDARDS and ON-TIME.  While the other 4 words seem to describe APEX itself, these other two really don't.  How about RELIABLE or SCALABLE or PROVEN or GLOBAL or something like that?</p>
</blockquote>
<p>I finally settled on the six words that you see on the coin today, and they include Joel's suggestions of "RELIABLE" and "PROVEN". And that's what he was. I may be a nobody, but even on while on vacation, he took personal time to think, optimise, suggest, and respond to my email.</p>
<p><img decoding="async" loading="lazy" alt="The updated sketch before it was sent to the vendor for the final artwork." src="https://fuzziebrain.com/assets/images/artwork-updated-c1e89f5dc8106f35cd96fad9bf0c49a9.png" width="700" height="292" class="img_ev3q"></p>
<p>I often remind people with a coin today, that they hold a piece of him. You "make Oracle great again" by adding value to people's lives through the magic you do with Oracle APEX.</p>
<p>The final two coins were presented to <a href="https://www.linkedin.com/in/paige-hanssen-6a8530109" target="_blank" rel="noopener noreferrer">Paige Hanssen</a> and <a href="https://www.linkedin.com/in/sonnemeyer" target="_blank" rel="noopener noreferrer">Sonja Meyer</a> at the recently concluded <a href="https://www.oracle.com/cloudworld" target="_blank" rel="noopener noreferrer">Oracle CloudWorld 2023</a>. Congratulations to the both of them!</p>
<p>Like everything, there's an alpha and omega. I hereby proclaim that the Oracle APEX Challenge Coin project has come to a successful close. Our service, however, continues.</p>
<div class="container_yPU9"><iframe width="560" height="315" src="https://www.youtube.com/embed/Q7WrvOnBpIg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe></div>]]></content:encoded>
            <category>orclapex</category>
            <category>challenge coin</category>
            <category>gratitude</category>
            <category>joelkallmanday</category>
        </item>
        <item>
            <title><![CDATA[Speaking AI to Your Oracle Database]]></title>
            <link>https://fuzziebrain.com/content/speaking-ai-to-your-oracle-database</link>
            <guid>https://fuzziebrain.com/content/speaking-ai-to-your-oracle-database</guid>
            <pubDate>Sat, 23 Sep 2023 23:00:00 GMT</pubDate>
            <description><![CDATA[A woman speaking to an Oracle.]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="A woman speaking to an Oracle." src="https://fuzziebrain.com/assets/images/speak-to-the-oracle-7c1a0599df189e350c37b55251e99abe.png" width="1280" height="720" class="img_ev3q"></p>
<p>One of the key highlights at <a href="https://www.oracle.com/cloudworld/" target="_blank" rel="noopener noreferrer">Oracle Cloudworld 2023</a> is general availability of <a href="https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/sql-generation-ai-autonomous.html" target="_blank" rel="noopener noreferrer"><em>Select AI</em></a> feature that allows anyone to query the <em>Oracle Database</em> using natural language. This is likely made possible with a template wrapping the database metadata with the prompt, and then calling either the <a href="https://openai.com/" target="_blank" rel="noopener noreferrer"><em>OpenAI</em></a> or <a href="https://cohere.com/" target="_blank" rel="noopener noreferrer"><em>Cohere</em></a> APIs to generate the intended text.</p>
<p>This feature is already available on an <em>Oracle Autonomous Database</em> (ADB), and yes, that includes the <em>Always Free</em> instances that I use for the managing the <a href="https://apex.oracle.com/" target="_blank" rel="noopener noreferrer"><em>Oracle APEX</em></a> <a href="https://fuzziebrain.com/content/id/1727"><em>Challenge Coin</em></a> registry. I know everyone's eager to try it out, and so am I! So here's a quick set of instructions to get you going.</p>
<p>The first thing that you'll need to do is make sure your application schema has the appropriate rights to use this feature. As the ADB <em>ADMIN</em> user, first add the Access Control Entry (ACE) for using the intended API. Also, grant the user access to both the <code>DBMS_CLOUD</code> and new <code>DBMS_CLOUD_AI</code> packages.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">define schema_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'core'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dbms_network_acl_admin</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append_host_ace</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    host </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'api.cohere.ai'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ace </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> xs$ace_type</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        privilege_list </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> xs$name_list</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'http'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> principal_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> upper</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'&amp;schema_name'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> principal_type </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> xs_acl</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ptype_db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">grant</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">execute</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> dbms_cloud </span><span class="token keyword" style="color:#00009f">to</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">schema_name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">grant</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">execute</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> dbms_cloud_ai </span><span class="token keyword" style="color:#00009f">to</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">schema_name</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<blockquote>
<p><strong>NOTE:</strong></p>
<p>For OpenAI, the <code>host</code> value would be <code>api.openai.com</code>.</p>
</blockquote>
<p>Next, as the user, create a credential for storing the required credentials for accessing the target API. For Cohere, you will first need to sign up for an account. For development use, access to the API is free, and an API key should have already been generated for you. A <code>username</code> is not required, and thus I replaced with the name associated with the API key.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dbms_cloud</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create_credential</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    credential_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'COHERE_CRED'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> username </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'default'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> password </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'***'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Create a profile using the credential.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dbms_cloud_ai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create_profile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    profile_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'COHERE'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> attributes </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'provider'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'cohere'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'credential_name'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'COHERE_CRED'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'object_list'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> json_array</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'owner'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'core'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'name'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'coin'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The credential and profile name can be anything that makes sense to you. However, when creating the profile, the <code>provider</code> attribute is required and must be either <code>openai</code> or <code>cohere</code>. The <code>object_list</code> attribute provides you the opportunity to scope what database objects should be included. You may optionally specify the <code>owner</code> and not a <code>name</code> to included <strong>all</strong> objects in the owner's schema. There are likely limits to how much data you might want to include in a request, and should also keep in mind that the metadata is submitted to an external system.</p>
<p>Other profile attributes include:</p>
<ul>
<li><code>model</code></li>
<li><code>temperature</code></li>
<li><code>max_tokens</code></li>
<li><code>stop_tokens</code></li>
</ul>
<p>This allows further adjustments to how the <em>Generative AI</em> model behaves.</p>
<p>Finally, simply set the user's profile for performing the <em>Select AI</em> tasks:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dbms_cloud_ai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">set_profile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    profile_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'COHERE'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>With that, I can now ask:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">define question </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'how many coins where created for the APEX community?'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> ai runsql dbms_assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">enquote_literal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'&amp;question'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I correctly received the result <code>200</code>! But that's way too easy for this <em>Large Language Model</em> (LLM). So, I thought I'll add all the objects in the schema, since it isn't too big.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dbms_cloud_ai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">drop_profile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'COHERE'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dbms_cloud_ai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create_profile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    profile_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'COHERE'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> attributes </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'provider'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'cohere'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'credential_name'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'COHERE_CRED'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'object_list'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> json_array</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'owner'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'core'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token comment" style="color:#999988;font-style:italic">--, key 'name' value 'coin'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And then I asked, "How many coins have been sponsored?". It said, "0", and that is incorrect! To figure out why, I used the <em>action</em> keyword <em>showsql</em> as opposed to <em>runsql</em>.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">define question </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'how many coins have been sponsored?'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> ai showsql dbms_assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">enquote_literal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'&amp;question'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Yielding the SQL statement:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">COUNT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"CORE"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token string" style="color:#e3116c">"SHIPMENT"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"SHIPMENT_ID"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">IN</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"SHIPMENT_ID"</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"CORE"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token string" style="color:#e3116c">"SPONSOR_EVENT"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">WHERE</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"SPONSORSHIP_TYPE"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'SPONSORED'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And this could be wrong for reasons as follows:</p>
<ul>
<li>There is no <code>SPONSORSHIP_TYPE</code> with the value <code>SPONSORED</code>. I wonder if having a lookup table might have helped, but I do have a <code>CHECK</code> constraint that specifies what values are allowed.</li>
<li>It might not have understood the intended meaning of the table name <code>SPONSOR_EVENT</code>, but I don't always name tables such they are semantically accurate. And of course, having lived through the age of 30-character limits on object names, table names might be missing vowels or word separators.</li>
<li>My data model for this project might not have been optimum. <code>SHIPMENT</code> was about shipments, but not all sponsor events involved a shipping event. They were delivered personally.</li>
</ul>
<p>I would have expected the <code>narrate</code> to explain how it had derived the SQL statement it generated.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> ai narrate dbms_assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">enquote_literal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'&amp;question'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>However, what I got was a different SQL statement. And the same with <code>chat</code>.</p>
<p>Finally, the next question I had was, "Can I use this in APEX?".</p>
<p><img decoding="async" loading="lazy" alt="Using &amp;quot;Select AI&amp;quot; in Oracle APEX" src="https://fuzziebrain.com/assets/images/select-ai-in-apex-fc8cc942719418686f6246ed5d55df53.png" width="2560" height="360" class="img_ev3q"></p>
<p>Maybe not yet?</p>
<p>I don't believe that, today, there is a simply way to "plugin" this new feature. The outputs of the query can be as dynamic as the inputs. Maybe a blend of using the <code>APEX_EXEC</code> package and <code>DBMS_CLOUD_AI.GENERATE</code> function? I wonder. Also, currently, I don't believe there's an APEX PL/SQL API that would allow us to create a report dynamically. Perhaps that might change some day. <strong>If you have thoughts about this, please reach out</strong>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://fuzziebrain.com/content/speaking-ai-to-your-oracle-database#summary" class="hash-link" aria-label="Direct link to Summary" title="Direct link to Summary">​</a></h2>
<p>This technology is still very much in its infancy, but exciting nonetheless. Though I am on the fence if it's ready for prime time. I wouldn't put this in front of an uninformed user yet. To be fair, I have not tried this with the OpenAI LLM models. Maybe it'll do better. Or perhaps, I need the LLMs to suggest improvements to my data models. ;-) And that brings me to the final point - semantics! In the era of big data and machine learning, one concept that often gets brushed away is providing rich semantics to data and metadata. We have had OCI Data Catalog for a while now... how many of us actually use it? Or adding proper comments to the schema metadata, which was clearly lacking in my toy project. If that was included in the prompt, then perhaps I would have had better results.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="update-2023-09-24">Update [2023-09-24]<a href="https://fuzziebrain.com/content/speaking-ai-to-your-oracle-database#update-2023-09-24" class="hash-link" aria-label="Direct link to Update [2023-09-24]" title="Direct link to Update [2023-09-24]">​</a></h2>
<p>So, I was still trying to get <em>Select AI</em> to give me the correct answer to the question:</p>
<blockquote>
<p>How many coins have been sponsored?</p>
</blockquote>
<p>I did find the answer to my earlier question about whether or not comments were included in the prompt. There is one more profile attribute that can be added to the profile. The <code>comments</code> attribute supplies the LLM with comments in the <code>sys.all_col_comments</code> view. Unfortunately, table comments don't seem to be included. Adding comments describing what the tables and views represented didn't seem to help. I couldn't get it to ignore a view that was never going to tell you if a coin has been sponsored. It was also creating predicates on columns that didn't exist, so the third attribute I had tweaked was to specify what database objects are in the <code>object_list</code>.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_objects_list_jsonstr varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">32767</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dbms_cloud_ai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">drop_profile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'COHERE_WITH_COMMENTS'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  exception</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">when</span><span class="token plain"> others </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">null</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> json_arrayagg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'owner'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'core'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'name'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> table_name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">into</span><span class="token plain"> l_objects_list_jsonstr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> user_tables</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dbms_cloud_ai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create_profile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    profile_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'COHERE_WITH_COMMENTS'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> attributes </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'provider'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'cohere'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'credential_name'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'COHERE_CRED'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'comments'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'temperature'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'object_list'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> l_objects_list_jsonstr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I still do have the correct answer. :-(</p>]]></content:encoded>
            <category>generative ai</category>
            <category>genai</category>
            <category>artificial intelligence</category>
            <category>machine learning</category>
            <category>sql</category>
            <category>autonomous database</category>
            <category>llm</category>
            <category>large language models</category>
            <category>oracle apex</category>
            <category>orclapex</category>
        </item>
        <item>
            <title><![CDATA[Train an AI Model to Recognize Oracle APEX Challenge Coins]]></title>
            <link>https://fuzziebrain.com/content/train-an-ai-model-to-recognize-oracle-apex-challenge-coins</link>
            <guid>https://fuzziebrain.com/content/train-an-ai-model-to-recognize-oracle-apex-challenge-coins</guid>
            <pubDate>Mon, 04 Sep 2023 23:00:00 GMT</pubDate>
            <description><![CDATA[Black Star Line Stock Certificate]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="Black Star Line Stock Certificate" src="https://fuzziebrain.com/assets/images/stock-certificate-1280-b627af49b4210c615877ecaaaddc9e2f.jpg" width="1280" height="988" class="img_ev3q"></p>
<p><a href="https://douggault.com/" target="_blank" rel="noopener noreferrer">Doug Gault</a> had suggested a while ago that I could bring more awareness to the <a href="https://fuzziebrain.com/content/id/1727">Oracle APEX Challenge Coin</a> project if I had an <a href="https://apex.oracle.com/" target="_blank" rel="noopener noreferrer">Oracle APEX</a> application that plots the location of each sponsored coin on a world map. I agree. However, aside from a lack of time, I had also wanted to find interesting ways for awardees to submit their claim of ownership. Over the last week, I had worked on making this dream of a "claims" map a reality with the use of the <a href="https://oracle.com/cloud" target="_blank" rel="noopener noreferrer">Oracle Cloud Infrastructure</a> (OCI) <a href="https://www.oracle.com/artificial-intelligence/vision/" target="_blank" rel="noopener noreferrer">Vision</a> AI service, more specifically, its custom model training feature.</p>
<p>Here's an early preview of the claims process in the <em>Claim My Oracle APEX Challenge Coin</em> application.</p>
<div class="container_yPU9"><iframe width="560" height="315" src="https://www.youtube.com/embed/a0UErWOPUzw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="background">Background<a href="https://fuzziebrain.com/content/train-an-ai-model-to-recognize-oracle-apex-challenge-coins#background" class="hash-link" aria-label="Direct link to Background" title="Direct link to Background">​</a></h2>
<p>For those new to Oracle APEX, and those who have not been acquainted with the Oracle APEX Challenge Coin, it was a project I had started in early 2019 to support and acknowledge the value that developers bring to the world community. I had designed and minted a total of 200 coins over two years, and have since distributed almost all of them. As of now, there are only two more coins available for sponsorship. Read the original <a href="https://fuzziebrain.com/content/id/1727">article</a> for more details and how to sponsor these challenge coins.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="oci-vision">OCI Vision<a href="https://fuzziebrain.com/content/train-an-ai-model-to-recognize-oracle-apex-challenge-coins#oci-vision" class="hash-link" aria-label="Direct link to OCI Vision" title="Direct link to OCI Vision">​</a></h2>
<p>The OCI Vision is one of several AI services available on the OCI. Three pre-trained models are available for developers to create intelligent applications that need to perform computer vision tasks, such as, image and text recognition. Using the pre-trained models, developers can use the OCI REST API to perform image classifications, object detections, and text detections. It also included document processing tasks like key-value pair extraction, and document classification. However, it has since been spun off to a separate offering called <a href="https://www.oracle.com/artificial-intelligence/document-understanding/" target="_blank" rel="noopener noreferrer">Document Understanding</a>. If you are interested to know more about using Document Understanding in Oracle APEX, please check out this <a href="https://apexapps.oracle.com/pls/apex/r/dbpm/livelabs/view-workshop?wid=3728" target="_blank" rel="noopener noreferrer">Oracle LiveLabs workshop</a> that I published in July, 2023.</p>
<p>OCI Vision uses <a href="https://wikipedia.org/wiki/Deep_learning" target="_blank" rel="noopener noreferrer">deep learning</a> (DL) approaches, and one of the key features of DL is the ability to perform <a href="https://wikipedia.org/wiki/Transfer_learning" target="_blank" rel="noopener noreferrer">transfer learning</a>. <em>TL;DR</em>, transfer learning is process that uses pre-trained, generalist models, and then perform additional training over specialised datasets. This significantly reduces the amount of time, and training data, needed to train a machine learning (ML) model for specific operational needs. For example, recognising an Oracle APEX Challenge Coin! The OCI Vision's custom model feature allows developers to fine-tune and train highly specialised computer vision (CV) models to perform either image classification or object detection tasks.</p>
<p>In this project, I will train a custom model for detecting the front and back sides of the coin.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="prepare-the-dataset">Prepare the Dataset<a href="https://fuzziebrain.com/content/train-an-ai-model-to-recognize-oracle-apex-challenge-coins#prepare-the-dataset" class="hash-link" aria-label="Direct link to Prepare the Dataset" title="Direct link to Prepare the Dataset">​</a></h2>
<p>Availability of large and high quality datasets are crucial to training good CV models that have high precision and recall. Since the project was launched, recipients have spontaneously posted their cherished gifts on social media. Hence, my first challenge was to scour the Internet for these photographs. There are only 200 coins ever minted, and not every recipient has posted a photo of their coin on social media. Thankfully, I was able to harvest about slightly over one hundred of such images. They include photos of the front and back of the coin, different lighting scenes, pose, and proportional sizes.</p>
<p>A prerequisite for performing custom model training is to create a data set in the  OCI <a href="https://www.oracle.com/artificial-intelligence/data-labeling/" target="_blank" rel="noopener noreferrer">Data Labeling</a> service. This is an OCI managed service that lets data scientists and developers to curate and label data that will be used to perform supervised ML training. Creating an image classification and object detection models is a supervised learning task.</p>
<p>Before creating the dataset, assemble and upload all the images to an OCI <a href="https://www.oracle.com/cloud/storage/object-storage/" target="_blank" rel="noopener noreferrer">Object Storage</a> bucket. Once the images have been staged, the dataset created, and the records generated, you will need to work through all the images to mark and label the dataset records. Here's a quick demonstration of the data labelling process for object detection use:</p>
<div class="container_yPU9"><iframe width="560" height="315" src="https://www.youtube.com/embed/gYtKz2phnsQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="custom-model-training">Custom Model Training<a href="https://fuzziebrain.com/content/train-an-ai-model-to-recognize-oracle-apex-challenge-coins#custom-model-training" class="hash-link" aria-label="Direct link to Custom Model Training" title="Direct link to Custom Model Training">​</a></h2>
<p>As mentioned earlier, the OCI Vision custom models feature allows data scientists and developers to easily fine-tune a inference model for specialised use cases. After creating the dataset and labelling the 100+ images, next step is to create a project and then a custom model. Choose the appropriate model type for your business use case. For this application, I chose <em>Object detection</em>, and then moved on to select the dataset I had created with the Data Labeling service.</p>
<p><img decoding="async" loading="lazy" alt="Choose model type." src="https://fuzziebrain.com/assets/images/choose-model-type-b9fca9a6eb8a811cb7169a5f86e0b0d5.png" width="1280" height="400" class="img_ev3q"></p>
<p>There are more options to consider, including the desired training duration time. There are three options available: recommended, quick, and custom modes. In the early phases of the model training, I'd recommend using the quick mode, just to get a sense of how well the model might perform, given the quality and quantity of labelled samples in your dataset.</p>
<p>After the training is completed, the model detail will provide you the necessary metrics to decide if you need to repeat the process. The <em>precision</em> and <em>recall</em> are measurements typically used for judging the performance of ML models. If your model scores poorly, consider sourcing additional data for training and testing, or applying image transformations. Increasing the training duration may help, but sometimes, over-fitting a ML model may yield poorer results.</p>
<p>For convenience, in the lower half of the custom model details page, you will find a simple user interface for applying the custom model to source images.</p>
<div class="container_yPU9"><iframe width="560" height="315" src="https://www.youtube.com/embed/r38VySvkkHA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-the-custom-model-in-an-application">Using the Custom Model in an Application<a href="https://fuzziebrain.com/content/train-an-ai-model-to-recognize-oracle-apex-challenge-coins#using-the-custom-model-in-an-application" class="hash-link" aria-label="Direct link to Using the Custom Model in an Application" title="Direct link to Using the Custom Model in an Application">​</a></h2>
<p>The custom model is trained to recognise both the front and back of an Oracle APEX challenge coin. However, for this application, I will only need it to detect the back side of the coin. In addition to object detection, I will also have OCI Vision to perform text detection (optical character recognition), and extract the unique serial number found on every coin.</p>
<p>The flow of the application is as follows:</p>
<ol>
<li>User begins a new claim using a wizard.</li>
<li>User uploads a photo of the back of the coin, and chooses the unique serial number. A unique claims identifier is issued, and together with the submitted information, it is added to an APEX collection.</li>
<li>In the next step, the user will optionally provide a display name that will be rendered in the map. The user will also use the Oracle APEX geocoded address functionality to set the estimated location of the coin.</li>
<li>User confirms the details to be submitted.</li>
<li>Upon confirmation, the claim is created in the database.</li>
<li>The uploaded image is stored in the designated OCI Object Storage bucket.</li>
<li>The claim is then evaluated using the OCI Vision using its OCI REST API. This involves an HTTP <code>POST</code> to the endpoint: <code>https://vision.aiservice.{{REGION}}.oci.oraclecloud.com/20220125/actions/analyzeImage</code> (substituted <code>{{REGION}}</code> with the desired region).</li>
<li>The results of the REST call is evaluated. If the desired label and serial number text is found, with the minimum confidence score, then the claim's validation status is marked <code>PASS</code>. Otherwise, it is marked <code>FAIL</code>.</li>
<li>The map is refreshed, only displaying claims where the validation status value is <code>PASS</code>.</li>
</ol>
<p>This <em>AnalyzeImage</em> endpoint expects a JSON payload described by the <em>AnalyzeImagesDetails</em>. This payload is sent in the request body. Here's what it looks like:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"compartmentId": "ocid1.compartment.oc1..&lt;REDACTED&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"image": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"source": "OBJECT_STORAGE",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"namespaceName": "&lt;REDACTED&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"bucketName": "claims-bucket",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"objectName": "submission_20230904011039.jpg"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"features": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			"modelId": "ocid1.aivisionmodel.oc1.phx.&lt;REDACTED&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			"featureType": "OBJECT_DETECTION",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			"maxResults": 10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			"featureType": "TEXT_DETECTION",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			"maxResults": 10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>image</code> attribute describes the image source, including the bucket name, and unique object name. Next, the <code>features</code> attribute is an array of JSON objects describing the type(s) of image analysis to perform. The first feature is of type <code>OBJECT_DETECTION</code>. Specifying the <code>modelId</code> attribute containing the custom model's <em>OCID</em>, will instruct the endpoint to use the custom model, instead of the pre-trained object detection model. The second calls the pre-trained text detection model.</p>
<p>A response for a valid claim would look like this (truncated for readability):</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"imageObjects": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			"name": "Back",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			"confidence": 0.94813126,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"imageText": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"words": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"text": "A0035",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"confidence": 0.9957846,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>imageObjects</code> attribute returns an array of up to 10 (set in the <code>maxResults</code> attribute of the request body) objects detected. Each contains the label name and corresponding confidence score. Similarly, the <code>imageText</code> returns an array of words (and lines). Each containing the text extracted, and its confidence score. These findings are then used to make an initial assessment if the claim is valid.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://fuzziebrain.com/content/train-an-ai-model-to-recognize-oracle-apex-challenge-coins#summary" class="hash-link" aria-label="Direct link to Summary" title="Direct link to Summary">​</a></h2>
<p>The application is still very much in its infancy. So far, working on this project has not only introduced me to the world of OCI Vision custom model training, but also some newer Oracle APEX features that I have yet to use. These includes the Map region and Geocoded Address page item. Next, I'd like to use the <em>Approvals Component</em> to implement a simple workflow that adds a human reviewer to make a final determination, and approve the claim.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p><a href="https://commons.wikimedia.org/wiki/File:Black_Star_Line_Stock_Certificate.jpg" target="_blank" rel="noopener noreferrer">Picture</a> from the Wikimedia Commons.</p></div></div>]]></content:encoded>
            <category>artificial intelligence</category>
            <category>machine learning</category>
            <category>ocr</category>
            <category>oracle ai</category>
            <category>oracle apex</category>
            <category>ai applications</category>
            <category>challenge coin</category>
            <category>innovative technology</category>
            <category>community</category>
            <category>image recognition</category>
        </item>
        <item>
            <title><![CDATA[Revolutionising Language Learning: How AI and Oracle APEX Transform Everyday Challenges]]></title>
            <link>https://fuzziebrain.com/content/revolutionising-language-learning</link>
            <guid>https://fuzziebrain.com/content/revolutionising-language-learning</guid>
            <pubDate>Sun, 20 Aug 2023 17:00:00 GMT</pubDate>
            <description><![CDATA[I'm finally finding more time, post-conference, to catch up on my writing. In this latest post, I'd like to talk about a presentation that I did at Kscope23, "Solving Everyday Problems with the Oracle Cloud". During the session, I had described and demonstrated how we can use the Oracle Cloud Infrastructure (OCI) AI services and Oracle APEX to build compelling solutions, even for personal life challenges.]]></description>
            <content:encoded><![CDATA[<div class="container_yPU9"><iframe width="560" height="315" src="https://www.youtube.com/embed/aYnYQu7MY2g" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe></div>
<p>I'm finally finding more time, post-conference, to catch up on my writing. In this latest post, I'd like to talk about a presentation that I did at <a href="https://kscope23.odtug.com/" target="_blank" rel="noopener noreferrer">Kscope23</a>, "Solving Everyday Problems with the Oracle Cloud". During the session, I had described and demonstrated how we can use the <a href="https://www.oracle.com/cloud" target="_blank" rel="noopener noreferrer"><em>Oracle Cloud Infrastructure</em></a> (OCI) <a href="https://www.oracle.com/artificial-intelligence/ai-services/" target="_blank" rel="noopener noreferrer"><em>AI services</em></a> and <a href="https://apex.oracle.com/" target="_blank" rel="noopener noreferrer"><em>Oracle APEX</em></a> to build compelling solutions, even for personal life challenges.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="background">Background<a href="https://fuzziebrain.com/content/revolutionising-language-learning#background" class="hash-link" aria-label="Direct link to Background" title="Direct link to Background">​</a></h2>
<p>We are constantly bombarded by news about <em>Artificial Intelligence</em> (AI) and <em>Machine Learning</em> (ML), driving many of us seek to find a strong use case to take advantage of these technologies and use them in our work and personal projects. I am no exception.</p>
<p>A few years ago, I started learning the Japanese language using <a href="https://www.duolingo.com/" target="_blank" rel="noopener noreferrer">Duolingo</a>, but had a lot of trouble remembering the Hiragana, Katakana, Kanji characters, same issues when I learned Mandarin in school. Back in the days, learning Mandarin was through rote learning, and that sometimes involved flashcards. In August 2021, I published an <a href="https://developer.oracle.com/learn/technical-articles/learning-languages-with-oracle-cloud" target="_blank" rel="noopener noreferrer">article</a> through the Oracle Developer Relations team, about how I had used a <a href="https://www.m5stack.com/" target="_blank" rel="noopener noreferrer">M5Stack</a> IoT device and some OCI resources to build a self-updating electronic flashcard that I could place on the refrigerator door. However, constantly updating the content repository can be tedious.</p>
<p>Less than a year later, two developments at Oracle made it easier for me to enhance the data entry process with AI-based technologies, specifically, <em>Natural Language Processing</em> (NLP). First, the Speech service was released on Feb 23, 2022. Later, in October 2022, a second version of the Language service was released with a new feature for performing language translation tasks. Both these added features from Oracle AI provided me an opportunity to "use AI" to improve my approach for entering new Japanese words into my online personal word bank.</p>
<p>I had blogged about this project <a href="https://fuzziebrain.com/content/id/2201">previously</a>, to celebrate the Joel Kallman Day last year. This follow-up article provides a technical deep dive to guide readers on how to implement as similar solution.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-ai-enhanced-data-entry-workflow">New AI-Enhanced Data Entry Workflow<a href="https://fuzziebrain.com/content/revolutionising-language-learning#new-ai-enhanced-data-entry-workflow" class="hash-link" aria-label="Direct link to New AI-Enhanced Data Entry Workflow" title="Direct link to New AI-Enhanced Data Entry Workflow">​</a></h2>
<p>"A picture speaks a thousand words", so here's are two workflow diagrams that provides a crude overview of how new words are entered today.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="speech-to-text">Speech-to-Text<a href="https://fuzziebrain.com/content/revolutionising-language-learning#speech-to-text" class="hash-link" aria-label="Direct link to Speech-to-Text" title="Direct link to Speech-to-Text">​</a></h3>
<!-- -->
<p>As mentioned in my earlier post, when the speech service was first launched, it only supported the Waveform Audio File Format (WAV), and had strict rules on sample rates and channels. Today, the service now supports a much larger number of formats including <em>FLAC</em>, <em>OGG</em>, and <em>WEBM</em>. In the latest version of my application, only the <a href="https://developer.mozilla.org/docs/Web/API/MediaStream_Recording_API" target="_blank" rel="noopener noreferrer"><em>MediaStream Recording API</em></a> is used.</p>
<p>The audio capture and transcription job requests are performed through an Oracle APEX modal page shown below.</p>
<p><img decoding="async" loading="lazy" alt="The Oracle APEX modal page for recording and transcribing audio." src="https://fuzziebrain.com/assets/images/record-speech-modal-a556f4504c0203ca1cbd083f6bd024d3.png" width="2560" height="1440" class="img_ev3q"></p>
<p>To start off, we will need some utility JavaScript functions, and for simplicity, I had declared this in the page's <em>Function and Global Variable Declaration</em>. Firstly, there's the <code>mediaRecorder</code> variable that stores the reference to the <em>MediaRecorder</em> object that we will instantiate at page load. It is followed by a simple utility functions that I had borrowed from <a href="https://apexplained.wordpress.com/" target="_blank" rel="noopener noreferrer">Nick Buytaert</a>. Reference to his blog post is in the comments.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> mediaRecorder</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> util </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// builds a js array from long string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// credit: https://apexplained.wordpress.com/2016/09/12/chunked-multi-file-upload-with-ajax/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function-variable function" style="color:#d73a49">clob2Array</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">clob</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> size</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> array </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    loopCount </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token known-class-name class-name">Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">floor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">clob</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> size</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> loopCount</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      array</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">clob</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">slice</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">size </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> size </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> array</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// converts blob to base64 string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function-variable function" style="color:#d73a49">blob2base64</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">blob</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Promise</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">resolve</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> reject</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> fileReader </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">FileReader</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      fileReader</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">onerror</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> reject</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      fileReader</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method-variable function-variable method function property-access" style="color:#d73a49">onload</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> dataURI </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> fileReader</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">result</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">resolve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dataURI</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">substr</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dataURI</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">indexOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">','</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      fileReader</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">readAsDataURL</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">blob</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Next, I added the following JavaScript code in the <em>Execute when Page Loads</em> that would instantiate the <em>MediaRecorder</em> object, and implement the callback function when recording is stopped. When that function is called, the recorded audio will be loaded into an embedded audio player, allowing the user to playback the recording. It will also call an AJAX callback (<code>TRANSCRIBE_AUDIO</code>) process that includes the audio MIME-type, and the recording as a base64-encoded string. That's where the <code>util</code> package comes in handy.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token dom variable" style="color:#36acaa">navigator</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">mediaDevices</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">debug</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"getUserMedia supported."</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token doc-comment comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * While FLAC is preferred, it appears Firefox and Chrome currently do not</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * support this lossless audio format.</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   **/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> audioMimeType </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'audio/webm'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">debug</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">audioMimeType </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">' is'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">MediaRecorder</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">isTypeSupported</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">audioMimeType</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">''</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">' not'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">' supported.'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> constraints </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">audio</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> chunks </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token dom variable" style="color:#36acaa">navigator</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">mediaDevices</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getUserMedia</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">constraints</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">stream</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      mediaRecorder </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">MediaRecorder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">stream</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      mediaRecorder</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method-variable function-variable method function property-access" style="color:#d73a49">onstop</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">debug</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"data available after MediaRecorder.stop() called."</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> popup </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">widget</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">waitPopup</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> blob </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Blob</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">chunks</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> audioMimeType </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        chunks </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> audioURL </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">URL</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">createObjectURL</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">blob</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        player</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">src</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> audioURL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">debug</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"recorder stopped"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> base64 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">blob2base64</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">blob</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> process </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">server</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">process</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token string" style="color:#e3116c">"TRANSCRIBE_AUDIO"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token literal-property property" style="color:#36acaa">x01</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> audioMimeType</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token literal-property property" style="color:#36acaa">f01</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">clob2Array</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">base64</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">32000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        process</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">done</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">result</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          apex</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">item</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"P2_TRANSCRIBED_TEXT"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">setValue</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">transcribedText</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          apex</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">message</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">showPageSuccess</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Audio transcribed."</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">fail</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">jqXHR</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> textStatus</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> errorMessage</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          apex</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">message</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Failed to process audio."</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Failed to save. Error: "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> errorMessage</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">always</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          popup</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">remove</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      mediaRecorder</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method-variable function-variable method function property-access" style="color:#d73a49">ondataavailable</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        chunks</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">The following error occurred: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">err</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The AJAX callback named <code>TRANSCRIBE_AUDIO</code> contains the following PL/SQL procedure:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  c_audio_mime_type constant apex_application</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_x01</span><span class="token operator" style="color:#393A34">%</span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex_application</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_x01</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_clob_temp clob</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_blob_content </span><span class="token keyword" style="color:#00009f">blob</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_buffer varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">32767</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_filename varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">30</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'sample-'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> to_char</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">systimestamp</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'YYYYMMSSHH24MISS'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'.'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> regexp_replace</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c_audio_mime_type</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'^audio/(.+)$'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'\1'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_transcribed_text varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">32767</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dbms_lob</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">createtemporary</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lob_loc </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_clob_temp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> cache </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dur </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> dbms_lob</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">session</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">apex_application</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_f01</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">count </span><span class="token keyword" style="color:#00009f">loop</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_buffer :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex_application</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_f01</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dbms_lob</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">writeappend</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      lob_loc </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_clob_temp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> amount </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> length</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_buffer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> buffer </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_buffer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">loop</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_blob_content :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">clobbase642blob</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_clob_temp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  pkg_oci_os_util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">p_upload_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_bucket_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> :G_INPUT_BUCKET_NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_file_blob </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_blob_content</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_filename </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_filename</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_mime_type </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain">  c_audio_mime_type</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dbms_lob</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">freetemporary</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_clob_temp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_transcribed_text :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pkg_oci_speech_util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">f_transcribe_audio</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_input_bucket_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> :G_INPUT_BUCKET_NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_output_bucket_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> :G_OUTPUT_BUCKET_NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_filename </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_filename</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  sys</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">htp</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'{ "transcribedText": "'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> l_transcribed_text </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'"}'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The callback process converts the base64-encoded string back to a BLOB, and then uploads it to the target Object Storage bucket defined by the APEX substitution string <code>G_INPUT_BUCKET_NAME</code>. Once the file has been uploaded successfully, the Speech service transcription job is then created using a facade. The PL/SQL function takes in the input and output bucket names, as well as the audio filename, and returns the transcribed text. The function also has an optional parameter <code>p_source_language_code</code> that lets the developer specify the language used in audio recording. The default value is <code>en-US</code>.</p>
<blockquote>
<p><strong>NOTE</strong></p>
<p>If you have not worked with the Object Storage service in APEX before, be sure to check out the LiveLabs <a href="https://apexapps.oracle.com/pls/apex/r/dbpm/livelabs/view-workshop?wid=3558" target="_blank" rel="noopener noreferrer">workshop</a> I had prepared on this subject. I will also be presenting this workshop in-person at the upcoming <a href="https://www.oracle.com/cloudworld/" target="_blank" rel="noopener noreferrer">Oracle CloudWorld 2023</a>. The session number is <a href="https://reg.rf.oracle.com/flow/oracle/cwoh23/catalog/page/catalog/session/1683745130623001qcie" target="_blank" rel="noopener noreferrer">HOL2327</a>.</p>
</blockquote>
<p>This function actually makes several OCI REST API calls. The first one creates the transcription job using standard <code>APEX_WEB_SERVICE</code> code shown in the snippet below:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_request_headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Content-Type'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_request_headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'application/json'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">l_response :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">make_rest_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p_url </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_request_url</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_http_method </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'POST'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_body </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'compartmentId'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> pkg_oci_speech_util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">gc_compartmentid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'inputLocation'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'locationType'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'OBJECT_LIST_INLINE_INPUT_LOCATION'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'objectLocations'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> json_array</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'bucketName'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> p_input_bucket_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'namespaceName'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> pkg_oci_speech_util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">gc_namespace</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'objectNames'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> json_array</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p_filename</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'outputLocation'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'bucketName'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> p_output_bucket_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'namespaceName'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> pkg_oci_speech_util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">gc_namespace</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'prefix'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'apex'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'normalization'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'isPunctuationEnabled'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'modelDetails'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">key</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'languageCode'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> p_source_language_code</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_credential_static_id </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> pkg_oci_speech_util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">gc_credential_static_id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <em>CreateTranscriptionJob</em> API calls are asynchronous. When the job was created, the API returns a response object containing details about the transcription job, including the <em>OCID</em>, and the job's status (the <code>id</code> and <code>lifecycleState</code> attribute respectively). Rarely will the job complete immediately, therefore, the code then loops, making a call to the <em>GetTranscriptionJob</em> endpoint to get the current status until either job has succeeded, failed, or was cancelled.</p>
<p>If the transcription job was successful, the function then retrieves the task details using the <em>GetTranscriptionTask</em> API. The response will contain the required object storage location of the transcription results written in a JSON file (see example below).</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "status": "SUCCESS",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "timeCreated": "2023-08-20 23:32:46.96",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "modelDetails": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "domain": "GENERIC",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "languageCode": "en-US"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "audioFormatDetails": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "format": "WEBM",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "numberOfChannels": 2,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "encoding": "OPUS",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "sampleRateInHz": 48000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "transcriptions": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  "transcription": "Hello, how are you?",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  "confidence": "0.9600",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  "tokens": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		  "token": "This",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		  "startTime": "0.624s",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		  "endTime": "1.104s",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		  "confidence": "0.9527",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		  "type": "WORD"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In this file, you can find details about the source audio file, the transcription, the confidence value of the transcription, and details of individual tokens. The function retrieves this file from the object storage, parses it, and then returns the value of the <code>transcription</code> attribute.</p>
<p>Finally, this page contains the following UI components:</p>
<ul>
<li>An audio player to playback the recording. It can be embedded within a <em>Static Content</em> region using the source:<!-- -->
<div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">audio</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">player</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">controls</span><span class="token tag" style="color:#00009f"> </span><span class="token tag special-attr attr-name" style="color:#00a4db">style</span><span class="token tag special-attr attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag special-attr attr-value punctuation" style="color:#393A34">"</span><span class="token tag special-attr attr-value value css language-css property" style="color:#36acaa">width</span><span class="token tag special-attr attr-value value css language-css punctuation" style="color:#393A34">:</span><span class="token tag special-attr attr-value value css language-css" style="color:#e3116c"> </span><span class="token tag special-attr attr-value value css language-css number" style="color:#36acaa">100</span><span class="token tag special-attr attr-value value css language-css unit" style="color:#e3116c">%</span><span class="token tag special-attr attr-value value css language-css punctuation" style="color:#393A34">;</span><span class="token tag special-attr attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">audio</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>A textarea page item called <code>P2_TRANSCRIBED_TEXT</code>; and</li>
<li>Three buttons <em>Record</em>, <em>Stop</em>, and <em>Accept</em>.</li>
</ul>
<p>The first two buttons trigger the media recorder object to start and stop recording. Simply attach dynamic actions for mouse click events and execute the corresponding JavaScript code.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// For the start button.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">mediaRecorder</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  mediaRecorder</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// For the stop button.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">mediaRecorder</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  mediaRecorder</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">stop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <em>Accept</em> button executes the <em>Close Dialog</em> process, returning the value of the page item <code>P2_TRANSCRIBED_TEXT</code> that is used to set the value of <code>P1_TEXT</code> in the parent page.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="translate-text">Translate Text<a href="https://fuzziebrain.com/content/revolutionising-language-learning#translate-text" class="hash-link" aria-label="Direct link to Translate Text" title="Direct link to Translate Text">​</a></h3>
<!-- -->
<p>The Language service API is a lot simpler to consume. When the <em>Translate</em> button is clicked, the page is submitted, and a page submission process is called with to execute the following PL/SQL procedure:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  c_rest_url constant varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">200</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'https://language.aiservice.us-phoenix-1.oci.oraclecloud.com/20221001/actions/batchLanguageTranslation'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  c_from_lang constant varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'en'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  c_compartment_ocid varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1024</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ocid1.compartment.oc1..*****'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  c_credential_static_id constant varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">50</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'OCI_CREDENTIALS'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  c_number_of_text_to_translate pls_integer :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_request_body json_object_t</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_document json_object_t</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_documents json_array_t</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_response clob</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_request_body :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> json_object_t</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_documents :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> json_array_t</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   * The Language service APIs process requests in batches. Even though we are</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   * only submitting a single text to be translated, I have written a loop to</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   * construct the request body to "future proof" the implementation. ;-)</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   **/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">c_number_of_text_to_translate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">loop</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_document :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> json_object_t</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'key'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> to_char</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'text'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> :P1_TEXT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'languageCode'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c_from_lang</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_documents</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_document</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">loop</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_request_body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'documents'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> treat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_documents </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> json_element_t</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_request_body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'targetLanguageCode'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> :P1_TO_LANG</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_request_body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'compartmentId'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c_compartment_ocid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apex_debug</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_request_body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">to_string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_request_headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Content-Type'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_request_headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'application/json'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_response :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">make_rest_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_url </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> c_rest_url</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_http_method </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'POST'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_body </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_request_body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">to_string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_credential_static_id </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> c_credential_static_id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_status_code </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">200</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apex_debug</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'HTTP Status Code: '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_status_code</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apex_debug</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_response</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    raise_application_error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">20002</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Translation unsuccessful! HTTP Status Code: '</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_status_code</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apex_debug</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_response</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_documents :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> treat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">json_object_t</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">parse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_response</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'documents'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> json_array_t</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_documents</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get_size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">loop</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      l_document :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> treat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_documents</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> json_object_t</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      :P1_TRANSLATED_TEXT :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l_document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get_string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'translatedText'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">loop</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>That's it!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://fuzziebrain.com/content/revolutionising-language-learning#summary" class="hash-link" aria-label="Direct link to Summary" title="Direct link to Summary">​</a></h2>
<p>In this article, we have delved into the remarkable synergy between AI and Oracle APEX. By harnessing cutting-edge AI features like speech-to-text transcription and language translation, we've unveiled a world of possibilities for enhancing communication and learning. Whether you're a beginner or an expert in the realm of machine learning, I hope this article has provided you a head start and inspiration for creating your own innovative solutions to solving day-to-day challenges using low-code technologies.</p>]]></content:encoded>
            <category>artificial intelligence</category>
            <category>machine learning</category>
            <category>speech recognition</category>
            <category>language learning</category>
            <category>oracle ai</category>
            <category>oracle apex</category>
            <category>ai applications</category>
            <category>cloud solutions</category>
            <category>technical workflow</category>
            <category>innovative technology</category>
        </item>
        <item>
            <title><![CDATA[Say Hello From An Autonomous Database]]></title>
            <link>https://fuzziebrain.com/content/say-hello-from-an-autonomous-database</link>
            <guid>https://fuzziebrain.com/content/say-hello-from-an-autonomous-database</guid>
            <pubDate>Mon, 17 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[New features announced for Oracle Autonomous Database]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="New features announced for Oracle Autonomous Database" src="https://fuzziebrain.com/assets/images/adb-new-features-alert-72ffee96d7288cea1c4da967cba9d29a.png" width="2140" height="592" class="img_ev3q"></p>
<p>In case you missed it, Oracle recently announced the availability of a new feature for the <a href="https://www.oracle.com/autonomous-database/" target="_blank" rel="noopener noreferrer">Autonomous Database</a> (ADB) that allows developers and database administrators to send messages using either emails, <a href="https://slack.com/" target="_blank" rel="noopener noreferrer">Slack</a>, or <a href="https://www.microsoft.com/microsoft-teams" target="_blank" rel="noopener noreferrer">Microsoft Teams</a> (Teams). At <a href="https://insum.ca/" target="_blank" rel="noopener noreferrer">Insum</a>, we use teams for internal communications and collaboration, and thus, you can appreciate my excitement when I heard about this feature release. Here's an early guide to getting started with <code>DBMS_CLOUD_NOTIFICATION</code> for those using Teams at their organisation.</p>
<blockquote>
<p>Before we begin, it is worthwhile to note that for <a href="https://apex.oracle.com/" target="_blank" rel="noopener noreferrer">Oracle APEX</a>, you can also send out emails and Slack/Teams using the <code>APEX_MAIL</code> and <code>APEX_WEB_SERVICE</code> PL/SQL APIs. This is an additional convenience feature that is provided with an ADB.</p>
</blockquote>
<p>Setting up <code>DBMS_CLOUD_NOTIFICATION</code> to send Teams messages and data requires a few preparatory steps. You may read the details <a href="https://docs.oracle.com/en/cloud/paas/autonomous-database/adbsa/send-msteams-notifications.html#GUID-80ACCB33-DF2D-42D7-AC01-23670B5B90E4" target="_blank" rel="noopener noreferrer">here</a> but this blog post would provide further guidance and issues I noted when working through the steps.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="create-a-teams-application">Create a Teams Application<a href="https://fuzziebrain.com/content/say-hello-from-an-autonomous-database#create-a-teams-application" class="hash-link" aria-label="Direct link to Create a Teams Application" title="Direct link to Create a Teams Application">​</a></h2>
<p>The first task that you will need to complete is to create a Teams application using the Teams <a href="https://dev.teams.microsoft.com/" target="_blank" rel="noopener noreferrer">developer portal</a>. Create a new application and provide the following details:</p>
<ul>
<li>App names<!-- -->
<ul>
<li>Short name</li>
</ul>
</li>
<li>Descriptions<!-- -->
<ul>
<li>Short description</li>
<li>Long description</li>
</ul>
</li>
<li>Version</li>
<li>Developer information<!-- -->
<ul>
<li>Developer or company name</li>
<li>Website</li>
</ul>
</li>
<li>App URLs<!-- -->
<ul>
<li>Privacy policy</li>
<li>Terms of use</li>
</ul>
</li>
</ul>
<p><img decoding="async" loading="lazy" alt="Provide the basic information required for the new application." src="https://fuzziebrain.com/assets/images/teams-app-basic-information-d36beebfe28554eb65c36f3d20df8c20.png" width="2560" height="1600" class="img_ev3q"></p>
<p>Other than the <em>Application (client) ID</em>, you <strong>must</strong> enter the required information to ensure the application passes validation and can be published successfully.</p>
<p>Once you are satisfied with what you have entered, save the changes, and then return to the <em>Dashboard</em> to make sure there are no errors or warnings. Correct any if necessary.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="create-a-bot-and-configure-the-app-feature">Create a Bot and Configure the App Feature<a href="https://fuzziebrain.com/content/say-hello-from-an-autonomous-database#create-a-bot-and-configure-the-app-feature" class="hash-link" aria-label="Direct link to Create a Bot and Configure the App Feature" title="Direct link to Create a Bot and Configure the App Feature">​</a></h2>
<p>Next, create a <em>Bot</em>. You can either do this by navigating to <em>Tools</em> &gt; <em>Bot management</em>, or from within the <em>Apps</em> interface, navigate to <em>App features</em> and then click <em>Bot</em>. There, you will find the link <em>Create a new bot</em>.</p>
<p><img decoding="async" loading="lazy" alt="Create an app feature." src="https://fuzziebrain.com/assets/images/teams-app-features-a95fb7715f6b15faf321fd2f4e561e5a.png" width="2560" height="1600" class="img_ev3q"></p>
<p>Creating a bot is simple. You will only need to provide a name for the bot. After the bot is created, you will be redirected to the bot's details page. Navigate to the <em>Client secrets</em>, and then click the button <em>Add a secret client for your bot</em>. Store the generated client secret securely as it will only be displayed <strong>once</strong>.</p>
<p><img decoding="async" loading="lazy" alt="Bot secret" src="https://fuzziebrain.com/assets/images/bot-secret-f52cca82f1b99a6119be638a07d54996.png" width="2560" height="800" class="img_ev3q"></p>
<p>Return to the <em>Bots management</em> page and note the <em>Bot ID</em> as well.</p>
<p><img decoding="async" loading="lazy" alt="Bot ID" src="https://fuzziebrain.com/assets/images/bot-id-09b7f7e1f84ed2eb3ad1b8f874430098.png" width="2560" height="600" class="img_ev3q"></p>
<p>After the bot has been created, return to the bot configuration in the app's feature page. Select the bot that you have just created, select the actions that the bot can do, and the scope.</p>
<p><img decoding="async" loading="lazy" alt="Bot app feature configuration" src="https://fuzziebrain.com/assets/images/teams-app-bot-feature-configuration-03776b969a3614c531b5ea78ae29d6b7.png" width="2560" height="1600" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="publish-the-application">Publish the Application<a href="https://fuzziebrain.com/content/say-hello-from-an-autonomous-database#publish-the-application" class="hash-link" aria-label="Direct link to Publish the Application" title="Direct link to Publish the Application">​</a></h2>
<p>On the app's details page, navigate to <em>Publish</em> &gt; <em>Publish to org</em>. At the bottom of the page, there should be a button to submit the app for publication. Click it and inform the Teams administrator.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tasks-for-azure-active-directory-administrators">Tasks for Azure Active Directory Administrators<a href="https://fuzziebrain.com/content/say-hello-from-an-autonomous-database#tasks-for-azure-active-directory-administrators" class="hash-link" aria-label="Direct link to Tasks for Azure Active Directory Administrators" title="Direct link to Tasks for Azure Active Directory Administrators">​</a></h2>
<p>The next task involves defining the <em>API permissions</em> that the bot <strong>must</strong> have. If you do not have permission to access the <em>Azure Active Directory</em> (Azure AD) console, then please work with the administrator to complete this step.</p>
<p>When the bot was created, the platform automatically creates an <em>App registration</em> in Azure AD. You may access the app registrations using either <a href="https://entra.microsoft.com/" target="_blank" rel="noopener noreferrer">Microsoft Entra</a> or the main <a href="https://portal.azure.com/" target="_blank" rel="noopener noreferrer">Azure portal</a>. Locate the app registration for the bot and then navigate to the <em>API permissions</em> page. Add the following permissions:</p>
<ul>
<li><code>Files.ReadWrite.All</code></li>
<li><code>Sites.ReadWrite.All</code></li>
<li><code>ChannelSettings.Read.All</code><sup>*</sup></li>
</ul>
<p><img decoding="async" loading="lazy" alt="Required API permissions" src="https://fuzziebrain.com/assets/images/azuread-api-permissions-and-grant-consent-9224d0cdecda0c1c5800bff09d570408.png" width="2560" height="1600" class="img_ev3q"></p>
<blockquote>
<p><strong>IMPORTANT</strong> The Oracle documentation does not include <code>ChannelSettings.Read.All</code>. I will discuss this in a later section.</p>
</blockquote>
<p>Finally, click the <em>Grant admin consent for {{TENANT}}</em> link to allow the bot to access the specified APIs.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tasks-for-teams-administrators">Tasks for Teams Administrators<a href="https://fuzziebrain.com/content/say-hello-from-an-autonomous-database#tasks-for-teams-administrators" class="hash-link" aria-label="Direct link to Tasks for Teams Administrators" title="Direct link to Tasks for Teams Administrators">​</a></h2>
<p>In this next set of tasks, again, you may have to work with the administrators for your <em>Microsoft 365</em> tenancy or designated Teams administrator to approve and publish the Teams application. Access the Teams admin console <a href="https://admin.teams.microsoft.com/" target="_blank" rel="noopener noreferrer">here</a>.</p>
<p>Navigate to <em>Teams apps</em> &gt; <em>Manage apps</em>. The first thing you might notice is that there is an app that has been submitted and pending approval. In the table below, search and locate the application you have created.</p>
<p><img decoding="async" loading="lazy" alt="Search for the Teams app." src="https://fuzziebrain.com/assets/images/teams-admin-manage-apps-ae449a9cf3398cc0b6e275dd03aad8e4.png" width="2560" height="1600" class="img_ev3q"></p>
<p>Click on the app, and on the app's details page, click <em>Publish</em> to approve the application for use in Teams.</p>
<p><img decoding="async" loading="lazy" alt="Approve and publish the application." src="https://fuzziebrain.com/assets/images/teams-admin-publish-app-f9175381ea28d34f25b819841f9e6bb6.png" width="1280" height="720" class="img_ev3q"></p>
<p>It takes a little while for the app to show up in Teams for it to appear in the Teams <em>Apps</em> store under <em>Built for your org</em> category and then add it to team. A quick workaround is to add it to the team immediately using the admin console as show in the figure below.</p>
<p><img decoding="async" loading="lazy" alt="Add the app to a team." src="https://fuzziebrain.com/assets/images/teams-admin-add-app-to-team-8fe9547c5239cb9b313a162abe24171e.png" width="2560" height="1600" class="img_ev3q"></p>
<p>In the table of apps, select the application and then click the button <em>Add to team</em>. Select the team you wish to add the app to, and then click the button <em>Apply</em>. Back in Teams, you may validate by accessing the team's management page and then click the tab <em>Apps</em>. You should see that the app has been added to the team.</p>
<p><img decoding="async" loading="lazy" alt="App successfully added to team." src="https://fuzziebrain.com/assets/images/teams-team-apps-d7610f9422306123f8e92879610a433f.png" width="2560" height="1600" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sending-messages-and-data-to-teams">Sending Messages and Data to Teams<a href="https://fuzziebrain.com/content/say-hello-from-an-autonomous-database#sending-messages-and-data-to-teams" class="hash-link" aria-label="Direct link to Sending Messages and Data to Teams" title="Direct link to Sending Messages and Data to Teams">​</a></h2>
<p>Now that you have fulfilled the prerequisites, it is time to test this feature.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="create-credential">Create Credential<a href="https://fuzziebrain.com/content/say-hello-from-an-autonomous-database#create-credential" class="hash-link" aria-label="Direct link to Create Credential" title="Direct link to Create Credential">​</a></h3>
<p>In the document, it is stated that the ADB's <em>ADMIN</em> should create the credential, but I have tested it to work even with the credential created by the user. However, the schema that you wish to use to create the credentials <strong>must</strong> have <em>execute</em> privilege on the <code>DBMS_CLOUD</code> package.</p>
<p>Create the credential using the bot ID and secret:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dbms_cloud</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create_credential</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    credential_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'TEAMS_CRED'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> username </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'6b2c7*****f7a15'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> password </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Abd8Q*****BSc~i'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="team-channel-link">Team Channel Link<a href="https://fuzziebrain.com/content/say-hello-from-an-autonomous-database#team-channel-link" class="hash-link" aria-label="Direct link to Team Channel Link" title="Direct link to Team Channel Link">​</a></h3>
<p>In order to send messages and data, you will need <strong>three</strong> parameters obtained from either the team's or channel's link. They look something like these:</p>
<ul>
<li>Team's link</li>
</ul>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">https://teams.microsoft.com/l/team/19%3a94d8e*****d68aa%40thread.tacv2/conversations?groupId=23e1c*****ba568&amp;tenantId=7d58a*****c60a0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>Team channel's link</li>
</ul>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">https://teams.microsoft.com/l/channel/19%3aa94d8*****d68aa%40thread.tacv2/Monthly%2520Reports?groupId=23e1c*****ba568&amp;tenantId=7d58a*****c60a0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The information you will need are the <code>{{TEAM}}</code>, <code>{{CHANNEL}}</code> and <code>{{TENANT}}</code> components as marked below:</p>
<ul>
<li>From the team's link</li>
</ul>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">https://teams.microsoft.com/l/team/{{TEAM}}/conversations?groupId=23e1c*****ba568&amp;tenantId={{TENANT}}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>From the team channel's link</li>
</ul>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">https://teams.microsoft.com/l/channel/{{CHANNEL}}/General?groupId=23e1c*****ba568&amp;tenantId={{TENANT}}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The values for the parameters are:</p>
<ul>
<li><code>tenant</code> =&gt; <code>{{TENANT}}</code></li>
<li><code>team</code> =&gt; <code>{{TEAM}}</code></li>
<li><code>channel</code> =&gt; <code>{{CHANNEL}}</code></li>
</ul>
<blockquote>
<p><strong>IMPORTANT</strong> The team ID derived from the team's link is the same as the ID of the team's <em>General</em> channel.</p>
</blockquote>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="send-message">Send Message<a href="https://fuzziebrain.com/content/say-hello-from-an-autonomous-database#send-message" class="hash-link" aria-label="Direct link to Send Message" title="Direct link to Send Message">​</a></h3>
<p>With that information handy, you are now ready to send a message to the team. In this example, we will send a message to the channel <em>General</em> for the team <em>Sales and Marketing</em> using the following PL/SQL procedure:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dbms_cloud_notification</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">send_message</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    provider </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'msteams'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> credential_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'TEAMS_CRED'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> message </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'**SUCCESS!** message sent from '</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> sys_context</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'USERENV'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token string" style="color:#e3116c">'DB_NAME'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> params </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'channel'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'19%3a94d8*****d68aa%40thread.tacv2'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>You should see the message appear in Teams shortly.</p>
<p><img decoding="async" loading="lazy" alt="Message from the ADB in Teams." src="https://fuzziebrain.com/assets/images/teams-message-received-0768213def54d940a87c2143071d9c79.png" width="2560" height="480" class="img_ev3q"></p>
<p>Did you see that? There's support for <em>Markdown</em>! Bot messages support plain-text, Markdown, and XML formats as documented <a href="https://learn.microsoft.com/microsoftteams/platform/bots/how-to/format-your-bot-messages" target="_blank" rel="noopener noreferrer">here</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="send-data">Send Data<a href="https://fuzziebrain.com/content/say-hello-from-an-autonomous-database#send-data" class="hash-link" aria-label="Direct link to Send Data" title="Direct link to Send Data">​</a></h3>
<p>Next, we will attempt to query the sample data available in the ADB's <code>SH</code> schema, and then send it to the same channel in <code>CSV</code> format. Execute the following code:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">l_sql clob :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> q</span><span class="token string" style="color:#e3116c">'[select</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">  p.prod_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">  , s.quantity_sold</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">  , s.amount_sold</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">  , t.day_number_in_month || '</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">' || t.calendar_month_name || '</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">      || t.calendar_year as sold_on</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">from sh.sales s</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">join sh.products p on p.prod_id = s.prod_id</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">join sh.times t on t.time_id = t.time_id</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">fetch first 10 rows only]'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dbms_cloud_notification</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">send_data</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    provider </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'msteams'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> credential_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'TEAMS_CRED'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> query </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_sql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> params </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token string" style="color:#e3116c">'tenant'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'7d58a*****c60a0'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'team'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'19%3a94d8*****d68aa%40thread.tacv2'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'channel'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'19%3a94d8*****d68aa%40thread.tacv2'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'title'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'daily_sales_report'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'type'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'csv'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>If successful, you should see the <code>CSV</code> document link in teams.</p>
<p><img decoding="async" loading="lazy" alt="Notification and link in Teams." src="https://fuzziebrain.com/assets/images/teams-data-received-cc65248db9de2b0cb4391a48b799a57c.png" width="2560" height="400" class="img_ev3q"></p>
<p>And when you click on the link, it should open the file in <em>Microsoft Excel</em> (Excel).</p>
<p><img decoding="async" loading="lazy" alt="Results from the query in Excel." src="https://fuzziebrain.com/assets/images/received-data-34cdb2d1f5811d4e2bec3d1e0bfd9b0d.png" width="2560" height="1600" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="notable-issues">Notable Issues<a href="https://fuzziebrain.com/content/say-hello-from-an-autonomous-database#notable-issues" class="hash-link" aria-label="Direct link to Notable Issues" title="Direct link to Notable Issues">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="version">Version<a href="https://fuzziebrain.com/content/say-hello-from-an-autonomous-database#version" class="hash-link" aria-label="Direct link to Version" title="Direct link to Version">​</a></h3>
<p>If you need to make changes your Teams app after it has been approved and published by the Teams administrator, you must do the following:</p>
<ol>
<li>Increment the version number in the app's basic information page and save it.</li>
<li>Submit the updated app for approval.</li>
<li>Have the Teams administrator repeat the approval process only. There should not be a need to add the app to the team again.</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="error-messages">Error Messages<a href="https://fuzziebrain.com/content/say-hello-from-an-autonomous-database#error-messages" class="hash-link" aria-label="Direct link to Error Messages" title="Direct link to Error Messages">​</a></h3>
<p>If you have worked with an Oracle Database for a while, then it wouldn't surprise you that the error messages from the database sometimes do not represent the underlying issue well. ;-)</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="ora-20010-missing-credential-name">ORA-20010: Missing credential name<a href="https://fuzziebrain.com/content/say-hello-from-an-autonomous-database#ora-20010-missing-credential-name" class="hash-link" aria-label="Direct link to ORA-20010: Missing credential name" title="Direct link to ORA-20010: Missing credential name">​</a></h4>
<p>I came across this error in two difference scenarios. They are for when I attempted to:</p>
<ul>
<li>Send a message when the Teams app was not published successfully.</li>
<li>Send a message when the Teams app was not added to the channel's team.</li>
<li>Send data to a channel other than the team's <em>General</em> channel.</li>
</ul>
<p>It appears this error is returned whenever there is an error making a REST call to the <em>Microsoft Graph</em> API.</p>
<p>The first two scenarios were easily resolved. However, I am still unable to send data to a channel, other than the team's <em>General</em> channel.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="ora-20000-cant-access-team-check-app-has-enough-permission">ORA-20000: Cant Access Team, Check App has enough permission<a href="https://fuzziebrain.com/content/say-hello-from-an-autonomous-database#ora-20000-cant-access-team-check-app-has-enough-permission" class="hash-link" aria-label="Direct link to ORA-20000: Cant Access Team, Check App has enough permission" title="Direct link to ORA-20000: Cant Access Team, Check App has enough permission">​</a></h4>
<p>This one baffled me for a long time when I was trying to send data. In the documentation, it was stated that the value for <code>team</code> should be the <code>teamID</code> component in the team's link. However, the example code showed a value that looks a lot more like the <code>groupid</code>. As it turns out, this isn't a <em>permissions</em> issue, but rather, I had supplied the wrong value for <code>team</code>, and thus the internal ID for the team could not be found when the <em>Microsoft Bot</em> API was queried.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="ora-20000-cant-access-channel-check-app-has-enough-permission">ORA-20000: Cant Access Channel, Check App has enough permission<a href="https://fuzziebrain.com/content/say-hello-from-an-autonomous-database#ora-20000-cant-access-channel-check-app-has-enough-permission" class="hash-link" aria-label="Direct link to ORA-20000: Cant Access Channel, Check App has enough permission" title="Direct link to ORA-20000: Cant Access Channel, Check App has enough permission">​</a></h4>
<p>Similar to the previous error message, you might get this error when an incorrect <code>channel</code> identifier is provided.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://fuzziebrain.com/content/say-hello-from-an-autonomous-database#summary" class="hash-link" aria-label="Direct link to Summary" title="Direct link to Summary">​</a></h2>
<p>There are countless use cases where developers might want to send notifications or data to users, whether it is through emails or a collaboration platform like Slack and Microsoft Teams. For example, notifying users involved in a business workflow for follow up action, sending daily reports to the C-suites, and more. Again, in Oracle APEX, we already have these capabilities by using either <code>APEX_MAIL</code> to send emails, or <code>APEX_WEB_SERVICE</code> to call webhooks and REST APIs. However, when working in an ADB, this provides yet another convenience method to perform the same task.</p>
<p>With regards to sending messages, I had wondered about why the development team might have chosen to implement the messaging using a bot as oppose to the simpler webhook interface. I found this <a href="https://learn.microsoft.com/microsoftteams/platform/webhooks-and-connectors/what-are-webhooks-and-connectors" target="_blank" rel="noopener noreferrer">article</a> that listed this as a comparison between the two approaches:</p>
<blockquote>
<p>A notification bot works as a Teams application. You can define your business logic to process data and show data in a customized format.</p>
</blockquote>
<p>With the added ability to generate and send data files, I can see why they opted to choose to implement the functionality using a bot. Further, wearing an "admin" hat, I would be more comfortable having a streamlined process for managing access to Teams and the associated resources in Microsoft 365 tenancy.</p>
<p>The team behind the Oracle Autonomous Database product is constantly working on new features to enhance the user/developer experience, and this is one of them! We can only hope that these "dbms_cloud"-type packages find their way quickly to the <em>Oracle Base Database</em> service and on-premise installations.</p>
<p>I hope this article helps you to use this new feature and skip the few pain points that I had experienced getting it going!</p>]]></content:encoded>
            <category>oracle autonomous database</category>
            <category>oracle cloud</category>
            <category>email</category>
            <category>slack</category>
            <category>microsoft teams</category>
            <category>msteams</category>
            <category>communications</category>
            <category>orclapex</category>
            <category>oracle apex</category>
            <category>plsql</category>
            <category>dbms_cloud_notification</category>
        </item>
        <item>
            <title><![CDATA[I Am Obsolete]]></title>
            <link>https://fuzziebrain.com/content/id/2301</link>
            <guid>https://fuzziebrain.com/content/id/2301</guid>
            <pubDate>Sat, 14 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[A cassette tape.]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="A cassette tape." src="https://fuzziebrain.com/assets/images/cassette-tape_1280x720-5a94f95a05b6a01de9095f05ecd33401.png" width="1280" height="720" class="img_ev3q"></p>
<p>When I was first introduced to generative adversarial networks (GANs), I was impressed, but yet not impressed. The concept, performance, and outcomes of these advanced machine learning (ML) algorithms were truly jaw-dropping, but easily abused. And so, when everyone was excitedly chatting about <a href="https://chat.openai.com/" target="_blank" rel="noopener noreferrer">ChatGPT</a>, I was cynical and tried to tune out until I came across a <a href="https://www.linkedin.com/posts/sausheong_teachers-v-chatgpt-schools-face-new-challenge-activity-7015524158113533952-OClM" target="_blank" rel="noopener noreferrer">comment</a> by an old acquaintance, following a news article on concerns about ChatGPT and potential plagiarism in school.</p>
<blockquote>
<p><em>It's like someone using a calculator in an arithmetic exam, ChatGPT is just another tool.</em></p>
<p>-- <a href="https://sausheong.com/" target="_blank" rel="noopener noreferrer">Sau Sheong Chang</a></p>
</blockquote>
<p>That statement got me rethinking my stance on the technology, and curious about its utility in my day-to-day job.</p>
<p>And I'm glad I did. My own exploration of this subject started by reading Sau Sheong's <a href="https://medium.com/sausheong/chatting-about-chatgpt-645783b72e6b" target="_blank" rel="noopener noreferrer">post</a> to get a general idea about ChatGPT and the underlying technology that drives its ability to generate text and images. After <em>intelligent agents</em> and <em>artificial neural Networks</em>, <em>natural language processing</em> (NLP) was the next machine learning (ML) topic that I was passionate about. There wasn't a full module on that subject back when I was doing my graduate school training in <em>knowledge engineering</em> techniques, so it was pretty much a touch and go. Though during the pandemic, in 2020, I did take up a <em>Coursera</em>/<em>DeepLearning.AI</em> course on <em>Tensorflow</em> that covered NLP in one of its modules. There I got my legs deeper in the water and learned more in-depth about <em>recurrent neural networks</em> (RNN), <em>long short-term memory</em> (LSTM), and <em>Bidirectional Encoder Representations from Transformers</em> (BERT). And the keyword <em>transformers</em> is what's driving algorithms such as the <em>Generative Pre-trained Transformer</em> (GPT) used by ChatGPT.</p>
<p><em>Transformers are a type of neural network architecture that are particularly well-suited for natural language processing tasks. They allow a model to effectively process input sequences of variable length and attend to certain parts of the input while generating output. In other words, they enable the model to understand the context and meaning of words and sentences. This is achieved by using self-attention mechanisms, which allow the model to weigh the importance of different parts of the input when making predictions. This has led to significant improvements in the performance of models on a wide range of NLP tasks such as machine translation, text summarization, and question answering. Overall, the transformer architecture has been a major step forward in the field of NLP, and has been widely adopted in state-of-the-art models.</em></p>
<p>I don't know enough yet to go any deeper than flashing our buzzwords, and a lot of this is still over my head. I found this video to be very clear and easy to understand these concepts quickly, so have a watch!</p>
<div class="container_yPU9"><iframe width="560" height="315" src="https://www.youtube.com/embed/SZorAJ4I-sA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="writing-content-and-code">Writing Content and Code<a href="https://fuzziebrain.com/content/id/2301#writing-content-and-code" class="hash-link" aria-label="Direct link to Writing Content and Code" title="Direct link to Writing Content and Code">​</a></h2>
<p>When I first started on this blog post, I thought about using OpenAI's <a href="https://openai.com/blog/dall-e/" target="_blank" rel="noopener noreferrer"><em>DALL-E</em></a> model to generate an image that I could use in the banner. Unlike models such as <a href="https://github.com/NVlabs/stylegan" target="_blank" rel="noopener noreferrer"><em>StyleGAN</em></a>, DALL-E is a a transformer language model that uses text and images as inputs to infer and generate a new image based on text inputs.</p>
<p>Here's what I did:</p>
<ol>
<li>Sign up for a free account to access OpenAI's <a href="https://openai.com/api/" target="_blank" rel="noopener noreferrer">API</a>.</li>
<li>Create an API key.</li>
<li>Setup <a href="https://conda.io/" target="_blank" rel="noopener noreferrer">Conda</a> and create a <a href="https://jupyter.org/" target="_blank" rel="noopener noreferrer">Jupyter</a> notebook.</li>
<li>In the first cell, call the <em>Create image</em> API adapting from the example code in the documentation:<!-- -->
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> openai</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">openai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">organization </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"org-abc.....def"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">openai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">api_key </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"averylongstringthatshouldbekeptasecret"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> openai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Image</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    prompt </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"A robot with a large speech bubble."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> n </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> size </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"1024x1024"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Done"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<!-- -->The parameter <code>prompt</code> is the descriptive text about the image that I'd like the model to generate. I am also requested for <code>10</code> images using the parameter <code>n</code>, and finally, chose the desired image size using the three available values: <code>256x256</code>, <code>512x512</code>, or <code>1024x1024</code>.</li>
<li>It's been a while since I played with image manipulation in Python and then displaying it in a notebook, so I enlisted ChatGPT's help and asked:<!-- -->
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">create code in python to display images loaded from a URL in a grid in a jupyter notebook</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<!-- -->And after thinking for a while it returned this:<!-- -->
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> IPython</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">display </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> display</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> PIL </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> Image</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> requests</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">urls </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'https://www.example.com/image1.jpg'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'https://www.example.com/image2.jpg'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">'https://www.example.com/image3.jpg'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'https://www.example.com/image4.jpg'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">images </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> url </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> urls</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> requests</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">url</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    images</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Image</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">content</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">widths</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> heights </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">zip</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">size </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> images</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">total_width </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">widths</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">max_height </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">heights</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">new_im </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Image</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">new</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'RGB'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">total_width</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> max_height</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">x_offset </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> im </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> images</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    new_im</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">paste</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">im</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x_offset</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    x_offset </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> im</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">size</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">display</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">new_im</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<!-- -->Great, but that's not going to work out-of-the-box, so I adapted it to suite my needs:<!-- -->
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> IPython</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">display </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> display</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> PIL </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> Image</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> requests</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">images </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> suggestion </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> response</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"data"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    _response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> requests</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">suggestion</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"url"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> stream </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    images</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Image</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">raw</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">widths</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> heights </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">zip</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">size </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> images</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">total_width </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">widths</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">max_height </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">heights</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">new_im </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Image</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">new</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'RGB'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">total_width</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> max_height</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">x_offset </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> im </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> images</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    new_im</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">paste</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">im</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x_offset</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    x_offset </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> im</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">size</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">display</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">new_im</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<!-- -->Running this cell generated a "thumbnail" gallery of size <code>10240x1024</code>.
<img decoding="async" loading="lazy" alt="Gallery of 10 images generated by DALL-E." src="https://fuzziebrain.com/assets/images/cell-two-output_1024x102-c5a642caacf475af5eac680a912e9dfc.jpg" width="1024" height="102" class="img_ev3q"></li>
<li>After identifying my choice, the first one, I ran the following code (that I got lazy and asked ChatGPT again for help) to save it on my workstation:<!-- -->
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">urllib</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">request</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">urlretrieve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">response</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"data"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"url"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"banner-image.jpg"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ol>
<p>Here's the result after cropping it to a ratio of 16:9 that I typically use for banner images:</p>
<p><img decoding="async" loading="lazy" alt="An image of a robot generated with a speech bubble using DALL-E" src="https://fuzziebrain.com/assets/images/banner-image-33f8722d5546f2ad2124ae851fa4dd12.png" width="1024" height="576" class="img_ev3q"></p>
<p>Neat huh?</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_BuS1"><p>I'll publish a full walk-through on what I did to setup Conda and Jupyter in my new section <a href="https://fuzziebrain.com/tech-tnt">Tech TnT</a> soon.</p></div></div>
<p>And what about textual content? In case you did not notice earlier, the blurb describing what transformers are were deliberately italicized. That's because I got ChatGPT to write a few words. I borrowed the idea from yet another great <a href="https://kozyrkov.medium.com/introducing-chatgpt-aa824ad89623" target="_blank" rel="noopener noreferrer">read</a> written by <a href="https://kozyrkov.medium.com/" target="_blank" rel="noopener noreferrer">Cassie Kozyrkov</a>.</p>
<p>Here's the prompt I used:</p>
<blockquote>
<p>Explain what are transformers in natural language processing using the style of Adrian Png.</p>
</blockquote>
<p>Did it express what I wanted to say? Perhaps, and here are some key aspects:</p>
<ul>
<li>Transformers are a type of neural network, and used for natural language processing tasks.</li>
<li>A new concept and meaning to the word "Attention", and how it's used in NLP.</li>
<li>List the types of use cases.</li>
</ul>
<p>Whenever I have a writers' block, I would pen my thoughts sparsely and randomly, and then reorder and pad them with the required sentence constructs. Let's try doing that, this time including the term <em>positional encoding</em>. Here's the updated prompt:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Write a passage explaining what transformers are in natural language processing. Capture the following key points:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- Transformers are a type of neural network, and used for natural language processing tasks.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- Mention positional encoding.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- A new concept and meaning to the word "Attention", and how it's used in NLP.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- List the types of use cases.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<blockquote>
<p>Transformers are a type of neural network architecture that have revolutionized the field of natural language processing. These models are designed to effectively process input sequences of variable length and generate output by using self-attention mechanisms. This allows the model to weigh the importance of different parts of the input when making predictions, which is crucial for understanding the context and meaning of words and sentences. A key component of transformers is the use of positional encoding, which allows the model to understand the order of the words in a sentence, even when the input is processed in parallel. This was a new concept and meaning to the word "Attention" when it was first introduced in NLP.</p>
<p>There are many use cases for transformers in NLP, including but not limited to machine translation, text summarization, question answering, and text-to-speech synthesis. The transformer architecture has been widely adopted in state-of-the-art models and has led to significant improvements in performance on a wide range of NLP tasks.</p>
</blockquote>
<p>I don't know if I could express it as well as it did, but hey, I like it. But do I like using it? Not really. I'm still not fully comfortable with using the text as-is. I like my content to be authentically "me" with my language flaws included. However, how is this different from engaging a professional copywriter to write an article based on the ideas you provide?</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="who-owns-the-content">Who Owns the Content<a href="https://fuzziebrain.com/content/id/2301#who-owns-the-content" class="hash-link" aria-label="Direct link to Who Owns the Content" title="Direct link to Who Owns the Content">​</a></h2>
<p>I think this is a question that is often ask and debated upon. Who owns the generated code, images, or text? For DALL-E, their <a href="https://labs.openai.com/policies/content-policy" target="_blank" rel="noopener noreferrer">content policy</a> and <a href="https://help.openai.com/en/articles/6468065-dall-e-content-policy-faq" target="_blank" rel="noopener noreferrer">FAQ</a> seems to say that you are free to use the generated images, however, my immediate concern was about the work that it was derived upon. That appears to be explained <a href="https://github.com/openai/DALL-E/blob/master/model_card.md" target="_blank" rel="noopener noreferrer">here</a>. I'm not good with legalese, and so, my level of comfort using the images generated is 4 on a scale of 1 to 10. And I'd presume that the concerns about generated code and text are very similar.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-caniuse-in-oracle-apex">The "CANIUSE" in Oracle APEX<a href="https://fuzziebrain.com/content/id/2301#the-caniuse-in-oracle-apex" class="hash-link" aria-label="Direct link to The &quot;CANIUSE&quot; in Oracle APEX" title="Direct link to The &quot;CANIUSE&quot; in Oracle APEX">​</a></h2>
<p>Yes! For those new to <a href="https://apex.oracle.com/" target="_blank" rel="noopener noreferrer">Oracle APEX</a>, this is a rapid application development platform that lets you create usable web applications very quickly. It won't take you long to create an intelligent web application that takes advantage of the OpenAI models. The models are exposed as REST endpoints, and Oracle APEX has the all-powerful <code>APEX_WEB_SERVICE</code> API that lets developers consume REST services.</p>
<p>A quick example of how I'd submit source code submitted through an Oracle APEX page and returned an explanation of what the code is attempting to do:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_prompt varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">32767</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> q</span><span class="token string" style="color:#e3116c">'[---</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c"> {{CODE}}</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c"> ---</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c"> Here'</span><span class="token plain">s what the code does:</span><span class="token string" style="color:#e3116c">']'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_request_body json_object_t</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_response clob</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_request_body :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> json_object_t</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_request_body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'model'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'code-davinci-002'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_request_body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'temperature'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.40</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_request_body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'prompt'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> apex_escape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">replace</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_prompt</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'{{CODE}}'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> :P2_SOURCE_CODE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_request_body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'stop'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'---'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_request_body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'max_tokens'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">250</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apex_debug</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apex_escape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">replace</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_prompt</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'{{CODE}}'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> :P2_SOURCE_CODE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">set_request_headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_name_01 </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Authorization'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_value_01 </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Bearer averylongstringthatshouldnotbehardcoded'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_name_02 </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'OpenAI-Organization'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_value_02 </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'org-donothardcodethisaswell'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_name_03 </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Content-Type'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_value_03 </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'application/json'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_response :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">make_rest_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_url </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'https://api.openai.com/v1/completions'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_http_method </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'POST'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_body </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_request_body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">to_string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">-- Code to parse the JSON response.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We can do a lot of cool stuff in terms of functionality. However, these OpenAI models are also capable of providing a quick review of the code. However, it seems like the Codex model is fairly limited when it comes to PL/SQL. I had better results running this through GPT-3 to get a security and performance review of this pipelined table function:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">or</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">replace</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> typ_animal_names </span><span class="token operator" style="color:#393A34">is</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">50</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">or</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">replace</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> find_animals_by_species</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p_species_name varchar2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> typ_animal_names</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  pipelined</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">is</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> animal </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> animal_name </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> animal </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> species </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p_species_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">loop</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pipe </span><span class="token keyword" style="color:#00009f">row</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">animal</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">animal_name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">loop</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And at the end, I provided this prompt:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">-- Suggest security and performance improvements to this code.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">---</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>What do you think it would say? Perhaps I should have masked the outputs and asked <a href="https://www.stevenfeuerstein.com/" target="_blank" rel="noopener noreferrer">Steven Feuerstein</a> for his opinion. He did <a href="https://blogs.oracle.com/connect/post/pipelined-table-functions" target="_blank" rel="noopener noreferrer">write</a> about this topic quite some time ago. Anyways, here's what I got from GPT-3 after a few tries.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">Security:</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">1. Add a check to ensure that the input parameter is valid and does not contain any malicious code.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">2. Add a check to ensure that the user has the necessary permissions to execute the function.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"></span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">Performance:</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">1. Create an index on the species column of the animal table.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">2. Use bind variables for the input parameter to ensure that the query is not re-parsed each time it is executed.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">3. Use a cursor to fetch the results from the query instead of looping through the results.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">4. Use bulk collect to fetch the results from the query instead of looping through the results.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">5. Use a PL/SQL table instead of a pipelined function*/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>If you're interested, here are the parameters I had set:</p>
<ul>
<li><strong>Model</strong> - <code>text-davinci-003</code></li>
<li><strong>Temperature</strong> - <code>0.3</code></li>
<li><strong>Maximum Length</strong> - <code>150</code></li>
</ul>
<p>It would be nice to automate this as ChatGPT suggested, but I find the responses are not consistent, and sometimes, a little odd. That said, it would still be a good first attempt at scrutinizing the code. Consider it a helper when paired with a more experienced developer.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="pitting-against-oci-ai-services">Pitting Against OCI AI Services<a href="https://fuzziebrain.com/content/id/2301#pitting-against-oci-ai-services" class="hash-link" aria-label="Direct link to Pitting Against OCI AI Services" title="Direct link to Pitting Against OCI AI Services">​</a></h2>
<p>I asked ChatGPT to:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">List all possible uses of OpenAI transformers.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And here's the response I received:</p>
<blockquote>
<ol>
<li>Natural Language Processing (NLP) tasks such as language translation, text summarization, and sentiment analysis.</li>
<li>Chatbots and virtual assistants for customer service and support.</li>
<li>Text-to-speech and speech-to-text applications.</li>
<li>Image and video captioning.</li>
<li>Language generation for creative writing and content creation.</li>
<li>Automated question answering systems.</li>
<li>Automatic text classification and tagging.</li>
<li>Text completion and prediction.</li>
<li>Named Entity Recognition (NER) and part-of-speech tagging.</li>
<li>Text-based search and retrieval systems.</li>
<li>Semantic similarity and relatedness measurements.</li>
<li>Personalization and recommendation systems.</li>
<li>Language understanding for intelligent agents and robots.</li>
<li>Text-based summarization of news articles and other long-form content.</li>
<li>Text-based sentiment analysis for social media monitoring and marketing.</li>
</ol>
</blockquote>
<p>The final topic I'd like to explore is how OpenAI's product offerings compare to the services provided by <a href="https://www.oracle.com/artificial-intelligence/" target="_blank" rel="noopener noreferrer">Oracle AI</a>. And to do that, let's first attempt to prune the list of 15 use cases into these buckets:</p>
<ul>
<li>Question and answer</li>
<li>Content (text, images, and code) generation</li>
<li>Text-to-speech</li>
<li>Speech-to-text</li>
<li>Named entity recognition</li>
<li>Sentiment analysis</li>
<li>Image and video captioning</li>
<li>Language translation</li>
<li>Text/document classification</li>
<li>Keyword extraction and tagging</li>
<li>Text summarization</li>
</ul>
<table><thead><tr><th>Functionality</th><th>Language</th><th>Speech</th><th>Vision</th><th>Document Understanding</th></tr></thead><tbody><tr><td>Question and answer</td><td><i class="rating fa-solid fa-circle-question"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td></tr><tr><td>Content generation</td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td></tr><tr><td>Text-to-speech</td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td></tr><tr><td>Speech-to-text</td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-check"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td></tr><tr><td>Named entity recognition</td><td><i class="rating fa-solid fa-circle-check"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td></tr><tr><td>Sentiment analysis</td><td><i class="rating fa-solid fa-circle-check"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td></tr><tr><td>Image and video captioning</td><td><i class="rating fa-solid fa-circle-question"></i></td><td><i class="rating fa-solid fa-circle-question"></i></td><td><i class="rating fa-solid fa-circle-question"></i></td><td><i class="rating fa-solid fa-circle-question"></i></td></tr><tr><td>Language translation</td><td><i class="rating fa-solid fa-circle-check"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td></tr><tr><td>Text/document classification</td><td><i class="rating fa-solid fa-circle-check"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-check"></i></td></tr><tr><td>Keyword extraction and tagging</td><td><i class="rating fa-solid fa-circle-check"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td></tr><tr><td>Text summarization</td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td><td><i class="rating fa-solid fa-circle-xmark"></i></td></tr></tbody></table>
<p>The areas where Oracle AI is clearly lacking are in content generation and text summarization. As to "text-to-speech", it does not appear to be in the list of APIs that OpenAI has, so I wonder where that suggestion came from. Perhaps ChatGPT is pulling a fast one?</p>
<p>So, I thought I'd ask ChatGPT the same question that I'm trying to answer:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">How does Oracle AI compare with ChatGPT?</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And this is what it said:</p>
<blockquote>
<p>Oracle AI and ChatGPT are both natural language processing (NLP) technologies, but they have different capabilities and are used for different purposes.</p>
<p>ChatGPT is a transformer-based language model developed by OpenAI. It is primarily used for generating human-like text, such as in chatbots, virtual assistants, and language generation tasks. ChatGPT is trained on a large dataset of text, allowing it to generate text that is often indistinguishable from human-written text.</p>
<p>Oracle AI, on the other hand, is a collection of AI-based products and services offered by Oracle Corporation. It includes several NLP-based technologies, such as natural language understanding, text analytics, and chatbot building. Oracle AI is designed to be used in enterprise environments and can be integrated with other Oracle products and services.</p>
<p>In summary, ChatGPT is more focused on language generation, while Oracle AI is a broader set of AI-based products and services that can include NLP capabilities. Oracle AI is more focused on enterprise and business use cases, while ChatGPT is focused more on generating human-like text.</p>
</blockquote>
<p>Apart from the first paragraph, I'd say that's mostly factual and accurate. Hence, I can only conclude that it's a rather difficult comparison to make. Duh! My main goal here was really to highlight how we could also use Oracle AI to provide solutions for some of these use cases.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://fuzziebrain.com/content/id/2301#summary" class="hash-link" aria-label="Direct link to Summary" title="Direct link to Summary">​</a></h2>
<p>Cool as this technology might be, there's a nagging fear that pretty soon, IT practitioners, like myself, would be replaced by AI. I think that fear is valid. However, as Sau Sheong aptly describes ChatGPT, these are tools and we should embrace and empower ourselves to do our jobs faster and better. It was only a few years ago when Oracle launched the Autonomous Database product. Back <a href="https://www.forbes.com/sites/oracle/2018/12/19/2018-the-year-the-database-went-autonomous/" target="_blank" rel="noopener noreferrer">then</a>, it was touted to be intelligent and sent shivers down the DBAs' spine. After almost four years, DBAs are still needed even when a company's running only ADBs in their environment. What it has done was take away some of the mundane tasks like database patching and upgrading (an introduced new ones) as advertised. Freeing us up to perform other functions, be innovative, and allowed us to discover other efficiencies and approaches to improve business operations.</p>
<p>I have used ChatGPT in the past few days to help me in certain tasks such as writing a French version of an email, and constructing some of parts of this blog post. I still had to validate and adapt the outputs, but more importantly, like in the case of writing this blog post, compose the flow and piece them altogether for the final content. I don't think ChatGPT is quite ready to replicate my thought processes, feelings/opinions, and validate the story I wished to tell.</p>
<p>And my last words are to thank the brilliant brains at OpenAI, Google, and all over the world for their contributions to computer science so that I can write this blog post with a bit more flavour. But please try not to make Judgement Day a reality. Thank you!</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Photo by <a href="https://unsplash.com/es/@lunarts?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Volodymyr Hryshchenko</a> on <a href="https://unsplash.com/photos/D5_cfqMAY0Y?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></p></div></div>]]></content:encoded>
            <category>chatgpt</category>
            <category>oracle cloud</category>
            <category>artificial intelligence</category>
            <category>ai</category>
            <category>machine learning</category>
            <category>ml</category>
            <category>transformers</category>
            <category>natural language processing</category>
            <category>nlp</category>
            <category>generative models</category>
            <category>orclapex</category>
            <category>oracle apex</category>
            <category>plsql</category>
        </item>
        <item>
            <title><![CDATA[Wrapping Up 2022]]></title>
            <link>https://fuzziebrain.com/content/id/2202</link>
            <guid>https://fuzziebrain.com/content/id/2202</guid>
            <pubDate>Sun, 18 Dec 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Set Your Sights to Greater Heights]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="Set Your Sights to Greater Heights" src="https://fuzziebrain.com/assets/images/northern-lights-the-twenty-four-4e60965c73f3b835db48972398a071d8.jpg" width="5952" height="2976" class="img_ev3q"></p>
<p>A few weeks ago, I was fortunate to accompany a group of twenty-four exchange students from a local university. Some of them came from countries as far as Singapore. While up in the North, the <em>Aurora Borealis</em> might be a common sight, for tourists, it is still pretty much a calculated risk that it might be a fruitless journey. The night skies were overcast on the first night that they arrived, and it was bitterly cold for folks used to tropical weather, but they persisted. On their second night, there was a minor emergency that delayed a few of them from heading out to the remote site for viewing the <em>Northern Lights</em>, but again, they were determined. Within minutes of their arrival at the viewing site, there was a sudden break in the cloudy skies that coincided with a display of greens and purples that illuminated in the heavens. What a treat!</p>
<p>As we near the end of 2022, I'd like to reflect on the year's challenges and milestones.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="published-a-second-book">Published a Second Book<a href="https://fuzziebrain.com/content/id/2202#published-a-second-book" class="hash-link" aria-label="Direct link to Published a Second Book" title="Direct link to Published a Second Book">​</a></h2>
<p>In 2021, I had started work and finished two chapters for a would be <em>Pro Oracle Application Express</em> along with a few other community members. However, that book never materialized and was cancelled by the publisher. Not willing to throw away the work that I had done, I did the unthinkable of asking the publisher if I could complete a book under a very different title. One that would cover different <a href="https://www.oracle.com/cloud" target="_blank" rel="noopener noreferrer"><em>Oracle Cloud Infrastructure</em></a> (OCI) services that could be used in an <a href="https://apex.oracle.com/" target="_blank" rel="noopener noreferrer"><em>Oracle Application Express</em></a> (APEX) application.</p>
<p>Midway through the book, I was told that the esteemed <a href="https://fi.linkedin.com/in/helihelskyaho" target="_blank" rel="noopener noreferrer">Heli Helskyaho</a> would be the book's technical reviewer. And since I had some chapters on integrating APEX with OCI AI Service and Machine Learning planned, I figured, why not ask if she would be more interested on being a co-author instead. That was the best decision ever! Heli's a great person to work with. She's dedicated, hardworking, and always optimistic. I don't think I would have been able to complete the book on time had she not gotten involved.</p>
<p><img decoding="async" loading="lazy" alt="Book Cover" src="https://fuzziebrain.com/assets/images/978-1-4842-8170-3-094ac9f31d9ecd1bdbca443782c18185.jpg" width="827" height="1180" class="img_ev3q"></p>
<p>We published the book <a href="https://link.springer.com/book/10.1007/978-1-4842-8170-3" target="_blank" rel="noopener noreferrer"><em>Extending Oracle Application Express with Oracle Cloud Features</em></a> in September 2022. Book projects are very demanding, and more often than not, would fail without strong external support. I am first of all very grateful to Heli for sharing this burden with me. I also want to thank <a href="https://www.linkedin.com/in/gennick" target="_blank" rel="noopener noreferrer">Jonathan Gennick</a>, who has since moved from Apress to Manning. Jonathan's a great editor to work with and very experienced. He's been a great guide for both the books I published through Apress, and will miss working with him.</p>
<p>Anyone who actively writes on the OCI without company support, and <strong>was</strong> not an <a href="https://ace.oracle.com/" target="_blank" rel="noopener noreferrer">Oracle ACE</a> Director, would know that it is tough justifying the monetary costs of experimenting with its services. Fortunately for us, we had some support through <a href="https://linktr.ee/iaasgeek" target="_blank" rel="noopener noreferrer">Guillermo Ruiz</a> and <a href="https://www.linkedin.com/in/boenglish" target="_blank" rel="noopener noreferrer">Bo English-Wiczling</a>. Not just with resources, but the access to Oracle Product Managers and early access to OCI Services. Thank you "G" and Bo.</p>
<p>Finally, much thanks to <a href="https://www.linkedin.com/in/karen-cannell-thtech" target="_blank" rel="noopener noreferrer">Karen Cannell</a> for replacing Heli as the book's technical reviewer. Thanks for taking time to read through all our chapters thoroughly, and offering many value advices and suggestion to improve the quality of the publication.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="travels-and-conferences">Travels and Conferences<a href="https://fuzziebrain.com/content/id/2202#travels-and-conferences" class="hash-link" aria-label="Direct link to Travels and Conferences" title="Direct link to Travels and Conferences">​</a></h2>
<p>It was stressful, but refreshing, to be travelling to conferences again. This year, I was fortunate to be at two: <a href="https://kscope22.odtug.com/" target="_blank" rel="noopener noreferrer">Kscope22</a> and <a href="https://www.oracle.com/cloudworld/" target="_blank" rel="noopener noreferrer">Oracle CloudWorld 2022</a> (OCW22).</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="kscope22">Kscope22<a href="https://fuzziebrain.com/content/id/2202#kscope22" class="hash-link" aria-label="Direct link to Kscope22" title="Direct link to Kscope22">​</a></h3>
<p><img decoding="async" loading="lazy" alt="Final Approach to Dallas Fort Worth Internal Airport" src="https://fuzziebrain.com/assets/images/kscope22-aerial-approach-12ff69b605729b55e2f75ba7032dafc3.jpeg" width="4032" height="2268" class="img_ev3q"></p>
<p>It was almost customary to attend one of the regions most important annual technical conferences of the year, until the pandemic. After a two-year hiatus, we were once again able to gather to share knowledge, and meet old friends and colleagues. Here's the scene where Oracle ACEs were assembled for their annual photo op!</p>
<div class="container_yPU9"><iframe width="560" height="315" src="https://www.youtube.com/embed/F2OgM7XzZfg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe></div>
<p>This year, I delivered two presentations: <em>Build Intelligent APEX Applications Now!</em> and <em>Packing Your Bags for a Journey to the Metaverse</em>. Both are topics that I am extremely passionate about. I am very grateful for everyone who attended my sessions, and the very flattering evaluation scores. One of which resulted in this very, very cool prize!</p>
<p><img decoding="async" loading="lazy" alt="Award for Best Speaker in the Emerging Technologies track at Kscope22" src="https://fuzziebrain.com/assets/images/kscope22-et-best-speaker-d9ffd4caaba723b5f471ecbc66c77381.jpeg" width="4032" height="2268" class="img_ev3q"></p>
<p>I was also extremely glad that this year, we had more attendees from the Faculty of Medicine's <a href="https://mednet.med.ubc.ca/resources/it/" target="_blank" rel="noopener noreferrer">Digital Solutions</a> at the <a href="https://www.ubc.ca/" target="_blank" rel="noopener noreferrer">University of British Columbia</a>, and even had one of them present at OpenMic Night!</p>
<p><img decoding="async" loading="lazy" alt="A representative from MedIT presenting at OpenMic Night" src="https://fuzziebrain.com/assets/images/kscope22-medit-at-openmic-night-1fbe1be50281a5cee743c53f20f093be.jpg" width="3833" height="2156" class="img_ev3q"></p>
<p>I'm glad that APEX is gaining more traction at the university, not just for research, but in education and operations.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ocw22">OCW22<a href="https://fuzziebrain.com/content/id/2202#ocw22" class="hash-link" aria-label="Direct link to OCW22" title="Direct link to OCW22">​</a></h3>
<p>The last time I attended OpenWorld was in 2014, before I joined <a href="https://www.insum.ca/" target="_blank" rel="noopener noreferrer">Insum</a>. I miss San Francisco, but Las Vegas can be just as fun (./assets/and expensive). I still reminisce the village atmosphere around the Moscone Center though and smell of seawater.</p>
<p>This year, I fulfilled a lifelong dream: to speak at the conference!</p>
<p><img decoding="async" loading="lazy" alt="OCW22 Speaker Badge" src="https://fuzziebrain.com/assets/images/ocw22-speaker-badge-075b0b693d060f078f7808a750fc477e.jpeg" width="4032" height="2268" class="img_ev3q"></p>
<p>Special thanks to the Oracle DevRel <a href="https://developer.oracle.com/community/meet-the-devrel-team.html" target="_blank" rel="noopener noreferrer">team</a> for inviting me to present on <em>Solving Everyday Problems with Oracle Cloud</em>. It was pleasure delivering this session to a few great friends in the community, and I hope everyone enjoyed listening as much as I did preparing for the presentation and demos.</p>
<p>As with all conferences, it was also a great opportunity to meet other Oracle ACES, but most importantly, my co-author and mentor!</p>
<p><img decoding="async" loading="lazy" alt="Wefie with Heli" src="https://fuzziebrain.com/assets/images/ocw22-oracle-ace-dinner-15f812ccb2bb0f861b7a32317e0a3469.jpeg" width="3264" height="1836" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="singapore">Singapore<a href="https://fuzziebrain.com/content/id/2202#singapore" class="hash-link" aria-label="Direct link to Singapore" title="Direct link to Singapore">​</a></h2>
<p>Perhaps the most important trip I had to make this year was the one to Singapore in late August.</p>
<p>In late 2021, I was delighted that the company was ready to expand to the Asia Pacific (APAC) market, with our regional base in my home country, Singapore. The primary reason for our trip was to officiate and sign a Memorandum of Understanding (./assets/MoU) between <a href="https://www.nyp.edu.sg/" target="_blank" rel="noopener noreferrer">Nanyang Polytechnic</a> (NYP) and Insum.</p>
<p><img decoding="async" loading="lazy" alt="MoU signed between NYP and Insum" src="https://fuzziebrain.com/assets/images/nyp-mou-cdcee5f4fc18cb19b4e0c39ab11065da.jpeg" width="4032" height="2268" class="img_ev3q"></p>
<p>We also took the opportunity to introduce APEX and OCI to the local community through a half-day seminar with speakers from Oracle, NYP, and Insum.</p>
<p><img decoding="async" loading="lazy" alt="Introducing APEX and OCI" src="https://fuzziebrain.com/assets/images/orclapex-in-singapore-seminar-41338ecd796ea1bff02d083c972577b7.jpeg" width="4032" height="2268" class="img_ev3q"></p>
<p>It was also a great opportunity to meet the NYP interns that we have trained and continue to train. Here's a very touching virtual meeting between the team in Singapore, and the past and present CEOs of the company.</p>
<p><img decoding="async" loading="lazy" alt="Virtual team meeting at a shopping mall" src="https://fuzziebrain.com/assets/images/saying-hi-in-singapore-f6eedf800df89b2c88164f9168fd837d.jpeg" width="4032" height="2268" class="img_ev3q"></p>
<p>There was also great team-building activities for the Singapore and Canadian leadership teams. Check this out:</p>
<div class="container_yPU9"><iframe width="560" height="315" src="https://www.youtube.com/embed/Zv_xHRgwsvM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe></div>
<p>Finally, a little learning lesson by observing the <a href="https://www.ana.co.jp/" target="_blank" rel="noopener noreferrer">All Nippon Airways</a> (ANA) crew members prepare the flight for takeoff and landing. It begins with a preflight huddle, and then on board, a systematic approach including pointing at the obvious, to ensure that the plane and passengers are safe. We need this dedication to task and non-assuming attitude when readying applications and infrastructure for production release.</p>
<p><img decoding="async" loading="lazy" alt="A preflight huddle for crew members" src="https://fuzziebrain.com/assets/images/ana-dedication-to-tasks-7af50017ddfce806baabb9c18fb9a6ed.jpg" width="1991" height="1120" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="oracle-ace-director-award">Oracle ACE Director Award<a href="https://fuzziebrain.com/content/id/2202#oracle-ace-director-award" class="hash-link" aria-label="Direct link to Oracle ACE Director Award" title="Direct link to Oracle ACE Director Award">​</a></h2>
<p>To cap off a great year, I was deeply honoured to be appointed as an Oracle ACE Director.</p>
<p><img decoding="async" loading="lazy" alt="Oracle ACE Director award announcement, graphic courtesy of the Oracle ACE Program" src="https://fuzziebrain.com/assets/images/aced-award-9dfbf80af1a0334033ceca4bb9ab4020.jpg" width="720" height="360" class="img_ev3q"></p>
<p>I wanted again to express my deep gratitude to:</p>
<ul>
<li>Heli for nominating me for the award, but more importantly, her friendship and mentorship. You have inspired me since the day I received an autographed copy of your book <em>Oracle SQL Developer Data Modeler for Database Design Mastery</em>.</li>
<li>The Oracle peeps who supported my nomination: <a href="https://blogs.oracle.com/authors/monica-godoy" target="_blank" rel="noopener noreferrer">Monica Godoy</a>, <a href="https://blogs.oracle.com/authors/chaitanya-koratamaddi" target="_blank" rel="noopener noreferrer">Chaitanya Koratamaddi</a>, and <a href="https://sg.linkedin.com/in/joshua-b-chua" target="_blank" rel="noopener noreferrer">Joshua Chua</a>. Thank you for your confidence in me, and I look forward to working with you more closely in 2023 to spark greater interest in APEX and the OCI, most especially in the Asia Pacific region.</li>
<li><a href="https://www.linkedin.com/in/opalalapat/" target="_blank" rel="noopener noreferrer">Opal Alapat</a>, for nominating and starting my journey in the Oracle ACE program as an associate. I cannot thank you enough for how joining the program has transformed my life in many ways.</li>
<li><a href="https://www.linkedin.com/in/martingiffydsouza" target="_blank" rel="noopener noreferrer">Martin D'Souza</a>, for getting me involved in community a decade ago. Wow, time flies by very quickly! Thank you for your friendship, encouragement, and always challenging me to go further, and further.</li>
</ul>
<p>In 2023, I hope to pay it forward. If you are an Oracle technologist interested in community work and looking to join the Oracle ACE program, please do not hesitate to <a href="https://mastodon.social/@fuzziebrain" target="_blank" rel="noopener noreferrer">reach out to me</a>. I'd be happy to share my experience and guide you through this journey.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-northern-lights">The Northern Lights<a href="https://fuzziebrain.com/content/id/2202#the-northern-lights" class="hash-link" aria-label="Direct link to The Northern Lights" title="Direct link to The Northern Lights">​</a></h2>
<p>The banner image for this post was from a 360 photo. If you are interested, here's a <a href="https://photos.app.goo.gl/58qyJZRPF2rHwUGm7" target="_blank" rel="noopener noreferrer">link</a> to view it in its original format.</p>
<p>A little thought from a First Nations tour guide about the incredible natural phenomenon:</p>
<p><em>"In our indigenous culture, when the Aurora is moving very fast, my grandmother told me that somebody on the other side is sending us a message saying that you don't need to be sad anymore. We had some good times. Think of those good times. We are going to meet again someday, but right now, don't be sad because I'm over here, [and] you're there. Continue to live a good life while you're there, and we'll meet again someday."</em> ~ Joe Buffalo Child [Source: <a href="https://www.youtube.com/watch?v=mp7ucghevOw" target="_blank" rel="noopener noreferrer">Meet the North</a>]</p>
<p>Joel, I missed you at all the events I attended this year. Meeting you in person has always been the highlight of my trips to Kscope and OpenWorld. I hope I have made you proud.</p>]]></content:encoded>
            <category>oracle</category>
            <category>community</category>
            <category>oracleace</category>
            <category>getinvolved</category>
            <category>bethelight</category>
        </item>
        <item>
            <title><![CDATA[Speak My Language]]></title>
            <link>https://fuzziebrain.com/content/id/2201</link>
            <guid>https://fuzziebrain.com/content/id/2201</guid>
            <pubDate>Tue, 11 Oct 2022 00:00:00 GMT</pubDate>
            <description><![CDATA["Welcome" in multiple languages.]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="&amp;quot;Welcome&amp;quot; in multiple languages." src="https://fuzziebrain.com/assets/images/welcome-g84fb3b5fb_1280_853-e56cdc7cf28845a020a2649320f26e21.jpg" width="1280" height="853" class="img_ev3q"></p>
<p>It's been too long since I last posted anything on my blog. Thanks to <a href="https://twitter.com/oraclebase" target="_blank" rel="noopener noreferrer">Tim Hall</a>, I am writing again, after a long pause, to celebrate <a href="https://oracle-base.com/blog/2022/09/27/joel-kallman-day-2022-announcement/" target="_blank" rel="noopener noreferrer">Joel Kallman Day 2022</a>. My contribution today is about my deep appreciation for the team behind the <a href="https://oracle.com/cloud" target="_blank" rel="noopener noreferrer">Oracle Cloud Infrastructure</a> (OCI) <a href="https://www.oracle.com/artificial-intelligence/ai-services/" target="_blank" rel="noopener noreferrer">AI Services</a>. Below is a quick scoop on how I have used these services to improve on my <a href="https://developer.oracle.com/tutorials/learning-languages-with-oracle-cloud/" target="_blank" rel="noopener noreferrer">OCI-powered e-flashcard</a> for learning new words in a different language. I will be doing a quick demonstration (session LRN3673) of this work at the upcoming <a href="https://www.oracle.com/cloudworld/" target="_blank" rel="noopener noreferrer">Oracle CloudWorld 2022</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-e-flashcard-solution">The E-Flashcard Solution<a href="https://fuzziebrain.com/content/id/2201#the-e-flashcard-solution" class="hash-link" aria-label="Direct link to The E-Flashcard Solution" title="Direct link to The E-Flashcard Solution">​</a></h2>
<p>A <strong>TL;DR</strong> for my initial article on the e-flashcard solution.</p>
<p>On my fridge, I have a <a href="https://shop.m5stack.com/collections/m5-controllers/products/m5paper-esp32-development-kit-v1-1-960x540-4-7-eink-display-235-ppi" target="_blank" rel="noopener noreferrer">M5Paper</a> that pulls a random English word or phrase from an <a href="https://www.oracle.com/autonomous-database/" target="_blank" rel="noopener noreferrer">Oracle Autonomous Database</a>. The word/phrase and the Japanese translation are entered using an <a href="https://apex.oracle.com/" target="_blank" rel="noopener noreferrer">Oracle Application Express</a> (APEX) and exposed as a REST service using <a href="https://www.oracle.com/database/technologies/appdev/rest.html" target="_blank" rel="noopener noreferrer">Oracle REST Data Services</a>. The translation task was performed manually using a tool like <a href="https://translate.google.com/" target="_blank" rel="noopener noreferrer">Google Translate</a>.</p>
<p>Then <a href="https://twitter.com/dgielis" target="_blank" rel="noopener noreferrer">Dimitri Gielis</a> made this suggestion:</p>
<p><img decoding="async" loading="lazy" alt="Source: https://twitter.com/dgielis/status/1358781075879845888" src="https://fuzziebrain.com/assets/images/dgielis-tweet-e572365163a8c8516a86a0c0ef05b7a4.png" width="1188" height="416" class="img_ev3q"></p>
<p>The second version of my implementation isn't quite driven by <a href="https://developer.amazon.com/alexa" target="_blank" rel="noopener noreferrer">Amazon Alexa</a> yet, but at least for the web interface, I had added a voice input functionality that allowed me to speak a word and translate it to a language of my choosing.</p>
<blockquote>
<p>Voice =&gt; APEX =&gt; Speech Service =&gt; Language Service =&gt; DB =&gt; ORDS =&gt; M5Paper</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="speech-service">Speech Service<a href="https://fuzziebrain.com/content/id/2201#speech-service" class="hash-link" aria-label="Direct link to Speech Service" title="Direct link to Speech Service">​</a></h2>
<p>Released in early 2022, the <a href="https://www.oracle.com/artificial-intelligence/speech/" target="_blank" rel="noopener noreferrer">Speech Service</a> is one of several OCI's AI Services that uses Automatic Speech Recognition (ASR) technology to transcribe audio content to text. Initially, the service was very limited in what audio formats it received, specifically, it had to be single channel at a sample rate of 16,000 Hz, encoded in <a href="https://wikipedia.org/wiki/Pulse-code_modulation" target="_blank" rel="noopener noreferrer">PCM</a>, and saved in the <a href="https://wikipedia.org/wiki/WAV" target="_blank" rel="noopener noreferrer">WAV</a> format.</p>
<p>The strict requirements made it difficult to implement using a purely web-based interface. One would have to capture the audio using the <a href="https://developer.mozilla.org/docs/Web/API/MediaRecorder" target="_blank" rel="noopener noreferrer">Media Recorder API</a> and any of its <a href="https://developer.mozilla.org/en-US/docs/Web/Media/Formats/codecs_parameter" target="_blank" rel="noopener noreferrer">supported codecs</a>, transcode it using <a href="https://ffmpeg.org/" target="_blank" rel="noopener noreferrer">FFmpeg</a>, executed using <a href="https://www.oracle.com/cloud/cloud-native/functions/" target="_blank" rel="noopener noreferrer">Oracle Cloud Functions</a>, and then submitted a Speech transcription job.</p>
<p>I then looked at other solutions that used Web Assembly to perform the audio format purely in the browser, such as <a href="https://kbumsik.io/opus-media-recorder/" target="_blank" rel="noopener noreferrer">Opus MediaRecorder</a> and <a href="https://ffmpegwasm.netlify.app/" target="_blank" rel="noopener noreferrer">FFMPEG.WASM</a>. Unfortunately, I ran out of time, got busy, and had to put this project on hold.</p>
<p>Thankfully, months later, a newer version of the service was <a href="https://blogs.oracle.com/ai-and-datascience/post/oci-speech-now-supports-seven-new-languages-and-additional-input-formats" target="_blank" rel="noopener noreferrer">released</a>. Apart from the new languages supported, it also allowed users to submit audio files in a other formats, several of which are supported by the Media Recorder API. Hurrah!</p>
<p>I kept most of the initial prototype and updated the <em>Ajax Callback</em>.</p>
<p><img decoding="async" loading="lazy" alt="Recording audio through an APEX modal page." src="https://fuzziebrain.com/assets/images/audio-record-ui-6b68311c224e247da0d136dbcbb93df2.png" width="2560" height="1920" class="img_ev3q"></p>
<p>I will avoid making this post unreadable by not listing the source code of the PL/SQL procedure I wrote, but here's the pseudocode:</p>
<ol>
<li>Upload the recorded audio as a BLOB and store it in OCI <a href="https://www.oracle.com/cloud/storage/object-storage/" target="_blank" rel="noopener noreferrer">Object Storage</a>.</li>
<li>Create a transcription job.</li>
<li>If successful, query the transcription job using the job's <a href="https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm" target="_blank" rel="noopener noreferrer">OCID</a>.</li>
<li>Loop until the job state is either <code>SUCCEEDED</code>, <code>FAILED</code>, or <code>CANCELED</code>.</li>
<li>If the state is <code>SUCCEEDED</code>, then get the transcription job's task and get the location of the results stored as an object in the Object Storage.</li>
<li>Retrieve the transcription results stored as JSON.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="language-service-v2">Language Service "V2"<a href="https://fuzziebrain.com/content/id/2201#language-service-v2" class="hash-link" aria-label="Direct link to Language Service &quot;V2&quot;" title="Direct link to Language Service &quot;V2&quot;">​</a></h2>
<p>In Chapter 4 of the book <a href="https://link.springer.com/book/10.1007/978-1-4842-8170-3" target="_blank" rel="noopener noreferrer">"Extending Oracle Application Express with Oracle Cloud Features "</a>, I describe how you can host and use a language translation service using a few OCI resources and an open sourced engine like <a href="https://libretranslate.com/" target="_blank" rel="noopener noreferrer">LibreTranslate</a>. Before getting limited access to the next generation of Language Service, my solution looked like this:</p>
<p><img decoding="async" loading="lazy" alt="Initial approach to language translation." src="https://fuzziebrain.com/assets/images/translation-past-063b92d88c5945f71bf3a93a5a2e56db.png" width="2320" height="496" class="img_ev3q"></p>
<p>Since then, I have abandoned all of that for a simplified solution using the Language pre-trained models for text translation. As there is limited availability, so is the documentation. Fortunately, the service also comes with an OCI Console-based user interface to try out the service. With that, I was able to figure out what I needed to call the service in the APEX application through REST. Believe me, it's not difficult.</p>
<p>To the amazing people behind these products. Thank you very much.</p>
<p>これらの製品の背後にある素晴らしい人々へ。本当にありがとう。(<em>Transcribed and translated by OCI</em>)</p>
<blockquote>
<u>Photo Credits</u>
<p>This post's banner photo is by <a href="https://pixabay.com/users/tumisu-148124/">Tumisu</a> on <a href="https://pixabay.com/illustrations/welcome-words-greeting-language-905562/">Pixabay</a>.</p>
</blockquote>]]></content:encoded>
            <category>oracle cloud</category>
            <category>artificial intelligence</category>
            <category>machine learning</category>
            <category>orclapex</category>
            <category>oci</category>
            <category>natural language processing</category>
        </item>
        <item>
            <title><![CDATA[Will You Love Me Tomorrow]]></title>
            <link>https://fuzziebrain.com/content/id/2014</link>
            <guid>https://fuzziebrain.com/content/id/2014</guid>
            <pubDate>Sun, 17 Oct 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Crystal ball insights into tomorrow?]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="Crystal ball insights into tomorrow?" src="https://fuzziebrain.com/assets/images/drew-beamer-xU5Mqq0Chck-1280x800-2c1318c4fa611eb15ac0371c61e649c6.png" width="1280" height="800" class="img_ev3q"></p>
<blockquote>
<p>Is this a lasting treasure, or just a moment's pleasure?</p>
<p>~ <em>Will You Love Me Tomorrow</em>. The Shirelles.</p>
</blockquote>
<p>As a technologist, we are constantly bombarded with buzzwords and terms like blockchain, IoT, AI, machine learning, quantum computing, and so much more! I love buzzwords, and wholeheartedly enjoy deciphering the future of technology and work. Hence, for the last few years, I have been a proud member of the committee that peruses and selects abstracts for the Kscope Emerging Technology (ET) track. For next year's <a href="https://kscope22.odtug.com/" target="_blank" rel="noopener noreferrer">Kscope22</a>, I am honoured to be leading the team that will help select a series of sessions that are visionary, and hopefully, give us guidance on what to expect in the years ahead.</p>
<p>For the last few Kscopes, ET sessions generally fell under this selection criteria:</p>
<ol>
<li>About the following subject(s):<!-- -->
<ul>
<li>Artificial Intelligence and Machine Learning</li>
<li>Blockchain</li>
<li>Internet of Things (IoT)</li>
<li>Serverless Computing</li>
<li>Chatbots</li>
</ul>
</li>
<li>Involve Oracle technology</li>
</ol>
<p>Today, many of these exciting technologies have gone mainstream, and so, we have decided to give the ET track a facelift. For next year's conference, we have decided to focus on new subject areas. They are:</p>
<ul>
<li>AI Engineering</li>
<li>AIOps</li>
<li>Digital Twins</li>
<li>Distributed Cloud</li>
<li>General Advancements in Technology</li>
<li>Hyperautomation</li>
<li>Internet of Behaviours</li>
<li>Next-Generate Security</li>
<li>Quantum Computing</li>
<li>Sustainability</li>
<li>Total Experience</li>
</ul>
<p>You can find this list and a brief description of each theme <a href="https://kscope22.odtug.com/page/kscope22-tracks#emergingtech" target="_blank" rel="noopener noreferrer">here</a>.</p>
<p>I should also emphasize that the use of Oracle technology is <strong>NOT</strong> required. Sure it would be nice that it does, but it is important that we look beyond our comfort zones. If you are not an Oracle professional but have something novel to share, then I strongly encourage you to submit an abstract. This is also a great opportunity for researchers, post-docs, and post-graduate students to share your research. Getting a talk accepted means a <em>FREE</em> ticket (air tickets and <a href="https://kscope22.odtug.com/page/kscope22-location" target="_blank" rel="noopener noreferrer">luxurious accommodation</a> are not included) to attend one of the top tech conferences in the world. And for those of you who are, go through your address books and LinkedIn connections lists, and spread the word. Invite a luminary to join us in Texas next year! Or, if you prefer, you may send <a href="https://twitter.com/fuzziebrain" target="_blank" rel="noopener noreferrer">me</a> suggestions <em>via</em> Twitter.</p>
<p>Stay healthy and enjoy this rendition of the song <em>Will You Love Me Tomorrow</em> by one of my favourite songwriters, <a href="https://wikipedia.org/wiki/Carole_King" target="_blank" rel="noopener noreferrer">Carole King</a>.</p>
<div class="container_yPU9"><iframe width="560" height="315" src="https://www.youtube.com/embed/TxWrUtbzlLM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe></div>
<blockquote>
<u>Photo Credits</u>
<p>This post's banner photo is by <a href="https://unsplash.com/@drew_beamer?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Drew Beamer</a> on <a href="https://unsplash.com/s/photos/future?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a>.</p>
</blockquote>]]></content:encoded>
            <category>odtug</category>
            <category>kscope</category>
            <category>kscope22</category>
            <category>oracle</category>
            <category>future</category>
            <category>abstract</category>
            <category>speak</category>
            <category>presentation</category>
            <category>community</category>
            <category>emerging technology</category>
            <category>digital transformation</category>
            <category>lifelong learning</category>
        </item>
        <item>
            <title><![CDATA[Secret Agent APEX]]></title>
            <link>https://fuzziebrain.com/content/id/2013</link>
            <guid>https://fuzziebrain.com/content/id/2013</guid>
            <pubDate>Mon, 11 Oct 2021 13:30:00 GMT</pubDate>
            <description><![CDATA[Ssshhh! Do not tell anyone!]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="Ssshhh! Do not tell anyone!" src="https://fuzziebrain.com/assets/images/kristina-flour-BcjdbyKWquw-1280x800-e4fdb56acae560ac2c2bbd16df812e15.png" width="1280" height="800" class="img_ev3q"></p>
<p>For a long time now, I have been eagerly awaiting for out-of-the-box <a href="https://wikipedia.org/wiki/RSA_(cryptosystem)" target="_blank" rel="noopener noreferrer">RSA encryption</a> support with pure PL/SQL. Not so much for to sharing secrets, but rather, the ability to sign messages and verify signatures. I might have missed the announcements, but it looks like my wait is over support with asymmetric key operations added in 21c, and (perhaps backported) in 19c as-of release 19.9.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="joelkallman-day">#JoelKallman Day<a href="https://fuzziebrain.com/content/id/2013#joelkallman-day" class="hash-link" aria-label="Direct link to #JoelKallman Day" title="Direct link to #JoelKallman Day">​</a></h2>
<p>Before we continue though, along with many other members of the Oracle community, I'd like to ask that you take a one-minute pause to remember <a href="https://twitter.com/joelkallman" target="_blank" rel="noopener noreferrer">Joel Kallman</a> on this day. Joel was a wonderful man who was not only passionate about his work, but was even more devoted to uplifting others. He was taken away from us too soon, but the best way to move forward, is to continue his work and mould ourselves with his legacy.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="secret-story-continued">Secret Story Continued...<a href="https://fuzziebrain.com/content/id/2013#secret-story-continued" class="hash-link" aria-label="Direct link to Secret Story Continued..." title="Direct link to Secret Story Continued...">​</a></h2>
<p>Before this release, supporting RSA encryption typically involved installing a Java package and writing some custom PL/SQL code. With Oracle Database 19.9 and 21.x, The updated <code>DBMS_CRYPTO</code> package now includes four new functions:</p>
<ul>
<li><code>PKENCRYPT</code></li>
<li><code>PKDECRYPT</code></li>
<li><code>SIGN</code></li>
<li><code>VERIFY</code></li>
</ul>
<p>By default, new schemas do not have the appropriate privileges to execute the <code>DBMS_CRYPTO</code> package, so please kindly request it from your DBA. The grant statement that you will need is:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">grant</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">execute</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> dbms_crypto </span><span class="token keyword" style="color:#00009f">to</span><span class="token plain"> jenglish</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>To demonstrate how to use these new PL/SQL APIs, I have created a simple <a href="https://apex.oracle.com/" target="_blank" rel="noopener noreferrer">Oracle Application Express</a> (APEX) application that users will:</p>
<ol>
<li>Load a private key.</li>
<li>Decrypt a message that was signed by the receiver's public key.</li>
<li>Load the sender's public key and a base64-encoded signature signed using the sender's private key. The sender's public key will be used to verify the signature.</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="generate-the-keys">Generate the Keys<a href="https://fuzziebrain.com/content/id/2013#generate-the-keys" class="hash-link" aria-label="Direct link to Generate the Keys" title="Direct link to Generate the Keys">​</a></h3>
<p>For secure and non-repudiable communications, participants in the conversation would each generate a private-public key pair, and <strong>only</strong> exchange their public keys. To create the key pair, the common tool used is <a href="https://www.openssl.org/" target="_blank" rel="noopener noreferrer">OpenSSL</a>. These days, you can find the application already installed in Linux, Mac, and Windows. For me, Alice loves working with Bash and so here's the command that she can use to generate her private key:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">openssl genrsa -out alice_key.pem 2048</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And then followed by a command to get her public key to be shared with her peers:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">openssl rsa -in alice_key.pem -outform PEM -pubout -out alice_key_public.pem</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The private key should look somewhat like this:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">-----BEGIN RSA PRIVATE KEY-----</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MIIEogIBAAKCAQEAy/wiWejt+fKwrT7NHTTEeKuWrWqC4KwzpjWUSCK0zWh832xL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jnrZuJc6Sl8gmMz6/p8p6T2NrJEBIda1EbjAD/W4G7IUykf5LrlICEJ3miJV33WL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wpFaFI6wmIas2PpodYhMqA0HngEMTP4oQS4AHnVuxn2naijzeRa0HbG55pAr2K1J</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/bneFDA7jyv3bbOujCkk3DpaBjHXunqz5JmAJ6JqqMhzCQwRQ7c=</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-----END RSA PRIVATE KEY-----</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And the public key:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">-----BEGIN PUBLIC KEY-----</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAy/wiWejt+fKwrT7NHTTE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">eKuWrWqC4KwzpjWUSCK0zWh832xLjnrZuJc6Sl8gmMz6/p8p6T2NrJEBIda1EbjA</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">D/W4G7IUykf5LrlICEJ3miJV33WLwpFaFI6wmIas2PpodYhMqA0HngEMTP4oQS4A</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">HnVuxn2naijzeRa0HbG55pAr2K1J+R/o5hOp460iEbP0HWM16QBwI2TTPfq0R+fz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">KE2EA72g/gbttWSUdRZE/ZdDzG1ZE06RAfu7bNP7GQqGcyMTJ+bv3zWkYlMeDSQD</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">5foCzTHrcDomRL9H/snPSfMpnOzn8xwndZcwBE1ydy852NJatIRbPitglgNMKzfi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">8QIDAQAB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-----END PUBLIC KEY-----</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Do the same for Charlie.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="stripping-the-keys">Stripping the Keys<a href="https://fuzziebrain.com/content/id/2013#stripping-the-keys" class="hash-link" aria-label="Direct link to Stripping the Keys" title="Direct link to Stripping the Keys">​</a></h3>
<p>In the early days of <a href="https://oracle.com/cloud/" target="_blank" rel="noopener noreferrer">Oracle Cloud Infrastructure</a> <a href="https://docs.cloud.oracle.com/iaas/api/" target="_blank" rel="noopener noreferrer">REST API</a> support in APEX, you might recall from this <a href="https://blogs.oracle.com/oraclemagazine/post/better-file-storage-in-oracle-cloud" target="_blank" rel="noopener noreferrer">article</a>, that we had to remove the enclosing tags and linefeeds. While this is no longer required when working with APEX Web Credentials, it's still necessary when working with the <code>DBMS_CRYPTO</code> API. Since we are going to need this a lot, I decided to follow the <a href="https://wikipedia.org/wiki/Don%27t_repeat_yourself" target="_blank" rel="noopener noreferrer">DRY</a> principle and coded a function to strip these unwanted characters from any RSA private or public keys entered.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">or</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">replace</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> strip_rsa_key</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p_rsa_key </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> varchar2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> varchar2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> regexp_replace</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_rsa_key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token string" style="color:#e3116c">'(-+((BEGIN|END) (RSA )?(PUBLIC|PRIVATE) KEY)-+\s?|\s)'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">''</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="secret-agent-apex">Secret Agent APEX<a href="https://fuzziebrain.com/content/id/2013#secret-agent-apex" class="hash-link" aria-label="Direct link to Secret Agent APEX" title="Direct link to Secret Agent APEX">​</a></h3>
<p>I create a simple APEX application with two pages. Page 1 includes the workflow for steps 2 and 3. To avoid displaying the private key once set, a dedicated page 2 was created to provide that information.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="load-a-private-key">Load a Private Key<a href="https://fuzziebrain.com/content/id/2013#load-a-private-key" class="hash-link" aria-label="Direct link to Load a Private Key" title="Direct link to Load a Private Key">​</a></h3>
<p>Alice loves Bash, but she happens to own a Windows machine, so she often relies on Windows Subsystem for Linux v2 (WSL2). In Windows, there's also a helpful utility to copy text to the clipboard. The following command copies Alice's private key to her clipboard:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">clip.exe &lt; alice_key.pem</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>She then pastes the clipboard contents into the textarea on page 2.</p>
<p><img decoding="async" loading="lazy" alt="Load private key page" src="https://fuzziebrain.com/assets/images/load-private-key-293a857885b0b15ed909079563d5cfd4.png" width="1280" height="376" class="img_ev3q"></p>
<p>This should activate the <em>Decrypt</em> button back on page 1.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="decrypt-the-secret-message">Decrypt the Secret Message<a href="https://fuzziebrain.com/content/id/2013#decrypt-the-secret-message" class="hash-link" aria-label="Direct link to Decrypt the Secret Message" title="Direct link to Decrypt the Secret Message">​</a></h3>
<p>The secret message that Charlie is sending to Alice will be encrypted using her public key. At the moment, the API appears to only support RSA Public Key Cryptosystem with PKCS1 and OAEP padding. So, if I am not mistaken, Alice should be able to generate the encrypted message using the following OpenSSL command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">echo -n "Bob has no keys" | openssl rsautl -pubin -inkey alice_key_public.pem \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -encrypt -oaep | openssl base64</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Unfortunately, she couldn't get it to work at the time of writing. If you had any pointers, please feel free to comment below. For now, to continue, Alice generated the encrypted message using the function <code>DBMS_CRYPTO.PKENCRYPT</code>:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_input_string varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Bob has no keys'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_public_key raw</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_encrypted_output raw</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_public_key :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    utl_i18n</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">string_to_raw</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">strip_rsa_key</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">q</span><span class="token string" style="color:#e3116c">'[</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">-----BEGIN PUBLIC KEY-----</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAy/wiWejt+fKwrT7NHTTE</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">eKuWrWqC4KwzpjWUSCK0zWh832xLjnrZuJc6Sl8gmMz6/p8p6T2NrJEBIda1EbjA</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">D/W4G7IUykf5LrlICEJ3miJV33WLwpFaFI6wmIas2PpodYhMqA0HngEMTP4oQS4A</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">HnVuxn2naijzeRa0HbG55pAr2K1J+R/o5hOp460iEbP0HWM16QBwI2TTPfq0R+fz</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">KE2EA72g/gbttWSUdRZE/ZdDzG1ZE06RAfu7bNP7GQqGcyMTJ+bv3zWkYlMeDSQD</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">5foCzTHrcDomRL9H/snPSfMpnOzn8xwndZcwBE1ydy852NJatIRbPitglgNMKzfi</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">8QIDAQAB</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">-----END PUBLIC KEY-----</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">]'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_encrypted_output :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dbms_crypto</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pkencrypt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      src </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> utl_i18n</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">string_to_raw</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_input_string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pub_key </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_public_key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pubkey_alg </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> dbms_crypto</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">key_type_rsa</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> enc_alg </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> dbms_crypto</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pkencrypt_rsa_pkcs1_oaep</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dbms_output</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">put_line</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">utl_i18n</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">raw_to_char</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">utl_encode</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">base64_encode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_encrypted_output</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Here's an example of the base64-encoded, encrypted output:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Wb3KKyyu+8/MxRKn/kIoqAt4ZMsSvE7AZ/Gr+/3x+xHedtxvj504sy7pffIT1BTl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AbvVdjpcZ+VsxNpYCeN3Q/47R51YKPu/2P5u8FiY+nOLPu+sN5hQc4a6WdHVvRL/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wvXOhSx0fV6M4OtAO7KMuNrrRCqBlOCXPkIIHMeReAq1YVyVuRrofuDptznuEiOo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MKIt6s0j95n9RGCNWC3dI3Rsr+Nm64psjtWPVxCFjMUCSqh4fZcFXXW8xdCsHxYw</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">0zw43LrD1REnUbUCXAeNOhVXIV5f5TxRYwW9ibkjPTWeDBtViIy33XTvCleEmf7K</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">8kMkShUD3gfQt2HJ3FSmNQ==</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Running this through the secret agent's cryptopad with Alice's private key loaded, it appears that she has successfully mission #2!</p>
<p><img decoding="async" loading="lazy" alt="Message decrypted!" src="https://fuzziebrain.com/assets/images/message-decrypted-dc47e39c1bba0cfee7b2368e5a0e0fcf.png" width="1280" height="800" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="verify-the-sender">Verify the Sender<a href="https://fuzziebrain.com/content/id/2013#verify-the-sender" class="hash-link" aria-label="Direct link to Verify the Sender" title="Direct link to Verify the Sender">​</a></h3>
<p>But how can Alice know that Charlie was truly the person who had sent this message. For that, we will rely on Charlie signing his message (in this case, the unencrypted text), and send the digital digest along with the message payload. Again, you can do this with either OpenSSL, <code>DBMS_CRYPTO.SIGN</code>, or any other programming language that supports public key encryption. Here's an example OpenSSL command that Charlie can use to generate the digital signature:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">echo -n "Bob has no keys" | openssl dgst -sha256 -sign charlie_key.pem | \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    openssl base64</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Along with his Charlie, Alice can now verify that he was indeed the sender of the message "Bob has no keys".</p>
<p><img decoding="async" loading="lazy" alt="Digital signature verified." src="https://fuzziebrain.com/assets/images/verified-signature-af411fbd861635ec2aabd5201ce5db1d.png" width="1280" height="800" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://fuzziebrain.com/content/id/2013#summary" class="hash-link" aria-label="Direct link to Summary" title="Direct link to Summary">​</a></h3>
<p>I am very excited! There are more practical uses for this API, and you can definitely expect a follow up post. Stay tuned!</p>
<blockquote>
<u>Photo Credits</u>
<p>This post's banner photo is by <a href="https://unsplash.com/@tinaflour?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Kristina Flour</a> on <a href="https://unsplash.com/s/photos/secret-agent?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></p>
</blockquote>]]></content:encoded>
            <category>oracle</category>
            <category>database</category>
            <category>encryption</category>
            <category>signature</category>
            <category>security</category>
            <category>communication</category>
            <category>secret</category>
            <category>plsql</category>
            <category>orclapex</category>
        </item>
        <item>
            <title><![CDATA[Intelligent APEX Applications - Fact or Fiction?]]></title>
            <link>https://fuzziebrain.com/content/id/2012</link>
            <guid>https://fuzziebrain.com/content/id/2012</guid>
            <pubDate>Sun, 04 Jul 2021 16:45:00 GMT</pubDate>
            <description><![CDATA[Neurons]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="Neurons" src="https://fuzziebrain.com/assets/images/neurons-1773922_1280x800-7f66eda817262c26d7e59a85cb1591e2.jpg" width="1280" height="801" class="img_ev3q"></p>
<p>During a recent <a href="https://kscope21.odtug.com/" target="_blank" rel="noopener noreferrer">Kscope21</a> session, "<a href="https://kscope21.odtug.com/e/in/eid=42&amp;req=info&amp;s=3444&amp;all=1" target="_blank" rel="noopener noreferrer">Predict Customer Churn Using Oracle Autonomous Database, Machine Learning, and APEX</a>", I had shared that it has always been my personal desire to create web applications that are not only purposeful, but also have an element of "intelligence". With new features recently introduced in the <a href="https://www.oracle.com/data-science/machine-learning/" target="_blank" rel="noopener noreferrer">Oracle Machine Learning</a> product offering, it is now relatively easy to introduce ML as a component of your <a href="https://apex.oracle.com/" target="_blank" rel="noopener noreferrer">Oracle Application Express</a> (APEX) applications. This is the first of several posts that I am writing as a follow up to the presentations I did at this year's (virtual) conference.</p>
<p>The whys and how we created our first Machine Learning (ML) model using <a href="https://blogs.oracle.com/machinelearning/introducing-oml-automl-user-interface" target="_blank" rel="noopener noreferrer">AutoML UI</a> is detailed in our presentation, so I highly encourage you to review the presentation to get the required background information. There are also several tutorials that Oracle has published to help you get going with the technology. In this blog post, the goal is to provide details on code needed to consume the ML model that we operationalised using OML Services. these are:</p>
<ul>
<li><a href="https://fuzziebrain.com/content/id/2012#Authentication">How to authenticate with the REST services</a></li>
<li><a href="https://fuzziebrain.com/content/id/2012#Inputs-and-Outputs">Identifying the REST service's inputs and outputs</a>; and finally</li>
<li><a href="https://fuzziebrain.com/content/id/2012#using-the-Deployed-Model">Using the Deployed Model</a></li>
</ul>
<p>Also, it would be worthwhile pointing out that AutoML, OML Services, and many of the other Oracle technologies described in this post are only available on the <a href="https://www.oracle.com/autonomous-database/" target="_blank" rel="noopener noreferrer">Oracle Autonomous Database</a> (ADB) at this time, including the two <em>Always Free</em> instances that you get with every Oracle Cloud account.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="authentication">Authentication<a href="https://fuzziebrain.com/content/id/2012#authentication" class="hash-link" aria-label="Direct link to Authentication" title="Direct link to Authentication">​</a></h2>
<p>To secure OML Service endpoints, clients must use an OML Service account and obtain an <em>access token</em>. You may create this user and enable access to OML Services using either the <em>Oracle ML User Administration</em> console or <em>Database Actions</em>.</p>
<p>The authentication element consists of:</p>
<ol>
<li>Two application items <code>G_TOKEN</code> and <code>G_TOKEN_EXPIRY</code> that are used to store the access token and expiry measured in epochs.</li>
<li>An on page load (before header) application process with the following PL/SQL code:<!-- -->
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> :G_TOKEN </span><span class="token operator" style="color:#393A34">is</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">or</span><span class="token plain"> :G_TOKEN_EXPIRY </span><span class="token operator" style="color:#393A34">is</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">or</span><span class="token plain"> pkg_omlservices_util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">f_convert_to_epoch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sysdate</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> :G_TOKEN_EXPIRY</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  pkg_omlservices_util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">p_authenticate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_token_url </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> :G_TOKEN_URL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_username </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'readmore'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_password </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> pkg_secrets</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">gc_password</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_token </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> :G_TOKEN</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_expiry_epoch </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> :G_TOKEN_EXPIRY</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>The application process calls a custom procedure <code>pkg_omlservices_util.p_authenticate</code> that embodies the following code:<!-- -->
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">or</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">replace</span><span class="token plain"> package body pkg_omlservices_util</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">procedure</span><span class="token plain"> p_authenticate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_token_url </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> varchar2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_username </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> varchar2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_password </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> varchar2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_token </span><span class="token keyword" style="color:#00009f">out</span><span class="token plain"> varchar2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_expiry_epoch </span><span class="token keyword" style="color:#00009f">out</span><span class="token plain"> number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_response clob</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_request_headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Content-Type'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_request_headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'application/json'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_response :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">make_rest_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      p_url </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> p_token_url</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_http_method </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'POST'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_body </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token string" style="color:#e3116c">'grant_type'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'password'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'username'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> p_username</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'password'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> p_password</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_status_code </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">200</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      apex_debug</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l_response</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      apex_json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">parse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p_source </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_response</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      p_token :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex_json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get_varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p_path </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'accessToken'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      p_expiry_epoch :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pkg_omlservices_util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">f_convert_to_epoch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sysdate</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> apex_json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get_number</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p_path </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'expiresIn'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      raise_application_error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">20001</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Authentication request failed. '</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'HTTP status code returned: '</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_status_code</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"> p_authenticate</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"> pkg_omlservices_util</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ol>
<p>The URL to direct the access token request to is set and passed using the APEX substitution string <code>G_TOKEN_URL</code>. This URL is constructed based on a few components unique to your environment. You will need the following information:</p>
<ul>
<li><code>REGION_CODE</code>. For example, <code>us-ashburn-1</code>.</li>
<li><code>TENANT_OCID</code>. Looks like this: <code>ocid1.tenancy.oc1..aaaaaaaa...</code>.</li>
<li><code>DATABASE_NAME</code>. The database name given to your ADB instance.</li>
</ul>
<p>Then, use the template below and replace the placeholders with the appropriate values.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">https://adb.&lt;REGION_CODE&gt;.oraclecloud.com/omlusers/tenants/&lt;TENANT_OCID&gt;/databases/&lt;DATABASE_NAME&gt;/api/oauth2/v1/token</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This approach helps maintain a valid access token for as long as it is not expired, and will request a new one only when it does.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="inputs-and-outputs">Inputs and Outputs<a href="https://fuzziebrain.com/content/id/2012#inputs-and-outputs" class="hash-link" aria-label="Direct link to Inputs and Outputs" title="Direct link to Inputs and Outputs">​</a></h2>
<p>During the presentation, I had demonstrated how you can use the OML AutoML User Interface (UI) to create ML models with no code. Once you are satisfied with the predicted model, you can then deploy the model thus exposing it through OML Services as a REST endpoint. To consume the REST service, there are three essential information that we will require:</p>
<ol>
<li>The REST endpoint URL.</li>
<li>The request's input parameters and how to transmit them.</li>
<li>The response's expected output format.</li>
</ol>
<p>You can access this information from the metadata published after the models are deployed.</p>
<p><img decoding="async" loading="lazy" alt="List of Deployed ML Models" src="https://fuzziebrain.com/assets/images/inputs-and-outputs-afbad3af210a9e1bb7cf6084dd15f22e.png" width="1280" height="389" class="img_ev3q"></p>
<p>The endpoint URL can be derived from the <em>Open API Specification</em> for the service that you can access by clicking the link labelled "A". Below is shortened version of the JSON output to help highlight the important pieces of information.</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "openapi": "3.0.1",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "info": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "title": "svml_9223d64159",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "version": "1.0"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "paths": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "/svml/score": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "post": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "operationId": "scoreModel",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "requestBody": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "content": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "application/json": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              "schema": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "$ref": "#/components/schemas/svml_9223d64159_INPUT_TYPE"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "required": true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "responses": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "200": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "description": "Successfully scored model svml.",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "content": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              "application/json": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "schema": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  "$ref": "#/components/schemas/svml_9223d64159_OUTPUT_TYPE"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "components": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "schemas": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "svml_9223d64159_INPUT_TYPE": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "properties": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "inputRecords": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "array",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "items": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              "$ref": "#/components/schemas/Attributes"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "topN": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "integer",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "format": "int32"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "topNdetails": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "integer",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "format": "int32"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "Attributes": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "properties": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "AVG_TOTAL_GROUP_READING_TIME": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "number",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "format": "double"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "DASHBOARD_VISITS": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "number",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "format": "double"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "MAX_TOTAL_GROUP_READING_TIME": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "number",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "format": "double"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "MIN_TOTAL_GROUP_READING_TIME": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "number",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "format": "double"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "NUMBER_OF_KIDS_ENROLLED": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "number",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "format": "double"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "NUMBER_OF_REWARDS_CREATED": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "number",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "format": "double"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "NUMBER_OF_REWARDS_PURCHASED": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "number",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "format": "double"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "svml_9223d64159_OUTPUT_TYPE": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "properties": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "scoringResults": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "array",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "items": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              "$ref": "#/components/schemas/ScoringResults"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "ScoringResults": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "properties": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "classifications": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "array",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "items": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              "$ref": "#/components/schemas/LabelProb"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "details": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "array",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "items": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              "$ref": "#/components/schemas/Detail"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="endpoint-url">Endpoint URL<a href="https://fuzziebrain.com/content/id/2012#endpoint-url" class="hash-link" aria-label="Direct link to Endpoint URL" title="Direct link to Endpoint URL">​</a></h3>
<p>The template for the OML Service endpoint URLs is:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">https://adb.&lt;REGION_CODE&gt;.oraclecloud.com/omlmod/v1/deployment&lt;PATH&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>PATH</code> that we will use to perform the scoring operation is <code>/svml/score</code>, which you can find in the <code>paths</code> attribute. It accepts a HTTP <code>POST</code> request with a required body containing input parameters in JSON format.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="inputs">Inputs<a href="https://fuzziebrain.com/content/id/2012#inputs" class="hash-link" aria-label="Direct link to Inputs" title="Direct link to Inputs">​</a></h3>
<p>From the input schema, you can glean that the endpoint requires an <code>inputRecords</code> array containing one or more objects, each with seven numerical input variables:</p>
<ul>
<li><code>AVG_TOTAL_GROUP_READING_TIME</code></li>
<li><code>DASHBOARD_VISITS</code></li>
<li><code>MAX_TOTAL_GROUP_READING_TIME</code></li>
<li><code>MIN_TOTAL_GROUP_READING_TIME</code></li>
<li><code>NUMBER_OF_KIDS_ENROLLED</code></li>
<li><code>NUMBER_OF_REWARDS_CREATED</code></li>
<li><code>NUMBER_OF_REWARDS_PURCHASED</code></li>
</ul>
<p>These are features that AutoML had selected during the training process. An example of the JSON payload included in a HTTP request is:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "inputRecords": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "AVG_TOTAL_GROUP_READING_TIME": 383,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "DASHBOARD_VISITS": 2021,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "MAX_TOTAL_GROUP_READING_TIME": 157,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "MIN_TOTAL_GROUP_READING_TIME": 281,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "NUMBER_OF_KIDS_ENROLLED": 114,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "NUMBER_OF_REWARDS_CREATED": 20,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "NUMBER_OF_REWARDS_PURCHASED": 45</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="outputs">Outputs<a href="https://fuzziebrain.com/content/id/2012#outputs" class="hash-link" aria-label="Direct link to Outputs" title="Direct link to Outputs">​</a></h3>
<p>Finally, from the specifications, we know that the service will return the array <code>scoringResults</code> that should be of the same size as the <code>inputRecords</code> submitted in the request. Each element will contain an array of <code>classifications</code> (there are two in our binary classifier) objects with the attributes <code>label</code> and <code>probability</code>. Below is an example of prediction outputs returned after a successful call to the OML Service.</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "scoringResults": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "classifications": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "label": "0",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "probability": 0.1977130504153105</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "label": "1",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "probability": 0.8022869495846895</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-the-deployed-model">Using the Deployed Model<a href="https://fuzziebrain.com/content/id/2012#using-the-deployed-model" class="hash-link" aria-label="Direct link to Using the Deployed Model" title="Direct link to Using the Deployed Model">​</a></h2>
<p>Armed with the information <a href="https://fuzziebrain.com/content/id/2012#Inputs-and-Outputs">above</a>, we can now construct a wrapper PL/SQL procedure, for example:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">or</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">replace</span><span class="token plain"> package body pkg_omlservices_predict</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  c_svml_url constant varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">73</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'https://.../omlmod/v1/deployment/svml/score'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> f_active_in_six_months</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_token </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> varchar2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_avg_total_group_reading_time </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_dashboard_visits </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_max_total_group_reading_time </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_min_total_group_reading_time </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_number_of_kids_enrolled </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_number_of_rewards_created </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_number_of_rewards_purchased </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> clob</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_results clob</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_request_headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Authorization'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_request_headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Bearer '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> p_token</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_request_headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Content-Type'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_request_headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'application/json'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    l_results :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">make_rest_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      p_url </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> c_svml_url</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_http_method </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'POST'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_body </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token string" style="color:#e3116c">'inputRecords'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> json_array</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            json_object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token string" style="color:#e3116c">'AVG_TOTAL_GROUP_READING_TIME'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> p_avg_total_group_reading_time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'DASHBOARD_VISITS'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> p_dashboard_visits</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MAX_TOTAL_GROUP_READING_TIME'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> p_max_total_group_reading_time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MIN_TOTAL_GROUP_READING_TIME'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> p_min_total_group_reading_time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'NUMBER_OF_KIDS_ENROLLED'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> p_number_of_kids_enrolled</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'NUMBER_OF_REWARDS_CREATED'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> p_number_of_rewards_created</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'NUMBER_OF_REWARDS_PURCHASED'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> p_number_of_rewards_purchased</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_status_code </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">200</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      raise_application_error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">20002</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Error predicting results. HTTP status code: '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_status_code</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> l_results</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  exception</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">when</span><span class="token plain"> others </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      owa_util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">status_line</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        nstatus </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">500</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> creason </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_status_code</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"> f_active_in_six_months</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"> pkg_omlservices_predict</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>For a simple demonstration on how to use the OML Service in APEX, I created a page that allows users to enter the seven required inputs, and then call the <code>pkg_omlservices_predict.f_active_in_six_months</code> function to obtain the predicted labels and their probabilities.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_results clob</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apex_collection</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create_or_truncate_collection</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'PREDICTION_RESULTS'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_results :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pkg_omlservices_predict</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">f_active_in_six_months</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_token </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> :G_TOKEN</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_avg_total_group_reading_time </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> :P1_AVG_TOTAL_GROUP_READING_TIME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_dashboard_visits </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> :P1_DASHBOARD_VISITS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_max_total_group_reading_time </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> :P1_MAX_TOTAL_GROUP_READING_TIME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_min_total_group_reading_time </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> :P1_MIN_TOTAL_GROUP_READING_TIME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_number_of_kids_enrolled </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> :P1_NUMBER_OF_KIDS_ENROLLED</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_number_of_rewards_created </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> :P1_NUMBER_OF_REWARDS_CREATED</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_number_of_rewards_purchased </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> :P1_NUMBER_OF_REWARDS_PURCHASED</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apex_collection</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">add_member</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_collection_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'PREDICTION_RESULTS'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_clob001 </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> l_results</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I can then render the desired output after parsing the <code>scoringResults</code> JSON array returned by the OML Service, for example, using a classic report using the following SQL query:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">with</span><span class="token plain"> results </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> clob001 </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> json_data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> apex_collections</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> collection_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'PREDICTION_RESULTS'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">fetch</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">first</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">rows</span><span class="token plain"> only</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  j</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">outcome</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> j</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">probability</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> results r</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> json_table</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    r</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">json_data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'$.scoringResults'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">columns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      nested path </span><span class="token string" style="color:#e3116c">'$.classifications[*]'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">columns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        outcome path </span><span class="token string" style="color:#e3116c">'$.label'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> probability path </span><span class="token string" style="color:#e3116c">'$.probability'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> j</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>It is worthwhile noting that developers can submit multiple rows of input data and obtain all the results at once. For example, if you wanted to cache the predicted outcomes in a local table, you can batch them in one HTTP request and then parsing multiple results, thereby reducing some overheads.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="closing">Closing<a href="https://fuzziebrain.com/content/id/2012#closing" class="hash-link" aria-label="Direct link to Closing" title="Direct link to Closing">​</a></h2>
<p>This is only the beginning and I am super excited with all the tools that Oracle has put at our disposal. Do more and do good. If you require additional help, or would like to collaborate on other APEX+ML adventures, please do not hesitate to contact me <em>via</em> <a href="https://twitter.com/fuzziebrain" target="_blank" rel="noopener noreferrer">Twitter</a> or through <a href="https://www.insum.ca/contact/" target="_blank" rel="noopener noreferrer">Insum</a>.</p>
<blockquote>
<p><strong>Credits</strong></p>
<p>Image by <a href="https://pixabay.com/users/geralt-9301/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1773922">Gerd Altmann</a> from <a href="https://pixabay.com/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1773922">Pixabay</a></p>
</blockquote>]]></content:encoded>
            <category>oracle cloud</category>
            <category>orclapex</category>
            <category>artificial intelligence</category>
            <category>ai</category>
            <category>machine learning</category>
            <category>ml</category>
            <category>rest</category>
        </item>
        <item>
            <title><![CDATA[ARM Your APEX Instance]]></title>
            <link>https://fuzziebrain.com/content/id/2011</link>
            <guid>https://fuzziebrain.com/content/id/2011</guid>
            <pubDate>Tue, 25 May 2021 08:50:00 GMT</pubDate>
            <description><![CDATA[Embedded ARM chip]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="Embedded ARM chip" src="https://fuzziebrain.com/assets/images/arm-chip_1200x720-f0b95bb9172f7f1029520abf5762013b.jpg" width="1200" height="720" class="img_ev3q"></p>
<p>In September 2020, Oracle first <a href="https://youtu.be/aVwLlkhERuQ?t=331" target="_blank" rel="noopener noreferrer">announced</a> that it was working with <a href="https://amperecomputing.com/" target="_blank" rel="noopener noreferrer">Ampere Computing</a> to provide ARM-based chips for its Compute instance offering on the <a href="https://oracle.com/cloud" target="_blank" rel="noopener noreferrer">Oracle Cloud Infrastructure</a>. They have delivered!</p>
<p>ARM chips are found in many low-powered devices like smartphones, single-board computers, and IoT devices. So, if you are an <a href="https://apex.oracle.com/" target="_blank" rel="noopener noreferrer">Oracle Application Express</a> (APEX) developer, you might be wondering, "What's in it for me?" Well, remember we <a href="https://fuzziebrain.com/content/id/2004">talked</a> about running a customer-managed <a href="https://www.oracle.com/database/technologies/appdev/rest.html" target="_blank" rel="noopener noreferrer">Oracle REST Data Services</a> (ORDS) instance for an <a href="https://www.oracle.com/autonomous-database/" target="_blank" rel="noopener noreferrer">Oracle Autonomous Database</a>?</p>
<p>The OCI isn't the first platform to offer ARM-based compute resources. You will find a similar offering from AWS with their <a href="https://aws.amazon.com/ec2/graviton/" target="_blank" rel="noopener noreferrer">Graviton</a> processors. Instead of custom-designing a processor, Oracle opted to use the <a href="https://amperecomputing.com/altra/" target="_blank" rel="noopener noreferrer">Ampere Altra Processor</a> that has 80 cores running at a maximum frequency of 3.3 Ghz. Check out AnandTech's <a href="https://www.anandtech.com/show/16315/the-ampere-altra-review" target="_blank" rel="noopener noreferrer">review</a> of the chip.</p>
<p>If you are interested to read about the performance comparisons between the ARM and x86 architectures, please check out this <a href="https://www.infoq.com/articles/arm-vs-x86-cloud-performance/" target="_blank" rel="noopener noreferrer">report</a>. What I understand is that for hosting web applications that are typically single threaded, ARM chips offer a better cost-to-performance ratio, not to mention, lower power consumption. Each processing core is also generally cheaper than its competitors, thus allowing cloud vendors to provision them at cheaper rates. We saw this happening when Oracle first launched the AMD EPYC-based compute shapes that were cheaper than Intel's at that time.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="lets-get-started">Let's Get Started<a href="https://fuzziebrain.com/content/id/2011#lets-get-started" class="hash-link" aria-label="Direct link to Let's Get Started" title="Direct link to Let's Get Started">​</a></h2>
<p>As with other processor types, OCI customers can opt to provision virtual machines or bare metal machines:</p>
<ul>
<li><strong>VM.Standard.A1.Flex.</strong> Like the AMD EPYC Flex shapes, users can create instances with a flexible number of OCPUs and memory. Servers can be provisioned with 1 to 80 OCPUs, and 1 to 512 GB memory.</li>
<li><strong>BM.Standard.A1.160.</strong> Only one shape for bare metal machines is available at this time. It comes with 160 OCPUs and 1 TB of memory.</li>
</ul>
<p>Oracle has also provided a generous Oracle Cloud Free Tier allotment of Ampere compute instance. Users can provision an <em>Always Free</em> compute instance with up to 4 OCPUs and 24 GB of memory (see the <a href="https://www.oracle.com/news/announcement/oracle-unlocks-power-of-arm-processors-at-one-cent-per-core-hour-2021-05-25/" target="_blank" rel="noopener noreferrer">press release</a>). The Always Free block volume allotment has also increased from 100 to 200 GB. Yes, there are no charges and no end dates for these resources. I will use this to host the customer-managed ORDS instance. Beyond that, according to the <a href="https://www.oracle.com/cloud/cost-estimator.html" target="_blank" rel="noopener noreferrer">cost estimator</a>, each additional OCPU will cost you only $10 per month, and $1 for every gigabyte of memory!</p>
<blockquote>
<p><strong>Note.</strong> These A1 cores are single-threaded. In x86-based shapes, 1 OCPU has 2 virtual CPUs.</p>
</blockquote>
<p><img decoding="async" loading="lazy" alt="Create an Ampere-shaped Compute instance." src="https://fuzziebrain.com/assets/images/create-compute-instance-c60a56de44cd2076759bc46d14de00b8.png" width="1280" height="800" class="img_ev3q"></p>
<p>The downside of moving to an ARM chip is the availability of software support. For example, though you can install the <a href="https://www.oracle.com/database/technologies/instant-client.html" target="_blank" rel="noopener noreferrer">Oracle Instant Client</a> on an ARM system, Oracle has not released AArch64 database binaries. Fortunately for us, there already exists a Java port for this architecture, so there should be no issues deploying ORDS or running it standalone. However, at the time of writing, the ORDS package is not available to install through the Oracle Yum repositories. I will instead deploy ORDS on a <a href="https://tomcat.apache.org/" target="_blank" rel="noopener noreferrer">Tomcat</a> server using <a href="https://podman.io/" target="_blank" rel="noopener noreferrer">Podman</a>. The official <a href="https://docker.com/" target="_blank" rel="noopener noreferrer">Docker</a> image that I will use can be found <a href="https://hub.docker.com/_/tomcat" target="_blank" rel="noopener noreferrer">here</a>. Take note that you will have to ensure that you deploy a version of ORDS that's compatible to what the ADB is using.</p>
<p><img decoding="async" loading="lazy" alt="Use Database Actions to check version of ORDS that the ADB is running." src="https://fuzziebrain.com/assets/images/checking-ords-version-29ad0477fdddc912bcfccd3e42853cad.png" width="1280" height="800" class="img_ev3q"></p>
<p>After provisioning the Oracle Enterprise Linux 8 server, login as the user <em>opc</em> and install the following software:</p>
<ul>
<li>OCI Command Line Interface (CLI)</li>
<li>Podman</li>
<li>[Optional] Support for emulating Docker CLI using podman</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo dnf install python36-oci-cli podman podman-docker</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Create the base directory where we will deploy our files to.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">BASE_PATH=/opt/podman/ords &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mkdir -p $BASE_PATH</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Stage the following installer files in the directory <code>$BASE_PATH/files</code>:</p>
<ul>
<li><code>apex_20.2.zip</code></li>
<li><code>p32006852_2020_Generic.zip</code></li>
<li><code>ords-21.1.1.116.2032.zip</code></li>
</ul>
<blockquote>
<p><strong>Note:</strong> At the time of writing, the ADB is still running APEX 20.2 with the latest Patch Set Bundle. To download the patch, you will require a qualified support contract.</p>
</blockquote>
<p>Create the following <em>Dockerfile</em> in the directory specified by the environment variable <code>BASE_PATH</code>:</p>
<div class="language-dockerfile codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-dockerfile codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">FROM tomcat:9.0-jdk8-openjdk-slim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ARG INSTALL_FILES_DIR=/tmp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ARG ORDS_HOME=/opt/oracle/ords</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ARG ORDS_CONFIG_DIR=$ORDS_HOME/conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ARG ORDS_INSTALL_FILE=ords-21.1.1.116.2032.zip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COPY files/$ORDS_INSTALL_FILE $INSTALL_FILES_DIR/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN apt update -y &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apt install -y unzip &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  mkdir -p $ORDS_HOME $ORDS_CONFIG_DIR &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  unzip $INSTALL_FILES_DIR/$ORDS_INSTALL_FILE -d $ORDS_HOME &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  java -jar $ORDS_HOME/ords.war configdir $ORDS_CONFIG_DIR &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  cp $ORDS_HOME/ords.war /usr/local/tomcat/webapps/ &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  sed -i -r 's/Connector port=\"8080\" protocol=\"HTTP\/1\.1\"/&amp; scheme=\"https\"/' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /usr/local/tomcat/conf/server.xml &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  rm -f $INSTALL_FILES_DIR/$ORDS_INSTALL_FILE &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apt clean -y</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Alternatively, run the following Bash script to create the Dockerfile:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cd $BASE_PATH &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat &lt;&lt; EOF &gt; Dockerfile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FROM tomcat:9.0-jdk8-openjdk-slim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ARG INSTALL_FILES_DIR=/tmp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ARG ORDS_HOME=/opt/oracle/ords</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ARG ORDS_CONFIG_DIR=\$ORDS_HOME/conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ARG ORDS_INSTALL_FILE=ords-21.1.1.116.2032.zip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COPY files/\$ORDS_INSTALL_FILE \$INSTALL_FILES_DIR/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN apt update -y &amp;&amp; \\</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apt install -y unzip &amp;&amp; \\</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  mkdir -p \$ORDS_HOME \$ORDS_CONFIG_DIR &amp;&amp; \\</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  unzip \$INSTALL_FILES_DIR/\$ORDS_INSTALL_FILE -d \$ORDS_HOME &amp;&amp; \\</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  java -jar \$ORDS_HOME/ords.war configdir \$ORDS_CONFIG_DIR &amp;&amp; \\</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  cp \$ORDS_HOME/ords.war /usr/local/tomcat/webapps/ &amp;&amp; \\</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  sed -i -r 's/Connector port=\\"8080\\" protocol=\\"HTTP\/1\\.1\\"/&amp; scheme=\\"https\\"/' \\</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /usr/local/tomcat/conf/server.xml &amp;&amp; \\</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  rm -f \$INSTALL_FILES_DIR/\$ORDS_INSTALL_FILE &amp;&amp; \\</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apt clean -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Build the container image.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cd $BASE_PATH &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">podman build -t ords .</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Set the following environment variables based on your tenancy, data region, and ADB:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ADB_OCID=ocid1.autonomousdatabase.oc1.phx.abyh...4pggq</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ADB_NAME=myadb</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ORDS_USER=ORDS_PUBLIC_USER2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ORDS_PASSWORD="avoidsimplepasswords"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WALLET_PASSWORD="atalltimes"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SERVICE_NAME=${ADB_NAME}_low</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WALLET_FILE_PATH=/tmp/wallet_${ADB_NAME}.zip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ORDS_CONFIG_DIR=$BASE_PATH/conf</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Use the OCI CLI to generate the required ADB wallet, and then create the base64-encoded string needed for configuring ORDS to access the database.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">export OCI_CLI_AUTH=instance_principal &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">oci db autonomous-database generate-wallet \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --autonomous-database-id $ADB_OCID \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --file $WALLET_FILE_PATH \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --password WALLET_PASSWORD &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WALLET_BASE64=`base64 -w 0 $WALLET_FILE_PATH` &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rm -f ${WALLET_FILE_PATH}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Create the database user named in the environment variable <code>ORDS_USER</code> and asssign the necessary privileges. Refer to the section <em>User Accounts</em> in the previous <a href="https://fuzziebrain.com/content/id/2004#User-Accounts">post</a> if you require help. Then create the ORDS configuration files:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mkdir -p $ORDS_CONFIG_DIR/ords/conf &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat &lt;&lt; EOF &gt; $ORDS_CONFIG_DIR/ords/conf/apex_pu.xml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;properties&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;entry key="db.username"&gt;$ORDS_USER&lt;/entry&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;entry key="db.password"&gt;!$ORDS_PASSWORD&lt;/entry&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;entry key="db.wallet.zip.service"&gt;$SERVICE_NAME&lt;/entry&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;entry key="db.wallet.zip"&gt;&lt;![CDATA[$WALLET_BASE64]]&gt;&lt;/entry&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/properties&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat &lt;&lt; EOF &gt; $ORDS_CONFIG_DIR/ords/defaults.xml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;properties&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;entry key="plsql.gateway.enabled"&gt;true&lt;/entry&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;entry key="jdbc.InitialLimit"&gt;5&lt;/entry&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;entry key="jdbc.MaxLimit"&gt;10&lt;/entry&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/properties&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Prepare to stage the APEX images files by first setting the following environment variables:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">INSTALL_FILES_DIR=$BASE_DIR/files</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">APEX_INSTALL_FILE=apex_20.2.zip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">APEX_VERSION=20.2.0.00.20</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">APEX_IMAGES_DIR=$BASE_PATH/apex_images</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Execute the snippet below to extract the necessary files from the APEX installation file and deploy them to the Tomcat container.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mkdir -p $APEX_IMAGES_DIR &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">touch $APEX_IMAGES_DIR/index.html &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">unzip $INSTALL_FILES_DIR/$APEX_INSTALL_FILE "apex/images/*" -d /tmp/ &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mv /tmp/apex/images $APEX_IMAGES_DIR/$APEX_VERSION &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rm -rf /tmp/apex</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>If your instance is running a version of APEX that has a patch available, then be sure to apply it. Again, you will need access to <a href="https://support.oracle.com/" target="_blank" rel="noopener noreferrer">Oracle Support</a> with the rights to download patches. Set the environment variables:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">PATCH_FILE=p32006852_2020_Generic.zip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PATCH_NUMBER=32006852</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Then run the snippet below to deploy the changes:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mkdir -p /tmp/$APEX_VERSION &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">unzip /tmp/$PATCH_FILE "$PATCH_NUMBER/images/*" -d /tmp/$APEX_VERSION &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yes | cp -R /tmp/$APEX_VERSION/$PATCH_NUMBER/images/* $APEX_IMAGES_DIR/$APEX_VERSION &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rm -rf /tmp/$APEX_VERSION</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Create a utility <code>run.sh</code> script to run the container. The script allows one argument to set the port number to map to, and also used to set the container's name.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cd $BASE_PATH &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat &lt;&lt; EOF &gt; run.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#!/usr/bin/env bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PORT_NUMBER=\${1:-8080}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">podman run -d --name=ords_port_\${PORT_NUMBER} \\</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -p \$PORT_NUMBER:8080 \\</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -v \$PWD/conf:/opt/oracle/ords/conf:z \\</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -v $APEX_IMAGES_DIR:/usr/local/tomcat/webapps/i \\</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --restart unless-stopped \\</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ords</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Finally, since we are running this as a rootless container, the firewall rules must be updated to allow communication on port <code>8080</code>. Execute the following commands:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo firewall-cmd --zone=public --add-port 8080/tcp --permanent &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo firewall-cmd --reload</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Run the container that's listening on port <code>8080</code>.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cd $BASE_PATH &amp;&amp; bash run.sh 8080</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Finally, setup a load balancer for the customer-managed ORDS instance. This was discussed in an earlier <a href="https://fuzziebrain.com/content/id/2005">post</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="bonus-task">Bonus Task<a href="https://fuzziebrain.com/content/id/2011#bonus-task" class="hash-link" aria-label="Direct link to Bonus Task" title="Direct link to Bonus Task">​</a></h2>
<p>If you are also interested in testing out some "redundancy", you might like to run a second container:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">PORT_NUMBER=8081 &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo firewall-cmd --zone=public --add-port $PORT_NUMBER/tcp --permanent &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo firewall-cmd --reload &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd $BASE_PATH &amp;&amp; bash run.sh $PORT_NUMBER</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And then add this as a backend server that's listening on port <code>8081</code> to the set. Just be really careful about exceeding the maximum number of concurrent database sessions if this is an Always Free ADB.</p>
<p><img decoding="async" loading="lazy" alt="Add a backend server to simulate redundancy." src="https://fuzziebrain.com/assets/images/extra-backend-server-c2430601506727d26906e5cf093b1fdc.png" width="1280" height="800" class="img_ev3q"></p>
<p>To be clear, this is really for experimentation and simulation use only. As a best practice, the second container should be deployed on a separate host, preferably in a different availability domain.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://fuzziebrain.com/content/id/2011#summary" class="hash-link" aria-label="Direct link to Summary" title="Direct link to Summary">​</a></h2>
<p>This is a great addition to the family of OCI resources that Oracle provides.  Besides deploying customer-managed ORDS to complement the Autonomous Database, APEX developers can also use them to host other workloads to supercharge web applications. For example, running a <a href="https://developer.mozilla.org/docs/Web/API/WebSockets_API" target="_blank" rel="noopener noreferrer">WebSocket</a> server using <a href="https://socket.io/" target="_blank" rel="noopener noreferrer">Socket.IO</a> to display realtime updates, or hosting a <a href="https://spring.io/guides/tutorials/rest/" target="_blank" rel="noopener noreferrer">REST service using Spring Boot</a>. A choice of provisioning low-cost and highly-efficient servers, and the expanded Always Free limits. What's there not to love?</p>]]></content:encoded>
            <category>oracle cloud</category>
            <category>oci</category>
            <category>arm</category>
            <category>aarch64</category>
            <category>ampere</category>
            <category>orclapex</category>
            <category>orclords</category>
            <category>autonomous database</category>
            <category>podman</category>
            <category>docker</category>
            <category>open container initiative</category>
        </item>
        <item>
            <title><![CDATA[Making AI Accessible to APEX]]></title>
            <link>https://fuzziebrain.com/content/id/2010</link>
            <guid>https://fuzziebrain.com/content/id/2010</guid>
            <pubDate>Sat, 08 May 2021 11:24:17 GMT</pubDate>
            <description><![CDATA[Figuring out sentiments.]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="Figuring out sentiments." src="https://fuzziebrain.com/assets/images/emoji-1200x800-d8d45696b386878f5cc9eabc625f019d.jpg" width="1200" height="800" class="img_ev3q"></p>
<p>The <a href="https://oracle.com/cloud/" target="_blank" rel="noopener noreferrer"><em>Oracle Cloud Infrastructure</em></a> (OCI) is a great platform in many ways. However, as much as I love it, I have long griped about the lack of out-of-the-box support for AI services that many of Oracle's competitors have. Well, as of May 6, 2021, I am glad to see that things are starting to turn around with the <a href="https://docs.oracle.com/iaas/releasenotes/changes/f801b1f5-b40d-49a5-bbb1-e2b2001ce2cf/" target="_blank" rel="noopener noreferrer">launch</a> of the OCI <em>Language</em> service.</p>
<p>Today, there are different ways to "AI-enable" an <a href="https://apex.oracle.com/" target="_blank" rel="noopener noreferrer"><em>Oracle Application Express</em></a> (APEX). For a long time now, Oracle has had several PL/SQL packages under the Oracle Enterprise Database's Machine Learning option, or what used to be known as Oracle Advanced Analytics. This option is in fact, <a href="https://blogs.oracle.com/database/machine-learning,-spatial-and-graph-no-license-required-v2" target="_blank" rel="noopener noreferrer">no longer</a> an option and is included in all editions of the database.</p>
<p>Specifically, <a href="https://www.oracle.com/database/technologies/datawarehouse-bigdata/oml4sql.html" target="_blank" rel="noopener noreferrer"><em>Oracle Machine Learning for SQL</em></a> (OML4SQL) allows the PL/SQL developer to train and apply ML models without the data leaving the database. It supports a variety of ML algorithms, and generally, does not require developers to have advanced theoretical knowledge of ML. And because it relies only on PL/SQL and SQL, it can be easily integrated into APEX. However, developers are limited to ML algorithms that have been implemented by Oracle.</p>
<p>About a month ago, Oracle announced the general availability of <em>AutoML</em> and <em>OML Services</em> on the <em>Autonomous Database</em> (ADB). Developers who are not too ML-savvy can use the AutoML UI (user interface), available through the Oracle Machine Learning Notebooks that is included with every ADB. AutoMl automates the process of selecting, training, testing, and evaluating ML models. The generated models can then be exposed through OML Services' REST APIs.</p>
<p>However, sometimes, all we need is a ready-to-use AI/ML model that performs a rather generic task. Very common these days is the need to perform <em>Sentiment Analysis</em> on a body of text. Microsoft Azure's Cognitive Services has Text Analytics and AWS has Amazon Comprehend. What does Oracle have? At least now we can say, "OCI Language Services." It took a while, but better late than never!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="identity-and-policy">Identity and Policy<a href="https://fuzziebrain.com/content/id/2010#identity-and-policy" class="hash-link" aria-label="Direct link to Identity and Policy" title="Direct link to Identity and Policy">​</a></h2>
<p>As a best practice, we should create an OCI user specifically for interacting with the OCI REST API on behalf of the APEX application. The user should have limited OCI capabilities and should only be allowed to have API access and nothing more. You will need to generate the API keys and can easily do this from the user's details page in the OCI console.</p>
<p><img decoding="async" loading="lazy" alt="Generate and download the API key pair from OCI console." src="https://fuzziebrain.com/assets/images/generate-download-api-keys-96cc67d2152726a764c819f68d2dc552.png" width="1280" height="800" class="img_ev3q"></p>
<p>You should also download the keys in PEM format. Also, gather the information (click the <em>View Configuration File</em> link on the user's details page) that you will need to setup the APEX Web Credentials for OCI, specifically:</p>
<ul>
<li>User OCID</li>
<li>Tenant OCID; and</li>
<li>The API key's fingerprint</li>
</ul>
<p><img decoding="async" loading="lazy" alt="Gather the OCI information that you will need." src="https://fuzziebrain.com/assets/images/gather-information-87f5622a950a8956edf13604e40aae48.png" width="1280" height="800" class="img_ev3q"></p>
<p>Open the private key that you had downloaded from the OCI console and remove (a) the enclosing tags <code>-----BEGIN PRIVATE KEY-----</code> and <code>-----END PRIVATE KEY-----</code>; and (b) <strong>all</strong> newline characters. The end result should be a very long string of characters. This is the <em>OCI Private Key</em> that you will need to provide in the APEX Web Credentials. Copy the text, but <strong>do not</strong> save the PEM file.</p>
<p>Create the Web Credentials with the required information about your user and tenancy.</p>
<p><img decoding="async" loading="lazy" alt="Setup APEX Web Credentials." src="https://fuzziebrain.com/assets/images/web-credentials-71cc4c78df4dc7ce1cd8059658f14425.png" width="1280" height="800" class="img_ev3q"></p>
<p>Next, create an IAM Group, e.g., <em>AiLanguageUsers</em>, and assign the user to the group.</p>
<p>To use the Language Services, we will need to create a policy to allow users access. We have the option of creating a blanket policy with the following statement:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">allow any-user to use ai-service-language-family in tenancy</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>OR</strong></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">allow group AiLanguageUsers to use ai-service-language-family in tenancy</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I recommend the latter.</p>
<p><img decoding="async" loading="lazy" alt="Create a policy to allow a group access to the Language Services." src="https://fuzziebrain.com/assets/images/policy-b3b52e0a770a20b07507f469e41d6074.png" width="1280" height="800" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="demo-application">Demo Application<a href="https://fuzziebrain.com/content/id/2010#demo-application" class="hash-link" aria-label="Direct link to Demo Application" title="Direct link to Demo Application">​</a></h2>
<p>Create a simple APEX application to demonstrate the utility of the Language Service through its REST API.</p>
<p><img decoding="async" loading="lazy" src="https://fuzziebrain.com/assets/images/demo-page-ca194db60884f70b1042c0df7e4ba2cb.png" width="1280" height="800" class="img_ev3q"></p>
<p>The key items are:</p>
<ul>
<li>Two textarea page items</li>
<li>A button that triggers a dynamic action</li>
<li>A dynamic action that sets one item using a PL/SQL function with the code below:</li>
</ul>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  c_base_url constant varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">59</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'https://language.aiservice.us-phoenix-1.oci.oraclecloud.com'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  c_endpoint_path constant varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">50</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/20210101/actions/detectLanguageSentiments'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  c_web_credential constant varchar2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">30</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'DG_ADBAGENT01'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_response clob</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_request_headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Content-Type'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">g_request_headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">value</span><span class="token plain"> :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'application/json'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  l_response :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> apex_web_service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">make_rest_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p_url </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> c_base_url </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> c_endpoint_path</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_http_method </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'POST'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_body </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'{ "text": "'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> apex_escape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">:P1_INPUT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'" }'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p_credential_static_id </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> c_web_credential</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> l_response</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This DA simply takes the input text and makes a POST request to the appropriate endpoint for performing sentiment analysis. The expected output is a JSON containing the model's prediction.</p>
<p><img decoding="async" loading="lazy" alt="We made it!" src="https://fuzziebrain.com/assets/images/apex-we-got-there-5f09ec0dbf80b996fd222ca227ce3812.png" width="1280" height="800" class="img_ev3q"></p>
<p><del>Unfortunately, it doesn't seem to work right now and I'm in touch with <a href="https://twitter.com/cczarski" target="_blank" rel="noopener noreferrer">Carsten</a> to figure this out.</del></p>
<blockquote>
<p><del>[TODO] I will update the post as soon as there's a positive outcome.</del></p>
</blockquote>
<p>[UPDATE, 2021-05-10] A noob error! I should have checked the debugger logs. As it turns out, I was missing the HTTP header <code>Content-Type</code>. All systems go! The above code snippet and screenshot have been updated to reflect the success! Special thanks to <a href="https://twitter.com/cczarski" target="_blank" rel="noopener noreferrer">Carsten</a> who helped validate that this REST call is supported and should have been successful.</p>
<p>Meanwhile, I've tried looking at the OCI PL/SQL SDK that I had discussed in the <a href="https://fuzziebrain.com/content/id/2009">previous post</a>, but it doesn't appear to have been updated on my ADB.</p>
<blockquote>
<p>[TODO] I will also update this post as that becomes available.</p>
</blockquote>
<p>What's working though is the OCI CLI, but you will need to upgrade it to access the new commands. Here's an example and the output that we should have obtained through the example APEX application.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ oci ai language detect-sentiments --text "I feel great with the launch of OCI AI Language Services!"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "data": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "aspects": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "length": 6,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "offset": 22,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "scores": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "Negative": 0.0004437448224052787,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "Neutral": 0.0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "Positive": 0.9995562434196472</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "sentiment": "Positive",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "text": "launch"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "length": 24,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "offset": 32,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "scores": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "Negative": 0.00011140753485960886,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "Neutral": 0.0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "Positive": 0.99988853931427</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "sentiment": "Positive",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "text": "OCI AI Language Services"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Exciting times! As I have repeatedly said, the OCI keeps getting better. I'm certainly looking forward to resolving the issues I have encountered, and hopefully, more AI services to be launched in the near future!</p>
<blockquote>
<p><strong>Credits</strong></p>
<p>Photo by <a href="https://unsplash.com/@markuswinkler?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Markus Winkler</a> on <a href="https://unsplash.com/s/photos/emoji?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></p>
</blockquote>]]></content:encoded>
            <category>oracle cloud</category>
            <category>artificial intelligence</category>
            <category>machine learning</category>
            <category>orclapex</category>
            <category>oci</category>
            <category>natural language processing</category>
        </item>
        <item>
            <title><![CDATA[Manipulating the Oracle Cloud with PL/SQL]]></title>
            <link>https://fuzziebrain.com/content/id/2009</link>
            <guid>https://fuzziebrain.com/content/id/2009</guid>
            <pubDate>Thu, 15 Oct 2020 23:06:16 GMT</pubDate>
            <description><![CDATA[Slide on OCI REST APIs updated]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="Slide on OCI REST APIs updated" src="https://fuzziebrain.com/assets/images/slide-updated-73c3bbfb58ca0798f537091a8432738e.png" width="1280" height="800" class="img_ev3q"></p>
<p>It was only days ago that I had finalised my slides for my upcoming Oracle Groundbreakers APAC Virtual Tour <a href="https://oracle-groundbreakers-apac-virtual-tour-2020.heysummit.com/talks/store-your-treasures-in-the-cloud-1/" target="_blank" rel="noopener noreferrer">talk</a> on using <a href="https://oracle.com/cloud" target="_blank" rel="noopener noreferrer">Oracle Cloud Infrastructure</a> (OCI) Object Storage for storing large files in <a href="https://apex.oracle.com/" target="_blank" rel="noopener noreferrer">Oracle Application Express</a> (APEX). Today, I found out with a lot of excitement, that one of my slides was now factually wrong!</p>
<p>For a while now, Oracle has provided SDKs (Software Development Kits) for a wide range of programming languages, but strangely, that didn't include PL/SQL. Thankfuly, the wait and bewilderment is now finally over! Well, at least for folks who are running their applications on the <a href="https://www.oracle.com/autonomous-database/" target="_blank" rel="noopener noreferrer">Oracle Autonomous Database</a> (ADB). And yes, even if you're on an <a href="https://oracle.com/cloud/free" target="_blank" rel="noopener noreferrer"><em>Always Free</em></a> instance.</p>
<p>Don't believe me? Use your favourite database client and login to your ADB instance using the <em>admin</em> account. Run the query below to get a list of available packages that line up with the APIs listed <a href="https://docs.cloud.oracle.com/iaas/pl-sql-sdk/index.html" target="_blank" rel="noopener noreferrer">here</a>.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> object_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> dba_objects</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> object_name </span><span class="token operator" style="color:#393A34">like</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'DBMS_CLOUD_OCI_%'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> object_type </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'PACKAGE'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> object_name</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>You should see a long list of 70 packages (at the time of writing), something like this:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">OBJECT_NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">----------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DBMS_CLOUD_OCI_AD_AUDIT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DBMS_CLOUD_OCI_AG_DEPLOYMENT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DBMS_CLOUD_OCI_AG_GATEWAY</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DBMS_CLOUD_OCI_AG_WORK_REQUESTS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DBMS_CLOUD_OCI_AM_APPLICATION_MIGRATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DBMS_CLOUD_OCI_AN_ANALYTICS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DBMS_CLOUD_OCI_ASC_AUTO_SCALING</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DBMS_CLOUD_OCI_AS_ANNOUNCEMENT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DBMS_CLOUD_OCI_BC_BLOCKCHAIN_PLATFORM</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DBMS_CLOUD_OCI_BDS_BDS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DBMS_CLOUD_OCI_BD_BUDGET</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DBMS_CLOUD_OCI_WS_WAAS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">70 rows selected.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="required-database-privileges">Required Database Privileges<a href="https://fuzziebrain.com/content/id/2009#required-database-privileges" class="hash-link" aria-label="Direct link to Required Database Privileges" title="Direct link to Required Database Privileges">​</a></h2>
<p>To use them with your application schema, e.g. <em>myapp</em>, you will need to do the following tasks. Begin with the <em>admin</em> account.</p>
<ol>
<li>Allow <em>myapp</em> to create the required OCI Cloud Services credentials (OCI credentials). We will discuss what this is in greater detail later. The procedures that you will need are in the package <code>DBMS_CLOUD</code>.<!-- -->
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">grant</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">execute</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> dbms_cloud </span><span class="token keyword" style="color:#00009f">to</span><span class="token plain"> myapp</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>Identify the API and corresponding PL/SQL package that you wish to use. For example, to access the Object Storage, I will require privileges to the package <code>DBMS_CLOUD_OCI_OBS_OBJECT_STORAGE</code>.<!-- -->
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">grant</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">execute</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> dbms_cloud_oci_obs_object_storage </span><span class="token keyword" style="color:#00009f">to</span><span class="token plain"> myapp</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>Check the API reference and identify database types that you might need to use and grant these privileges as well. For example, in my code, I will be declaring a variable of the type <code>dbms_cloud_oci_obs_object_storage_list_buckets_response_t</code>.<!-- -->
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">grant</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">execute</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> dbms_cloud_oci_obs_object_storage_list_buckets_response_t </span><span class="token keyword" style="color:#00009f">to</span><span class="token plain"> myapp</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="oci-setup">OCI Setup<a href="https://fuzziebrain.com/content/id/2009#oci-setup" class="hash-link" aria-label="Direct link to OCI Setup" title="Direct link to OCI Setup">​</a></h2>
<p>Setup the Object Storage bucket, user, group and policy using the steps described in my Oracle Magazine article <a href="https://blogs.oracle.com/oraclemagazine/better-file-storage-in-oracle-cloud" target="_blank" rel="noopener noreferrer">Better File Storage in Oracle Cloud</a>, specifically:</p>
<ul>
<li>Identity Setup; and</li>
<li>Bucket Setup</li>
</ul>
<p>Be sure to generate the API keypair and associate it with the OCI user that will act on your application's behalf. Also ensure that this user has the necessary policies applied. Finally, please note the following information to setup the required OCI credentials:</p>
<ul>
<li>User's ocid</li>
<li>Tenancy ocid</li>
<li>Private key</li>
<li>Fingerprint</li>
</ul>
<p>Next, connect to the database as the application user/schema. You will need to execute the procedure <code>DBMS_CLOUD.CREATE_CREDENTIAL</code>. There are two overloaded procedures and you <strong>must</strong> execute the procedure for the <em>OCI Signing Key Credentials</em>.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dbms_cloud</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create_credential</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    credential_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MY_OCI_CRED'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> user_ocid </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ocid1.user.oc1..aaaaaaaa**********'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tenancy_ocid </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ocid1.tenancy.oc1..aaaaaaaa**********'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> private_key </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MIIE**********='</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> fingerprint </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'**:**:**:**:**:**:**:**:**:**:**:**:**:**:**:**'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<blockquote>
<p><strong>NOTE</strong></p>
<p>The private key is to be prepared the same way we do when setting up the <em>Web Credentials</em> in APEX for OCI. Remove the header, footer and any newlines in the PEM-formatted contents.</p>
</blockquote>
<p>Check that the OCI credentials were created successfully using the following query:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> credential_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> username </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> user_credentials</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now run the following sample code to get the list of Object Storage buckets in the compartment defined in the parameter <code>compartment_id</code>. You will need to also specify your tenancy's Object Storage namespace and region.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  where_are_my_buckets dbms_cloud_oci_obs_object_storage_list_buckets_response_t</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  where_are_my_buckets :</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      dbms_cloud_oci_obs_object_storage</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">list_buckets</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        namespace_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'mynamespace'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> compartment_id </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ocid1.compartment.oc1..aaaaaaaa**********'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> region </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'us-ashburn-1'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> credential_name </span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'MY_OCI_CRED'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dbms_output</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">put_line</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'status code: '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> where_are_my_buckets</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">status_code</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dbms_output</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">put_line</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'bucket count '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> where_are_my_buckets</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">response_body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">count</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">in</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">where_are_my_buckets</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">response_body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">count</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">loop</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dbms_output</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">put_line</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'bucket: '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> where_are_my_buckets</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">response_body</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">loop</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">end</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>You should get an output similar to this:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">status code: 200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bucket count 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bucket: apex_file_storage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bucket: data-import</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="closing">Closing<a href="https://fuzziebrain.com/content/id/2009#closing" class="hash-link" aria-label="Direct link to Closing" title="Direct link to Closing">​</a></h2>
<p>I have barely scratched the surface of what we can do with this new PL/SQL SDK for OCI REST APIs, especially for OCI adminsitrators and APEX developers looking to <a href="https://insum.ca/oracle-cloud-native-and-oracle-application-express/" target="_blank" rel="noopener noreferrer">integrate Cloud Native</a> features in their applications. The APEX team did us developers a huge service when the web credentials for OCI was introduced in version 19.2. It greatly simplified how we accessed the OCI REST services. However, not every endpoint worked out-of-the-box and I have found problems accessing some endpoints. We also had to write our own code for constructing the request payload and parsing the responses. This SDK handles and shields us from all the low-level marshalling tasks, and provides a structured approach for retrieving information from the API responses.</p>
<p>The power of the <a href="https://blogs.oracle.com/database/what-is-a-converged-database" target="_blank" rel="noopener noreferrer">Converged Database</a> is here. One database to rule them all! <a href="https://twitter.com/hashtag/thinkautonomous" target="_blank" rel="noopener noreferrer">#ThinkAutonomous</a></p>]]></content:encoded>
            <category>oracle</category>
            <category>cloud</category>
            <category>plsql</category>
            <category>rest</category>
            <category>orclapex</category>
        </item>
        <item>
            <title><![CDATA[New Book on Getting the Most Out of the Oracle Cloud Free Tier]]></title>
            <link>https://fuzziebrain.com/content/id/2008</link>
            <guid>https://fuzziebrain.com/content/id/2008</guid>
            <pubDate>Sun, 27 Sep 2020 23:56:39 GMT</pubDate>
            <description><![CDATA[Getting Started with Oracle Cloud Free Tier Book Cover]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="Getting Started with Oracle Cloud Free Tier Book Cover" src="https://fuzziebrain.com/assets/images/9781484260104-book-cover-7cbf8c075405ca08df1fe96b16c58f5e.png" width="2560" height="1440" class="img_ev3q"></p>
<p>I won't deny that it has been a challenging and tough journey, but today, I'm glad to be able to declare that the book "<a href="https://www.apress.com/book/9781484260104" target="_blank" rel="noopener noreferrer">Getting Started with Oracle Cloud Free Tier</a>" has been published and available to purchase!</p>
<p>How time flies!</p>
<p>Looking back, it's been almost a year since <a href="https://twitter.com/JonathanGennick" target="_blank" rel="noopener noreferrer">Jonathan Gennick</a> at <a href="https://apress.com/" target="_blank" rel="noopener noreferrer">Apress</a> first approached me to see if I was keen to write a book on the then recently-announced <a href="https://oracle.com/cloud/free" target="_blank" rel="noopener noreferrer">Oracle Cloud Free Tier</a>. I was excited about what Oracle was doing with this new offering, and even more eager to share what I knew about the Oracle Cloud, so I quickly said, "Yes!"</p>
<p>There was a lot of ground to cover and we had aimed to publish the book ahead of <a href="https://www.oracle.com/openworld/" target="_blank" rel="noopener noreferrer">Oracle OpenWorld</a> (OOW) 2020. Fortunately, I was able to rope in <a href="https://twitter.com/lucdemanche" target="_blank" rel="noopener noreferrer">Luc Demanche</a> as a co-author. Luc focused on the infrastucture-related topics, while I tackled areas closer to my heart, software applications, including the longest chapter written for readers who are totally new to <a href="https://apex.oracle.com/" target="_blank" rel="noopener noreferrer">Oracle Application Express</a>. It was tough compressing as much information as I could about such a great platform in only one chapter.</p>
<p>It was also particularly daunting to venture into other web application development platforms like <a href="https://flask.palletsprojects.com/" target="_blank" rel="noopener noreferrer">Flask</a> for Python developers, and <a href="https://reactjs.org/" target="_blank" rel="noopener noreferrer">React</a> for JavaScript developers. I wanted to demonstrate that the Oracle Cloud wasn't just for the APEX geeks. There's something for everyone!</p>
<p>More than just being knowledgeable about the Oracle Cloud, Luc was also a seasoned author. This is his second book, and his experience and cheer-leading helped contribute greatly to the successful completion of this new adventure. I am greatly indebted to him. I would also like to take the opportunity to thank Jonathon again for the opportunity, and to his team of editors and project managers, who helped guide us along the editorial process. And last but not least, a special thank you to <a href="https://twitter.com/CRuepprich" target="_blank" rel="noopener noreferrer">Christoph Ruepprich</a>, who sacrificed his time to help ensure that what we wrote was technically sound.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="oracle-groundbreakers-apac-virtual-tour-2020">Oracle Groundbreakers APAC Virtual Tour 2020<a href="https://fuzziebrain.com/content/id/2008#oracle-groundbreakers-apac-virtual-tour-2020" class="hash-link" aria-label="Direct link to Oracle Groundbreakers APAC Virtual Tour 2020" title="Direct link to Oracle Groundbreakers APAC Virtual Tour 2020">​</a></h2>
<p>In other news, I'm honoured and glad to be participating in the upcoming <a href="https://www.apacgbt.com/" target="_blank" rel="noopener noreferrer">Oracle Groundbreakers APAC Virtual Tour</a> happening next month, October 2020. I will be presenting my session "Store Your Treasures in the Cloud", that will provide a detailed walkthrough on integrating Oracle Cloud <a href="https://www.oracle.com/cloud/storage/object-storage.html" target="_blank" rel="noopener noreferrer">Object Storage</a> with APEX application. And yes, you can certainly do this with <em>Always Free</em>-only resources.</p>
<p>Born and bred in <a href="https://www.google.com/maps/place/Singapore/" target="_blank" rel="noopener noreferrer">Singapore</a>, there's a warm fuzzy feeling knowing that I'll be speaking in a region closer to home. Especially so this year with COVID-19 disrupting my travel plans. As one of my favourite singers <a href="https://wikipedia.org/wiki/Alan_Dawa_Dolma" target="_blank" rel="noopener noreferrer">阿兰</a> would say, "无论我们飞得有多高，有多远，永远不要忘记自己的家乡，不要忘记自己的梗。"</p>]]></content:encoded>
            <category>oracle</category>
            <category>cloud</category>
            <category>free-tier</category>
            <category>always-free</category>
            <category>orclapex</category>
            <category>python</category>
            <category>nodejs</category>
            <category>javascript</category>
            <category>reactjs</category>
            <category>web</category>
            <category>applications</category>
            <category>architecture</category>
            <category>book</category>
        </item>
    </channel>
</rss>